// openconfig-interfaces.proto file
// Derived from the OpenConfig interfaces model github.com/openconfig/public/release/models/interfaces

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: openconfig_interfaces.proto

package _go

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data Types
type InterfaceType int32

const (
	InterfaceType_ETHERNET InterfaceType = 0
	InterfaceType_LOOPBACK InterfaceType = 1
)

// Enum value maps for InterfaceType.
var (
	InterfaceType_name = map[int32]string{
		0: "ETHERNET",
		1: "LOOPBACK",
	}
	InterfaceType_value = map[string]int32{
		"ETHERNET": 0,
		"LOOPBACK": 1,
	}
)

func (x InterfaceType) Enum() *InterfaceType {
	p := new(InterfaceType)
	*p = x
	return p
}

func (x InterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_openconfig_interfaces_proto_enumTypes[0].Descriptor()
}

func (InterfaceType) Type() protoreflect.EnumType {
	return &file_openconfig_interfaces_proto_enumTypes[0]
}

func (x InterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceType.Descriptor instead.
func (InterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0}
}

type InterfaceState int32

const (
	InterfaceState_DOWN InterfaceState = 0
	InterfaceState_UP   InterfaceState = 1
)

// Enum value maps for InterfaceState.
var (
	InterfaceState_name = map[int32]string{
		0: "DOWN",
		1: "UP",
	}
	InterfaceState_value = map[string]int32{
		"DOWN": 0,
		"UP":   1,
	}
)

func (x InterfaceState) Enum() *InterfaceState {
	p := new(InterfaceState)
	*p = x
	return p
}

func (x InterfaceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceState) Descriptor() protoreflect.EnumDescriptor {
	return file_openconfig_interfaces_proto_enumTypes[1].Descriptor()
}

func (InterfaceState) Type() protoreflect.EnumType {
	return &file_openconfig_interfaces_proto_enumTypes[1]
}

func (x InterfaceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceState.Descriptor instead.
func (InterfaceState) EnumDescriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{1}
}

//Main Data Structure
type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config        *Interface_Config        `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	State         *Interface_State         `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Holdtime      *Interface_HoldTime      `protobuf:"bytes,4,opt,name=holdtime,proto3" json:"holdtime,omitempty"`
	Subinterfaces *Interface_Subinterfaces `protobuf:"bytes,5,opt,name=subinterfaces,proto3" json:"subinterfaces,omitempty"`
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetConfig() *Interface_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Interface) GetState() *Interface_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Interface) GetHoldtime() *Interface_HoldTime {
	if x != nil {
		return x.Holdtime
	}
	return nil
}

func (x *Interface) GetSubinterfaces() *Interface_Subinterfaces {
	if x != nil {
		return x.Subinterfaces
	}
	return nil
}

type Interfaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface []*Interface `protobuf:"bytes,1,rep,name=interface,proto3" json:"interface,omitempty"`
}

func (x *Interfaces) Reset() {
	*x = Interfaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interfaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interfaces) ProtoMessage() {}

func (x *Interfaces) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interfaces.ProtoReflect.Descriptor instead.
func (*Interfaces) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{1}
}

func (x *Interfaces) GetInterface() []*Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type NetInterfaceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NetInterfaceGetRequest) Reset() {
	*x = NetInterfaceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterfaceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterfaceGetRequest) ProtoMessage() {}

func (x *NetInterfaceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterfaceGetRequest.ProtoReflect.Descriptor instead.
func (*NetInterfaceGetRequest) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{2}
}

func (x *NetInterfaceGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NetInterfaceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *Interface `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
}

func (x *NetInterfaceGetResponse) Reset() {
	*x = NetInterfaceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterfaceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterfaceGetResponse) ProtoMessage() {}

func (x *NetInterfaceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterfaceGetResponse.ProtoReflect.Descriptor instead.
func (*NetInterfaceGetResponse) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{3}
}

func (x *NetInterfaceGetResponse) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type NetInterfaceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NetInterfaceListRequest) Reset() {
	*x = NetInterfaceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterfaceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterfaceListRequest) ProtoMessage() {}

func (x *NetInterfaceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterfaceListRequest.ProtoReflect.Descriptor instead.
func (*NetInterfaceListRequest) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{4}
}

type NetInterfaceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface []*Interface `protobuf:"bytes,1,rep,name=interface,proto3" json:"interface,omitempty"`
}

func (x *NetInterfaceListResponse) Reset() {
	*x = NetInterfaceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterfaceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterfaceListResponse) ProtoMessage() {}

func (x *NetInterfaceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterfaceListResponse.ProtoReflect.Descriptor instead.
func (*NetInterfaceListResponse) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{5}
}

func (x *NetInterfaceListResponse) GetInterface() []*Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type NetInterfaceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface *Interface `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
}

func (x *NetInterfaceUpdateRequest) Reset() {
	*x = NetInterfaceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterfaceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterfaceUpdateRequest) ProtoMessage() {}

func (x *NetInterfaceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterfaceUpdateRequest.ProtoReflect.Descriptor instead.
func (*NetInterfaceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{6}
}

func (x *NetInterfaceUpdateRequest) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type NetInterfaceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NetInterfaceUpdateResponse) Reset() {
	*x = NetInterfaceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterfaceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterfaceUpdateResponse) ProtoMessage() {}

func (x *NetInterfaceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterfaceUpdateResponse.ProtoReflect.Descriptor instead.
func (*NetInterfaceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{7}
}

func (x *NetInterfaceUpdateResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type Interface_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type         InterfaceType `protobuf:"varint,2,opt,name=type,proto3,enum=opi_api.network.v1.InterfaceType" json:"type,omitempty"`
	Mtu          uint32        `protobuf:"varint,3,opt,name=mtu,proto3" json:"mtu,omitempty"`
	LoopbackMode bool          `protobuf:"varint,4,opt,name=loopback_mode,json=loopbackMode,proto3" json:"loopback_mode,omitempty"`
	Description  string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Enabled      bool          `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Interface_Config) Reset() {
	*x = Interface_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Config) ProtoMessage() {}

func (x *Interface_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Config.ProtoReflect.Descriptor instead.
func (*Interface_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Interface_Config) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface_Config) GetType() InterfaceType {
	if x != nil {
		return x.Type
	}
	return InterfaceType_ETHERNET
}

func (x *Interface_Config) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Interface_Config) GetLoopbackMode() bool {
	if x != nil {
		return x.LoopbackMode
	}
	return false
}

func (x *Interface_Config) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Interface_Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type Interface_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type         InterfaceType             `protobuf:"varint,2,opt,name=type,proto3,enum=opi_api.network.v1.InterfaceType" json:"type,omitempty"`
	Mtu          uint32                    `protobuf:"varint,3,opt,name=mtu,proto3" json:"mtu,omitempty"`
	LoopbackMode bool                      `protobuf:"varint,4,opt,name=loopback_mode,json=loopbackMode,proto3" json:"loopback_mode,omitempty"`
	Description  string                    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Enabled      bool                      `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Ifindex      uint32                    `protobuf:"varint,7,opt,name=ifindex,proto3" json:"ifindex,omitempty"`
	AdminStatus  InterfaceState            `protobuf:"varint,8,opt,name=admin_status,json=adminStatus,proto3,enum=opi_api.network.v1.InterfaceState" json:"admin_status,omitempty"`
	OperStatus   InterfaceState            `protobuf:"varint,9,opt,name=oper_status,json=operStatus,proto3,enum=opi_api.network.v1.InterfaceState" json:"oper_status,omitempty"`
	LastChange   uint64                    `protobuf:"varint,10,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
	Logical      bool                      `protobuf:"varint,11,opt,name=logical,proto3" json:"logical,omitempty"`
	Management   bool                      `protobuf:"varint,12,opt,name=management,proto3" json:"management,omitempty"`
	Cpu          bool                      `protobuf:"varint,13,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Counters     *Interface_State_Counters `protobuf:"bytes,14,opt,name=counters,proto3" json:"counters,omitempty"`
}

func (x *Interface_State) Reset() {
	*x = Interface_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_State) ProtoMessage() {}

func (x *Interface_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_State.ProtoReflect.Descriptor instead.
func (*Interface_State) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Interface_State) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface_State) GetType() InterfaceType {
	if x != nil {
		return x.Type
	}
	return InterfaceType_ETHERNET
}

func (x *Interface_State) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Interface_State) GetLoopbackMode() bool {
	if x != nil {
		return x.LoopbackMode
	}
	return false
}

func (x *Interface_State) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Interface_State) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Interface_State) GetIfindex() uint32 {
	if x != nil {
		return x.Ifindex
	}
	return 0
}

func (x *Interface_State) GetAdminStatus() InterfaceState {
	if x != nil {
		return x.AdminStatus
	}
	return InterfaceState_DOWN
}

func (x *Interface_State) GetOperStatus() InterfaceState {
	if x != nil {
		return x.OperStatus
	}
	return InterfaceState_DOWN
}

func (x *Interface_State) GetLastChange() uint64 {
	if x != nil {
		return x.LastChange
	}
	return 0
}

func (x *Interface_State) GetLogical() bool {
	if x != nil {
		return x.Logical
	}
	return false
}

func (x *Interface_State) GetManagement() bool {
	if x != nil {
		return x.Management
	}
	return false
}

func (x *Interface_State) GetCpu() bool {
	if x != nil {
		return x.Cpu
	}
	return false
}

func (x *Interface_State) GetCounters() *Interface_State_Counters {
	if x != nil {
		return x.Counters
	}
	return nil
}

type Interface_HoldTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Interface_HoldTime_Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	State  *Interface_HoldTime_State  `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Interface_HoldTime) Reset() {
	*x = Interface_HoldTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_HoldTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_HoldTime) ProtoMessage() {}

func (x *Interface_HoldTime) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_HoldTime.ProtoReflect.Descriptor instead.
func (*Interface_HoldTime) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Interface_HoldTime) GetConfig() *Interface_HoldTime_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Interface_HoldTime) GetState() *Interface_HoldTime_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Interface_Subinterfaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subinterface []*Interface_Subinterfaces_Subinterface `protobuf:"bytes,2,rep,name=subinterface,proto3" json:"subinterface,omitempty"`
}

func (x *Interface_Subinterfaces) Reset() {
	*x = Interface_Subinterfaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Subinterfaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Subinterfaces) ProtoMessage() {}

func (x *Interface_Subinterfaces) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Subinterfaces.ProtoReflect.Descriptor instead.
func (*Interface_Subinterfaces) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Interface_Subinterfaces) GetSubinterface() []*Interface_Subinterfaces_Subinterface {
	if x != nil {
		return x.Subinterface
	}
	return nil
}

type Interface_State_Counters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InOctets           uint64 `protobuf:"varint,1,opt,name=in_octets,json=inOctets,proto3" json:"in_octets,omitempty"`
	InPackets          uint64 `protobuf:"varint,2,opt,name=in_packets,json=inPackets,proto3" json:"in_packets,omitempty"`
	InUnicastPkts      uint64 `protobuf:"varint,3,opt,name=in_unicast_pkts,json=inUnicastPkts,proto3" json:"in_unicast_pkts,omitempty"`
	InBroadcastPkts    uint64 `protobuf:"varint,4,opt,name=in_broadcast_pkts,json=inBroadcastPkts,proto3" json:"in_broadcast_pkts,omitempty"`
	InMulticastPkts    uint64 `protobuf:"varint,5,opt,name=in_multicast_pkts,json=inMulticastPkts,proto3" json:"in_multicast_pkts,omitempty"`
	InDiscards         uint64 `protobuf:"varint,6,opt,name=in_discards,json=inDiscards,proto3" json:"in_discards,omitempty"`
	InErrors           uint64 `protobuf:"varint,7,opt,name=in_errors,json=inErrors,proto3" json:"in_errors,omitempty"`
	InUnknownProtos    uint64 `protobuf:"varint,8,opt,name=in_unknown_protos,json=inUnknownProtos,proto3" json:"in_unknown_protos,omitempty"`
	InFcsErrors        uint64 `protobuf:"varint,9,opt,name=in_fcs_errors,json=inFcsErrors,proto3" json:"in_fcs_errors,omitempty"`
	OutOctets          uint64 `protobuf:"varint,10,opt,name=out_octets,json=outOctets,proto3" json:"out_octets,omitempty"`
	OutPackets         uint64 `protobuf:"varint,11,opt,name=out_packets,json=outPackets,proto3" json:"out_packets,omitempty"`
	OutUnicastPkts     uint64 `protobuf:"varint,12,opt,name=out_unicast_pkts,json=outUnicastPkts,proto3" json:"out_unicast_pkts,omitempty"`
	OutBroadcastPkts   uint64 `protobuf:"varint,13,opt,name=out_broadcast_pkts,json=outBroadcastPkts,proto3" json:"out_broadcast_pkts,omitempty"`
	OutMulticastPkts   uint64 `protobuf:"varint,14,opt,name=out_multicast_pkts,json=outMulticastPkts,proto3" json:"out_multicast_pkts,omitempty"`
	OutDiscards        uint64 `protobuf:"varint,15,opt,name=out_discards,json=outDiscards,proto3" json:"out_discards,omitempty"`
	OutErrors          uint64 `protobuf:"varint,16,opt,name=out_errors,json=outErrors,proto3" json:"out_errors,omitempty"`
	CarrierTransitions uint64 `protobuf:"varint,17,opt,name=carrier_transitions,json=carrierTransitions,proto3" json:"carrier_transitions,omitempty"`
	LastClear          uint64 `protobuf:"varint,18,opt,name=last_clear,json=lastClear,proto3" json:"last_clear,omitempty"`
}

func (x *Interface_State_Counters) Reset() {
	*x = Interface_State_Counters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_State_Counters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_State_Counters) ProtoMessage() {}

func (x *Interface_State_Counters) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_State_Counters.ProtoReflect.Descriptor instead.
func (*Interface_State_Counters) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Interface_State_Counters) GetInOctets() uint64 {
	if x != nil {
		return x.InOctets
	}
	return 0
}

func (x *Interface_State_Counters) GetInPackets() uint64 {
	if x != nil {
		return x.InPackets
	}
	return 0
}

func (x *Interface_State_Counters) GetInUnicastPkts() uint64 {
	if x != nil {
		return x.InUnicastPkts
	}
	return 0
}

func (x *Interface_State_Counters) GetInBroadcastPkts() uint64 {
	if x != nil {
		return x.InBroadcastPkts
	}
	return 0
}

func (x *Interface_State_Counters) GetInMulticastPkts() uint64 {
	if x != nil {
		return x.InMulticastPkts
	}
	return 0
}

func (x *Interface_State_Counters) GetInDiscards() uint64 {
	if x != nil {
		return x.InDiscards
	}
	return 0
}

func (x *Interface_State_Counters) GetInErrors() uint64 {
	if x != nil {
		return x.InErrors
	}
	return 0
}

func (x *Interface_State_Counters) GetInUnknownProtos() uint64 {
	if x != nil {
		return x.InUnknownProtos
	}
	return 0
}

func (x *Interface_State_Counters) GetInFcsErrors() uint64 {
	if x != nil {
		return x.InFcsErrors
	}
	return 0
}

func (x *Interface_State_Counters) GetOutOctets() uint64 {
	if x != nil {
		return x.OutOctets
	}
	return 0
}

func (x *Interface_State_Counters) GetOutPackets() uint64 {
	if x != nil {
		return x.OutPackets
	}
	return 0
}

func (x *Interface_State_Counters) GetOutUnicastPkts() uint64 {
	if x != nil {
		return x.OutUnicastPkts
	}
	return 0
}

func (x *Interface_State_Counters) GetOutBroadcastPkts() uint64 {
	if x != nil {
		return x.OutBroadcastPkts
	}
	return 0
}

func (x *Interface_State_Counters) GetOutMulticastPkts() uint64 {
	if x != nil {
		return x.OutMulticastPkts
	}
	return 0
}

func (x *Interface_State_Counters) GetOutDiscards() uint64 {
	if x != nil {
		return x.OutDiscards
	}
	return 0
}

func (x *Interface_State_Counters) GetOutErrors() uint64 {
	if x != nil {
		return x.OutErrors
	}
	return 0
}

func (x *Interface_State_Counters) GetCarrierTransitions() uint64 {
	if x != nil {
		return x.CarrierTransitions
	}
	return 0
}

func (x *Interface_State_Counters) GetLastClear() uint64 {
	if x != nil {
		return x.LastClear
	}
	return 0
}

type Interface_HoldTime_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Up   uint32 `protobuf:"varint,1,opt,name=up,proto3" json:"up,omitempty"`
	Down uint32 `protobuf:"varint,2,opt,name=down,proto3" json:"down,omitempty"`
}

func (x *Interface_HoldTime_Config) Reset() {
	*x = Interface_HoldTime_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_HoldTime_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_HoldTime_Config) ProtoMessage() {}

func (x *Interface_HoldTime_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_HoldTime_Config.ProtoReflect.Descriptor instead.
func (*Interface_HoldTime_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Interface_HoldTime_Config) GetUp() uint32 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *Interface_HoldTime_Config) GetDown() uint32 {
	if x != nil {
		return x.Down
	}
	return 0
}

type Interface_HoldTime_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Up   uint32 `protobuf:"varint,1,opt,name=up,proto3" json:"up,omitempty"`
	Down uint32 `protobuf:"varint,2,opt,name=down,proto3" json:"down,omitempty"`
}

func (x *Interface_HoldTime_State) Reset() {
	*x = Interface_HoldTime_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_HoldTime_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_HoldTime_State) ProtoMessage() {}

func (x *Interface_HoldTime_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_HoldTime_State.ProtoReflect.Descriptor instead.
func (*Interface_HoldTime_State) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *Interface_HoldTime_State) GetUp() uint32 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *Interface_HoldTime_State) GetDown() uint32 {
	if x != nil {
		return x.Down
	}
	return 0
}

type Interface_Subinterfaces_Subinterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  uint64                                       `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Config *Interface_Subinterfaces_Subinterface_Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	State  *Interface_Subinterfaces_Subinterface_State  `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Interface_Subinterfaces_Subinterface) Reset() {
	*x = Interface_Subinterfaces_Subinterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Subinterfaces_Subinterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Subinterfaces_Subinterface) ProtoMessage() {}

func (x *Interface_Subinterfaces_Subinterface) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Subinterfaces_Subinterface.ProtoReflect.Descriptor instead.
func (*Interface_Subinterfaces_Subinterface) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Interface_Subinterfaces_Subinterface) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface) GetConfig() *Interface_Subinterfaces_Subinterface_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Interface_Subinterfaces_Subinterface) GetState() *Interface_Subinterfaces_Subinterface_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Interface_Subinterfaces_Subinterface_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Enabled     bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Interface_Subinterfaces_Subinterface_Config) Reset() {
	*x = Interface_Subinterfaces_Subinterface_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Subinterfaces_Subinterface_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Subinterfaces_Subinterface_Config) ProtoMessage() {}

func (x *Interface_Subinterfaces_Subinterface_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Subinterfaces_Subinterface_Config.ProtoReflect.Descriptor instead.
func (*Interface_Subinterfaces_Subinterface_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 3, 0, 0}
}

func (x *Interface_Subinterfaces_Subinterface_Config) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_Config) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Interface_Subinterfaces_Subinterface_Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type Interface_Subinterfaces_Subinterface_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       uint32                                               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Description string                                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Enabled     bool                                                 `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Name        string                                               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ifindex     uint32                                               `protobuf:"varint,5,opt,name=ifindex,proto3" json:"ifindex,omitempty"`
	AdminStatus InterfaceState                                       `protobuf:"varint,6,opt,name=admin_status,json=adminStatus,proto3,enum=opi_api.network.v1.InterfaceState" json:"admin_status,omitempty"`
	OperStatus  InterfaceState                                       `protobuf:"varint,7,opt,name=oper_status,json=operStatus,proto3,enum=opi_api.network.v1.InterfaceState" json:"oper_status,omitempty"`
	LastChange  uint64                                               `protobuf:"varint,10,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
	Logical     bool                                                 `protobuf:"varint,11,opt,name=logical,proto3" json:"logical,omitempty"`
	Management  bool                                                 `protobuf:"varint,12,opt,name=management,proto3" json:"management,omitempty"`
	Cpu         bool                                                 `protobuf:"varint,13,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Counters    *Interface_Subinterfaces_Subinterface_State_Counters `protobuf:"bytes,14,opt,name=counters,proto3" json:"counters,omitempty"`
}

func (x *Interface_Subinterfaces_Subinterface_State) Reset() {
	*x = Interface_Subinterfaces_Subinterface_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Subinterfaces_Subinterface_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Subinterfaces_Subinterface_State) ProtoMessage() {}

func (x *Interface_Subinterfaces_Subinterface_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Subinterfaces_Subinterface_State.ProtoReflect.Descriptor instead.
func (*Interface_Subinterfaces_Subinterface_State) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 3, 0, 1}
}

func (x *Interface_Subinterfaces_Subinterface_State) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Interface_Subinterfaces_Subinterface_State) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Interface_Subinterfaces_Subinterface_State) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface_Subinterfaces_Subinterface_State) GetIfindex() uint32 {
	if x != nil {
		return x.Ifindex
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State) GetAdminStatus() InterfaceState {
	if x != nil {
		return x.AdminStatus
	}
	return InterfaceState_DOWN
}

func (x *Interface_Subinterfaces_Subinterface_State) GetOperStatus() InterfaceState {
	if x != nil {
		return x.OperStatus
	}
	return InterfaceState_DOWN
}

func (x *Interface_Subinterfaces_Subinterface_State) GetLastChange() uint64 {
	if x != nil {
		return x.LastChange
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State) GetLogical() bool {
	if x != nil {
		return x.Logical
	}
	return false
}

func (x *Interface_Subinterfaces_Subinterface_State) GetManagement() bool {
	if x != nil {
		return x.Management
	}
	return false
}

func (x *Interface_Subinterfaces_Subinterface_State) GetCpu() bool {
	if x != nil {
		return x.Cpu
	}
	return false
}

func (x *Interface_Subinterfaces_Subinterface_State) GetCounters() *Interface_Subinterfaces_Subinterface_State_Counters {
	if x != nil {
		return x.Counters
	}
	return nil
}

type Interface_Subinterfaces_Subinterface_State_Counters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InOctets           uint64 `protobuf:"varint,1,opt,name=in_octets,json=inOctets,proto3" json:"in_octets,omitempty"`
	InPackets          uint64 `protobuf:"varint,2,opt,name=in_packets,json=inPackets,proto3" json:"in_packets,omitempty"`
	InUnicastPkts      uint64 `protobuf:"varint,3,opt,name=in_unicast_pkts,json=inUnicastPkts,proto3" json:"in_unicast_pkts,omitempty"`
	InBroadcastPkts    uint64 `protobuf:"varint,4,opt,name=in_broadcast_pkts,json=inBroadcastPkts,proto3" json:"in_broadcast_pkts,omitempty"`
	InMulticastPkts    uint64 `protobuf:"varint,5,opt,name=in_multicast_pkts,json=inMulticastPkts,proto3" json:"in_multicast_pkts,omitempty"`
	InDiscards         uint64 `protobuf:"varint,6,opt,name=in_discards,json=inDiscards,proto3" json:"in_discards,omitempty"`
	InErrors           uint64 `protobuf:"varint,7,opt,name=in_errors,json=inErrors,proto3" json:"in_errors,omitempty"`
	InUnknownProtos    uint64 `protobuf:"varint,8,opt,name=in_unknown_protos,json=inUnknownProtos,proto3" json:"in_unknown_protos,omitempty"`
	InFcsErrors        uint64 `protobuf:"varint,9,opt,name=in_fcs_errors,json=inFcsErrors,proto3" json:"in_fcs_errors,omitempty"`
	OutOctets          uint64 `protobuf:"varint,10,opt,name=out_octets,json=outOctets,proto3" json:"out_octets,omitempty"`
	OutPackets         uint64 `protobuf:"varint,11,opt,name=out_packets,json=outPackets,proto3" json:"out_packets,omitempty"`
	OutUnicastPkts     uint64 `protobuf:"varint,12,opt,name=out_unicast_pkts,json=outUnicastPkts,proto3" json:"out_unicast_pkts,omitempty"`
	OutBroadcastPkts   uint64 `protobuf:"varint,13,opt,name=out_broadcast_pkts,json=outBroadcastPkts,proto3" json:"out_broadcast_pkts,omitempty"`
	OutMulticastPkts   uint64 `protobuf:"varint,14,opt,name=out_multicast_pkts,json=outMulticastPkts,proto3" json:"out_multicast_pkts,omitempty"`
	OutDiscards        uint64 `protobuf:"varint,15,opt,name=out_discards,json=outDiscards,proto3" json:"out_discards,omitempty"`
	OutErrors          uint64 `protobuf:"varint,16,opt,name=out_errors,json=outErrors,proto3" json:"out_errors,omitempty"`
	CarrierTransitions uint64 `protobuf:"varint,17,opt,name=carrier_transitions,json=carrierTransitions,proto3" json:"carrier_transitions,omitempty"`
	LastClear          uint64 `protobuf:"varint,18,opt,name=last_clear,json=lastClear,proto3" json:"last_clear,omitempty"`
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) Reset() {
	*x = Interface_Subinterfaces_Subinterface_State_Counters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_interfaces_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Subinterfaces_Subinterface_State_Counters) ProtoMessage() {}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_interfaces_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Subinterfaces_Subinterface_State_Counters.ProtoReflect.Descriptor instead.
func (*Interface_Subinterfaces_Subinterface_State_Counters) Descriptor() ([]byte, []int) {
	return file_openconfig_interfaces_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0}
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInOctets() uint64 {
	if x != nil {
		return x.InOctets
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInPackets() uint64 {
	if x != nil {
		return x.InPackets
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInUnicastPkts() uint64 {
	if x != nil {
		return x.InUnicastPkts
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInBroadcastPkts() uint64 {
	if x != nil {
		return x.InBroadcastPkts
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInMulticastPkts() uint64 {
	if x != nil {
		return x.InMulticastPkts
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInDiscards() uint64 {
	if x != nil {
		return x.InDiscards
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInErrors() uint64 {
	if x != nil {
		return x.InErrors
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInUnknownProtos() uint64 {
	if x != nil {
		return x.InUnknownProtos
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetInFcsErrors() uint64 {
	if x != nil {
		return x.InFcsErrors
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutOctets() uint64 {
	if x != nil {
		return x.OutOctets
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutPackets() uint64 {
	if x != nil {
		return x.OutPackets
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutUnicastPkts() uint64 {
	if x != nil {
		return x.OutUnicastPkts
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutBroadcastPkts() uint64 {
	if x != nil {
		return x.OutBroadcastPkts
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutMulticastPkts() uint64 {
	if x != nil {
		return x.OutMulticastPkts
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutDiscards() uint64 {
	if x != nil {
		return x.OutDiscards
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetOutErrors() uint64 {
	if x != nil {
		return x.OutErrors
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetCarrierTransitions() uint64 {
	if x != nil {
		return x.CarrierTransitions
	}
	return 0
}

func (x *Interface_Subinterfaces_Subinterface_State_Counters) GetLastClear() uint64 {
	if x != nil {
		return x.LastClear
	}
	return 0
}

var File_openconfig_interfaces_proto protoreflect.FileDescriptor

var file_openconfig_interfaces_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x22, 0xf8, 0x1b, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x6f,
	0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x51, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x1a, 0xc6, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0xd1, 0x09, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x74, 0x75, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x6f, 0x70, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x6f, 0x6f, 0x70,
	0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x45,
	0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x48, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x1a, 0xac, 0x05, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x69, 0x6e, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e,
	0x5f, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x69,
	0x6e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70,
	0x6b, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x69, 0x6e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x69, 0x6e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x5f, 0x66, 0x63, 0x73, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e, 0x46,
	0x63, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f,
	0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6f, 0x75,
	0x74, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x5f,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6f, 0x75, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x75,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x2f, 0x0a, 0x13, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x1a, 0xf0, 0x01, 0x0a, 0x08, 0x48, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x6f, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x2c, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x1a, 0x2b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64,
	0x6f, 0x77, 0x6e, 0x1a, 0xb6, 0x0c, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x1a, 0xc6, 0x0b, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x57, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x5a, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x94, 0x09, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x45, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x63, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xac, 0x05,
	0x0a, 0x08, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x5f, 0x6f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69,
	0x6e, 0x4f, 0x63, 0x74, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x5f, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70,
	0x6b, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x69, 0x6e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x44,
	0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x69, 0x6e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x5f, 0x66, 0x63, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e, 0x46, 0x63, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x63, 0x74, 0x65,
	0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x4f, 0x63, 0x74,
	0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x6f, 0x75, 0x74, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x6b, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6b,
	0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6f, 0x75, 0x74, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x13,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x49, 0x0a, 0x0a,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x4e, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x17, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x19, 0x0a,
	0x17, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x18, 0x4e, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x22, 0x58, 0x0a, 0x19, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2a, 0x2b, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x4f, 0x4f, 0x50, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x2a, 0x22,
	0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50,
	0x10, 0x01, 0x32, 0xe4, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x75, 0x0a, 0x12, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x6f, 0x70, 0x69, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_openconfig_interfaces_proto_rawDescOnce sync.Once
	file_openconfig_interfaces_proto_rawDescData = file_openconfig_interfaces_proto_rawDesc
)

func file_openconfig_interfaces_proto_rawDescGZIP() []byte {
	file_openconfig_interfaces_proto_rawDescOnce.Do(func() {
		file_openconfig_interfaces_proto_rawDescData = protoimpl.X.CompressGZIP(file_openconfig_interfaces_proto_rawDescData)
	})
	return file_openconfig_interfaces_proto_rawDescData
}

var file_openconfig_interfaces_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_openconfig_interfaces_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_openconfig_interfaces_proto_goTypes = []interface{}{
	(InterfaceType)(0),                                          // 0: opi_api.network.v1.InterfaceType
	(InterfaceState)(0),                                         // 1: opi_api.network.v1.InterfaceState
	(*Interface)(nil),                                           // 2: opi_api.network.v1.Interface
	(*Interfaces)(nil),                                          // 3: opi_api.network.v1.Interfaces
	(*NetInterfaceGetRequest)(nil),                              // 4: opi_api.network.v1.NetInterfaceGetRequest
	(*NetInterfaceGetResponse)(nil),                             // 5: opi_api.network.v1.NetInterfaceGetResponse
	(*NetInterfaceListRequest)(nil),                             // 6: opi_api.network.v1.NetInterfaceListRequest
	(*NetInterfaceListResponse)(nil),                            // 7: opi_api.network.v1.NetInterfaceListResponse
	(*NetInterfaceUpdateRequest)(nil),                           // 8: opi_api.network.v1.NetInterfaceUpdateRequest
	(*NetInterfaceUpdateResponse)(nil),                          // 9: opi_api.network.v1.NetInterfaceUpdateResponse
	(*Interface_Config)(nil),                                    // 10: opi_api.network.v1.Interface.Config
	(*Interface_State)(nil),                                     // 11: opi_api.network.v1.Interface.State
	(*Interface_HoldTime)(nil),                                  // 12: opi_api.network.v1.Interface.HoldTime
	(*Interface_Subinterfaces)(nil),                             // 13: opi_api.network.v1.Interface.Subinterfaces
	(*Interface_State_Counters)(nil),                            // 14: opi_api.network.v1.Interface.State.Counters
	(*Interface_HoldTime_Config)(nil),                           // 15: opi_api.network.v1.Interface.HoldTime.Config
	(*Interface_HoldTime_State)(nil),                            // 16: opi_api.network.v1.Interface.HoldTime.State
	(*Interface_Subinterfaces_Subinterface)(nil),                // 17: opi_api.network.v1.Interface.Subinterfaces.Subinterface
	(*Interface_Subinterfaces_Subinterface_Config)(nil),         // 18: opi_api.network.v1.Interface.Subinterfaces.Subinterface.Config
	(*Interface_Subinterfaces_Subinterface_State)(nil),          // 19: opi_api.network.v1.Interface.Subinterfaces.Subinterface.State
	(*Interface_Subinterfaces_Subinterface_State_Counters)(nil), // 20: opi_api.network.v1.Interface.Subinterfaces.Subinterface.State.Counters
}
var file_openconfig_interfaces_proto_depIdxs = []int32{
	10, // 0: opi_api.network.v1.Interface.config:type_name -> opi_api.network.v1.Interface.Config
	11, // 1: opi_api.network.v1.Interface.state:type_name -> opi_api.network.v1.Interface.State
	12, // 2: opi_api.network.v1.Interface.holdtime:type_name -> opi_api.network.v1.Interface.HoldTime
	13, // 3: opi_api.network.v1.Interface.subinterfaces:type_name -> opi_api.network.v1.Interface.Subinterfaces
	2,  // 4: opi_api.network.v1.Interfaces.interface:type_name -> opi_api.network.v1.Interface
	2,  // 5: opi_api.network.v1.NetInterfaceGetResponse.interface:type_name -> opi_api.network.v1.Interface
	2,  // 6: opi_api.network.v1.NetInterfaceListResponse.interface:type_name -> opi_api.network.v1.Interface
	2,  // 7: opi_api.network.v1.NetInterfaceUpdateRequest.interface:type_name -> opi_api.network.v1.Interface
	0,  // 8: opi_api.network.v1.Interface.Config.type:type_name -> opi_api.network.v1.InterfaceType
	0,  // 9: opi_api.network.v1.Interface.State.type:type_name -> opi_api.network.v1.InterfaceType
	1,  // 10: opi_api.network.v1.Interface.State.admin_status:type_name -> opi_api.network.v1.InterfaceState
	1,  // 11: opi_api.network.v1.Interface.State.oper_status:type_name -> opi_api.network.v1.InterfaceState
	14, // 12: opi_api.network.v1.Interface.State.counters:type_name -> opi_api.network.v1.Interface.State.Counters
	15, // 13: opi_api.network.v1.Interface.HoldTime.config:type_name -> opi_api.network.v1.Interface.HoldTime.Config
	16, // 14: opi_api.network.v1.Interface.HoldTime.state:type_name -> opi_api.network.v1.Interface.HoldTime.State
	17, // 15: opi_api.network.v1.Interface.Subinterfaces.subinterface:type_name -> opi_api.network.v1.Interface.Subinterfaces.Subinterface
	18, // 16: opi_api.network.v1.Interface.Subinterfaces.Subinterface.config:type_name -> opi_api.network.v1.Interface.Subinterfaces.Subinterface.Config
	19, // 17: opi_api.network.v1.Interface.Subinterfaces.Subinterface.state:type_name -> opi_api.network.v1.Interface.Subinterfaces.Subinterface.State
	1,  // 18: opi_api.network.v1.Interface.Subinterfaces.Subinterface.State.admin_status:type_name -> opi_api.network.v1.InterfaceState
	1,  // 19: opi_api.network.v1.Interface.Subinterfaces.Subinterface.State.oper_status:type_name -> opi_api.network.v1.InterfaceState
	20, // 20: opi_api.network.v1.Interface.Subinterfaces.Subinterface.State.counters:type_name -> opi_api.network.v1.Interface.Subinterfaces.Subinterface.State.Counters
	4,  // 21: opi_api.network.v1.NetInterface.NetInterfaceGet:input_type -> opi_api.network.v1.NetInterfaceGetRequest
	6,  // 22: opi_api.network.v1.NetInterface.NetInterfaceList:input_type -> opi_api.network.v1.NetInterfaceListRequest
	8,  // 23: opi_api.network.v1.NetInterface.NetInterfaceUpdate:input_type -> opi_api.network.v1.NetInterfaceUpdateRequest
	5,  // 24: opi_api.network.v1.NetInterface.NetInterfaceGet:output_type -> opi_api.network.v1.NetInterfaceGetResponse
	7,  // 25: opi_api.network.v1.NetInterface.NetInterfaceList:output_type -> opi_api.network.v1.NetInterfaceListResponse
	9,  // 26: opi_api.network.v1.NetInterface.NetInterfaceUpdate:output_type -> opi_api.network.v1.NetInterfaceUpdateResponse
	24, // [24:27] is the sub-list for method output_type
	21, // [21:24] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_openconfig_interfaces_proto_init() }
func file_openconfig_interfaces_proto_init() {
	if File_openconfig_interfaces_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_openconfig_interfaces_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interfaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterfaceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterfaceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterfaceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterfaceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterfaceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterfaceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_HoldTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Subinterfaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_State_Counters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_HoldTime_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_HoldTime_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Subinterfaces_Subinterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Subinterfaces_Subinterface_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Subinterfaces_Subinterface_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_interfaces_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Subinterfaces_Subinterface_State_Counters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_openconfig_interfaces_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_openconfig_interfaces_proto_goTypes,
		DependencyIndexes: file_openconfig_interfaces_proto_depIdxs,
		EnumInfos:         file_openconfig_interfaces_proto_enumTypes,
		MessageInfos:      file_openconfig_interfaces_proto_msgTypes,
	}.Build()
	File_openconfig_interfaces_proto = out.File
	file_openconfig_interfaces_proto_rawDesc = nil
	file_openconfig_interfaces_proto_goTypes = nil
	file_openconfig_interfaces_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetInterfaceClient is the client API for NetInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetInterfaceClient interface {
	// Retrieves the interface information for a given interface
	NetInterfaceGet(ctx context.Context, in *NetInterfaceGetRequest, opts ...grpc.CallOption) (*NetInterfaceGetResponse, error)
	// Retrieves the set of interfaces on the device
	NetInterfaceList(ctx context.Context, in *NetInterfaceListRequest, opts ...grpc.CallOption) (*NetInterfaceListResponse, error)
	// A method for setting or changing configuration of an interface
	NetInterfaceUpdate(ctx context.Context, in *NetInterfaceUpdateRequest, opts ...grpc.CallOption) (*NetInterfaceUpdateResponse, error)
}

type netInterfaceClient struct {
	cc grpc.ClientConnInterface
}

func NewNetInterfaceClient(cc grpc.ClientConnInterface) NetInterfaceClient {
	return &netInterfaceClient{cc}
}

func (c *netInterfaceClient) NetInterfaceGet(ctx context.Context, in *NetInterfaceGetRequest, opts ...grpc.CallOption) (*NetInterfaceGetResponse, error) {
	out := new(NetInterfaceGetResponse)
	err := c.cc.Invoke(ctx, "/opi_api.network.v1.NetInterface/NetInterfaceGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netInterfaceClient) NetInterfaceList(ctx context.Context, in *NetInterfaceListRequest, opts ...grpc.CallOption) (*NetInterfaceListResponse, error) {
	out := new(NetInterfaceListResponse)
	err := c.cc.Invoke(ctx, "/opi_api.network.v1.NetInterface/NetInterfaceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netInterfaceClient) NetInterfaceUpdate(ctx context.Context, in *NetInterfaceUpdateRequest, opts ...grpc.CallOption) (*NetInterfaceUpdateResponse, error) {
	out := new(NetInterfaceUpdateResponse)
	err := c.cc.Invoke(ctx, "/opi_api.network.v1.NetInterface/NetInterfaceUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetInterfaceServer is the server API for NetInterface service.
type NetInterfaceServer interface {
	// Retrieves the interface information for a given interface
	NetInterfaceGet(context.Context, *NetInterfaceGetRequest) (*NetInterfaceGetResponse, error)
	// Retrieves the set of interfaces on the device
	NetInterfaceList(context.Context, *NetInterfaceListRequest) (*NetInterfaceListResponse, error)
	// A method for setting or changing configuration of an interface
	NetInterfaceUpdate(context.Context, *NetInterfaceUpdateRequest) (*NetInterfaceUpdateResponse, error)
}

// UnimplementedNetInterfaceServer can be embedded to have forward compatible implementations.
type UnimplementedNetInterfaceServer struct {
}

func (*UnimplementedNetInterfaceServer) NetInterfaceGet(context.Context, *NetInterfaceGetRequest) (*NetInterfaceGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NetInterfaceGet not implemented")
}
func (*UnimplementedNetInterfaceServer) NetInterfaceList(context.Context, *NetInterfaceListRequest) (*NetInterfaceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NetInterfaceList not implemented")
}
func (*UnimplementedNetInterfaceServer) NetInterfaceUpdate(context.Context, *NetInterfaceUpdateRequest) (*NetInterfaceUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NetInterfaceUpdate not implemented")
}

func RegisterNetInterfaceServer(s *grpc.Server, srv NetInterfaceServer) {
	s.RegisterService(&_NetInterface_serviceDesc, srv)
}

func _NetInterface_NetInterfaceGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetInterfaceGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetInterfaceServer).NetInterfaceGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.network.v1.NetInterface/NetInterfaceGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetInterfaceServer).NetInterfaceGet(ctx, req.(*NetInterfaceGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetInterface_NetInterfaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetInterfaceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetInterfaceServer).NetInterfaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.network.v1.NetInterface/NetInterfaceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetInterfaceServer).NetInterfaceList(ctx, req.(*NetInterfaceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetInterface_NetInterfaceUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetInterfaceUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetInterfaceServer).NetInterfaceUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.network.v1.NetInterface/NetInterfaceUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetInterfaceServer).NetInterfaceUpdate(ctx, req.(*NetInterfaceUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.network.v1.NetInterface",
	HandlerType: (*NetInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NetInterfaceGet",
			Handler:    _NetInterface_NetInterfaceGet_Handler,
		},
		{
			MethodName: "NetInterfaceList",
			Handler:    _NetInterface_NetInterfaceList_Handler,
		},
		{
			MethodName: "NetInterfaceUpdate",
			Handler:    _NetInterface_NetInterfaceUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "openconfig_interfaces.proto",
}
