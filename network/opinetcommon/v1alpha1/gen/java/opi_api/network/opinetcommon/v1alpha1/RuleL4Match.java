// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networktypes.proto

package opi_api.network.opinetcommon.v1alpha1;

/**
 * <pre>
 * L4 rule match criteria
 * </pre>
 *
 * Protobuf type {@code opi_api.network.opinetcommon.v1alpha1.RuleL4Match}
 */
public final class RuleL4Match extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.opinetcommon.v1alpha1.RuleL4Match)
    RuleL4MatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RuleL4Match.newBuilder() to construct.
  private RuleL4Match(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RuleL4Match() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RuleL4Match();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RuleL4Match(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.network.opinetcommon.v1alpha1.PortMatch.Builder subBuilder = null;
            if (l4InfoCase_ == 1) {
              subBuilder = ((opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_).toBuilder();
            }
            l4Info_ =
                input.readMessage(opi_api.network.opinetcommon.v1alpha1.PortMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_);
              l4Info_ = subBuilder.buildPartial();
            }
            l4InfoCase_ = 1;
            break;
          }
          case 18: {
            opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder subBuilder = null;
            if (l4InfoCase_ == 2) {
              subBuilder = ((opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_).toBuilder();
            }
            l4Info_ =
                input.readMessage(opi_api.network.opinetcommon.v1alpha1.ICMPMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_);
              l4Info_ = subBuilder.buildPartial();
            }
            l4InfoCase_ = 2;
            break;
          }
          case 26: {
            opi_api.network.opinetcommon.v1alpha1.PortListMatch.Builder subBuilder = null;
            if (l4InfoCase_ == 3) {
              subBuilder = ((opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_).toBuilder();
            }
            l4Info_ =
                input.readMessage(opi_api.network.opinetcommon.v1alpha1.PortListMatch.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_);
              l4Info_ = subBuilder.buildPartial();
            }
            l4InfoCase_ = 3;
            break;
          }
          case 34: {
            opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.Builder subBuilder = null;
            if (l4InfoCase_ == 4) {
              subBuilder = ((opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_).toBuilder();
            }
            l4Info_ =
                input.readMessage(opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_);
              l4Info_ = subBuilder.buildPartial();
            }
            l4InfoCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_RuleL4Match_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_RuleL4Match_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.opinetcommon.v1alpha1.RuleL4Match.class, opi_api.network.opinetcommon.v1alpha1.RuleL4Match.Builder.class);
  }

  private int l4InfoCase_ = 0;
  private java.lang.Object l4Info_;
  public enum L4InfoCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PORTS(1),
    TYPE_CODE(2),
    PORT_LIST(3),
    ICMP_MATCH_LIST(4),
    L4INFO_NOT_SET(0);
    private final int value;
    private L4InfoCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static L4InfoCase valueOf(int value) {
      return forNumber(value);
    }

    public static L4InfoCase forNumber(int value) {
      switch (value) {
        case 1: return PORTS;
        case 2: return TYPE_CODE;
        case 3: return PORT_LIST;
        case 4: return ICMP_MATCH_LIST;
        case 0: return L4INFO_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public L4InfoCase
  getL4InfoCase() {
    return L4InfoCase.forNumber(
        l4InfoCase_);
  }

  public static final int PORTS_FIELD_NUMBER = 1;
  /**
   * <pre>
   * source and/or destination ports/ranges
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
   * @return Whether the ports field is set.
   */
  @java.lang.Override
  public boolean hasPorts() {
    return l4InfoCase_ == 1;
  }
  /**
   * <pre>
   * source and/or destination ports/ranges
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
   * @return The ports.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.PortMatch getPorts() {
    if (l4InfoCase_ == 1) {
       return (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance();
  }
  /**
   * <pre>
   * source and/or destination ports/ranges
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.PortMatchOrBuilder getPortsOrBuilder() {
    if (l4InfoCase_ == 1) {
       return (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance();
  }

  public static final int TYPE_CODE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * ICMP type/code match criteria
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
   * @return Whether the typeCode field is set.
   */
  @java.lang.Override
  public boolean hasTypeCode() {
    return l4InfoCase_ == 2;
  }
  /**
   * <pre>
   * ICMP type/code match criteria
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
   * @return The typeCode.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.ICMPMatch getTypeCode() {
    if (l4InfoCase_ == 2) {
       return (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
  }
  /**
   * <pre>
   * ICMP type/code match criteria
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.ICMPMatchOrBuilder getTypeCodeOrBuilder() {
    if (l4InfoCase_ == 2) {
       return (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
  }

  public static final int PORT_LIST_FIELD_NUMBER = 3;
  /**
   * <pre>
   * list of source and/or destination ports/ranges
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
   * @return Whether the portList field is set.
   */
  @java.lang.Override
  public boolean hasPortList() {
    return l4InfoCase_ == 3;
  }
  /**
   * <pre>
   * list of source and/or destination ports/ranges
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
   * @return The portList.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.PortListMatch getPortList() {
    if (l4InfoCase_ == 3) {
       return (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance();
  }
  /**
   * <pre>
   * list of source and/or destination ports/ranges
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.PortListMatchOrBuilder getPortListOrBuilder() {
    if (l4InfoCase_ == 3) {
       return (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance();
  }

  public static final int ICMP_MATCH_LIST_FIELD_NUMBER = 4;
  /**
   * <pre>
   * list ICMP type/code match criteria
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
   * @return Whether the icmpMatchList field is set.
   */
  @java.lang.Override
  public boolean hasIcmpMatchList() {
    return l4InfoCase_ == 4;
  }
  /**
   * <pre>
   * list ICMP type/code match criteria
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
   * @return The icmpMatchList.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.ICMPMatchList getIcmpMatchList() {
    if (l4InfoCase_ == 4) {
       return (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance();
  }
  /**
   * <pre>
   * list ICMP type/code match criteria
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.ICMPMatchListOrBuilder getIcmpMatchListOrBuilder() {
    if (l4InfoCase_ == 4) {
       return (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_;
    }
    return opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (l4InfoCase_ == 1) {
      output.writeMessage(1, (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_);
    }
    if (l4InfoCase_ == 2) {
      output.writeMessage(2, (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_);
    }
    if (l4InfoCase_ == 3) {
      output.writeMessage(3, (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_);
    }
    if (l4InfoCase_ == 4) {
      output.writeMessage(4, (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (l4InfoCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_);
    }
    if (l4InfoCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_);
    }
    if (l4InfoCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_);
    }
    if (l4InfoCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.opinetcommon.v1alpha1.RuleL4Match)) {
      return super.equals(obj);
    }
    opi_api.network.opinetcommon.v1alpha1.RuleL4Match other = (opi_api.network.opinetcommon.v1alpha1.RuleL4Match) obj;

    if (!getL4InfoCase().equals(other.getL4InfoCase())) return false;
    switch (l4InfoCase_) {
      case 1:
        if (!getPorts()
            .equals(other.getPorts())) return false;
        break;
      case 2:
        if (!getTypeCode()
            .equals(other.getTypeCode())) return false;
        break;
      case 3:
        if (!getPortList()
            .equals(other.getPortList())) return false;
        break;
      case 4:
        if (!getIcmpMatchList()
            .equals(other.getIcmpMatchList())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (l4InfoCase_) {
      case 1:
        hash = (37 * hash) + PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getPorts().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TYPE_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getTypeCode().hashCode();
        break;
      case 3:
        hash = (37 * hash) + PORT_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getPortList().hashCode();
        break;
      case 4:
        hash = (37 * hash) + ICMP_MATCH_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getIcmpMatchList().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.opinetcommon.v1alpha1.RuleL4Match prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * L4 rule match criteria
   * </pre>
   *
   * Protobuf type {@code opi_api.network.opinetcommon.v1alpha1.RuleL4Match}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.opinetcommon.v1alpha1.RuleL4Match)
      opi_api.network.opinetcommon.v1alpha1.RuleL4MatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_RuleL4Match_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_RuleL4Match_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.opinetcommon.v1alpha1.RuleL4Match.class, opi_api.network.opinetcommon.v1alpha1.RuleL4Match.Builder.class);
    }

    // Construct using opi_api.network.opinetcommon.v1alpha1.RuleL4Match.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      l4InfoCase_ = 0;
      l4Info_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_RuleL4Match_descriptor;
    }

    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.RuleL4Match getDefaultInstanceForType() {
      return opi_api.network.opinetcommon.v1alpha1.RuleL4Match.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.RuleL4Match build() {
      opi_api.network.opinetcommon.v1alpha1.RuleL4Match result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.RuleL4Match buildPartial() {
      opi_api.network.opinetcommon.v1alpha1.RuleL4Match result = new opi_api.network.opinetcommon.v1alpha1.RuleL4Match(this);
      if (l4InfoCase_ == 1) {
        if (portsBuilder_ == null) {
          result.l4Info_ = l4Info_;
        } else {
          result.l4Info_ = portsBuilder_.build();
        }
      }
      if (l4InfoCase_ == 2) {
        if (typeCodeBuilder_ == null) {
          result.l4Info_ = l4Info_;
        } else {
          result.l4Info_ = typeCodeBuilder_.build();
        }
      }
      if (l4InfoCase_ == 3) {
        if (portListBuilder_ == null) {
          result.l4Info_ = l4Info_;
        } else {
          result.l4Info_ = portListBuilder_.build();
        }
      }
      if (l4InfoCase_ == 4) {
        if (icmpMatchListBuilder_ == null) {
          result.l4Info_ = l4Info_;
        } else {
          result.l4Info_ = icmpMatchListBuilder_.build();
        }
      }
      result.l4InfoCase_ = l4InfoCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.opinetcommon.v1alpha1.RuleL4Match) {
        return mergeFrom((opi_api.network.opinetcommon.v1alpha1.RuleL4Match)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.opinetcommon.v1alpha1.RuleL4Match other) {
      if (other == opi_api.network.opinetcommon.v1alpha1.RuleL4Match.getDefaultInstance()) return this;
      switch (other.getL4InfoCase()) {
        case PORTS: {
          mergePorts(other.getPorts());
          break;
        }
        case TYPE_CODE: {
          mergeTypeCode(other.getTypeCode());
          break;
        }
        case PORT_LIST: {
          mergePortList(other.getPortList());
          break;
        }
        case ICMP_MATCH_LIST: {
          mergeIcmpMatchList(other.getIcmpMatchList());
          break;
        }
        case L4INFO_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.opinetcommon.v1alpha1.RuleL4Match parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.opinetcommon.v1alpha1.RuleL4Match) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int l4InfoCase_ = 0;
    private java.lang.Object l4Info_;
    public L4InfoCase
        getL4InfoCase() {
      return L4InfoCase.forNumber(
          l4InfoCase_);
    }

    public Builder clearL4Info() {
      l4InfoCase_ = 0;
      l4Info_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.PortMatch, opi_api.network.opinetcommon.v1alpha1.PortMatch.Builder, opi_api.network.opinetcommon.v1alpha1.PortMatchOrBuilder> portsBuilder_;
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     * @return Whether the ports field is set.
     */
    @java.lang.Override
    public boolean hasPorts() {
      return l4InfoCase_ == 1;
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     * @return The ports.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.PortMatch getPorts() {
      if (portsBuilder_ == null) {
        if (l4InfoCase_ == 1) {
          return (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance();
      } else {
        if (l4InfoCase_ == 1) {
          return portsBuilder_.getMessage();
        }
        return opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    public Builder setPorts(opi_api.network.opinetcommon.v1alpha1.PortMatch value) {
      if (portsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        l4Info_ = value;
        onChanged();
      } else {
        portsBuilder_.setMessage(value);
      }
      l4InfoCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    public Builder setPorts(
        opi_api.network.opinetcommon.v1alpha1.PortMatch.Builder builderForValue) {
      if (portsBuilder_ == null) {
        l4Info_ = builderForValue.build();
        onChanged();
      } else {
        portsBuilder_.setMessage(builderForValue.build());
      }
      l4InfoCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    public Builder mergePorts(opi_api.network.opinetcommon.v1alpha1.PortMatch value) {
      if (portsBuilder_ == null) {
        if (l4InfoCase_ == 1 &&
            l4Info_ != opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance()) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.PortMatch.newBuilder((opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_)
              .mergeFrom(value).buildPartial();
        } else {
          l4Info_ = value;
        }
        onChanged();
      } else {
        if (l4InfoCase_ == 1) {
          portsBuilder_.mergeFrom(value);
        }
        portsBuilder_.setMessage(value);
      }
      l4InfoCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    public Builder clearPorts() {
      if (portsBuilder_ == null) {
        if (l4InfoCase_ == 1) {
          l4InfoCase_ = 0;
          l4Info_ = null;
          onChanged();
        }
      } else {
        if (l4InfoCase_ == 1) {
          l4InfoCase_ = 0;
          l4Info_ = null;
        }
        portsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.PortMatch.Builder getPortsBuilder() {
      return getPortsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.PortMatchOrBuilder getPortsOrBuilder() {
      if ((l4InfoCase_ == 1) && (portsBuilder_ != null)) {
        return portsBuilder_.getMessageOrBuilder();
      } else {
        if (l4InfoCase_ == 1) {
          return (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortMatch ports = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.PortMatch, opi_api.network.opinetcommon.v1alpha1.PortMatch.Builder, opi_api.network.opinetcommon.v1alpha1.PortMatchOrBuilder> 
        getPortsFieldBuilder() {
      if (portsBuilder_ == null) {
        if (!(l4InfoCase_ == 1)) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.PortMatch.getDefaultInstance();
        }
        portsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.PortMatch, opi_api.network.opinetcommon.v1alpha1.PortMatch.Builder, opi_api.network.opinetcommon.v1alpha1.PortMatchOrBuilder>(
                (opi_api.network.opinetcommon.v1alpha1.PortMatch) l4Info_,
                getParentForChildren(),
                isClean());
        l4Info_ = null;
      }
      l4InfoCase_ = 1;
      onChanged();;
      return portsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.ICMPMatch, opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder, opi_api.network.opinetcommon.v1alpha1.ICMPMatchOrBuilder> typeCodeBuilder_;
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     * @return Whether the typeCode field is set.
     */
    @java.lang.Override
    public boolean hasTypeCode() {
      return l4InfoCase_ == 2;
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     * @return The typeCode.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatch getTypeCode() {
      if (typeCodeBuilder_ == null) {
        if (l4InfoCase_ == 2) {
          return (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
      } else {
        if (l4InfoCase_ == 2) {
          return typeCodeBuilder_.getMessage();
        }
        return opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    public Builder setTypeCode(opi_api.network.opinetcommon.v1alpha1.ICMPMatch value) {
      if (typeCodeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        l4Info_ = value;
        onChanged();
      } else {
        typeCodeBuilder_.setMessage(value);
      }
      l4InfoCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    public Builder setTypeCode(
        opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder builderForValue) {
      if (typeCodeBuilder_ == null) {
        l4Info_ = builderForValue.build();
        onChanged();
      } else {
        typeCodeBuilder_.setMessage(builderForValue.build());
      }
      l4InfoCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    public Builder mergeTypeCode(opi_api.network.opinetcommon.v1alpha1.ICMPMatch value) {
      if (typeCodeBuilder_ == null) {
        if (l4InfoCase_ == 2 &&
            l4Info_ != opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance()) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.ICMPMatch.newBuilder((opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_)
              .mergeFrom(value).buildPartial();
        } else {
          l4Info_ = value;
        }
        onChanged();
      } else {
        if (l4InfoCase_ == 2) {
          typeCodeBuilder_.mergeFrom(value);
        }
        typeCodeBuilder_.setMessage(value);
      }
      l4InfoCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    public Builder clearTypeCode() {
      if (typeCodeBuilder_ == null) {
        if (l4InfoCase_ == 2) {
          l4InfoCase_ = 0;
          l4Info_ = null;
          onChanged();
        }
      } else {
        if (l4InfoCase_ == 2) {
          l4InfoCase_ = 0;
          l4Info_ = null;
        }
        typeCodeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder getTypeCodeBuilder() {
      return getTypeCodeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatchOrBuilder getTypeCodeOrBuilder() {
      if ((l4InfoCase_ == 2) && (typeCodeBuilder_ != null)) {
        return typeCodeBuilder_.getMessageOrBuilder();
      } else {
        if (l4InfoCase_ == 2) {
          return (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatch type_code = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.ICMPMatch, opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder, opi_api.network.opinetcommon.v1alpha1.ICMPMatchOrBuilder> 
        getTypeCodeFieldBuilder() {
      if (typeCodeBuilder_ == null) {
        if (!(l4InfoCase_ == 2)) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
        }
        typeCodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.ICMPMatch, opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder, opi_api.network.opinetcommon.v1alpha1.ICMPMatchOrBuilder>(
                (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) l4Info_,
                getParentForChildren(),
                isClean());
        l4Info_ = null;
      }
      l4InfoCase_ = 2;
      onChanged();;
      return typeCodeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.PortListMatch, opi_api.network.opinetcommon.v1alpha1.PortListMatch.Builder, opi_api.network.opinetcommon.v1alpha1.PortListMatchOrBuilder> portListBuilder_;
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     * @return Whether the portList field is set.
     */
    @java.lang.Override
    public boolean hasPortList() {
      return l4InfoCase_ == 3;
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     * @return The portList.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.PortListMatch getPortList() {
      if (portListBuilder_ == null) {
        if (l4InfoCase_ == 3) {
          return (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance();
      } else {
        if (l4InfoCase_ == 3) {
          return portListBuilder_.getMessage();
        }
        return opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    public Builder setPortList(opi_api.network.opinetcommon.v1alpha1.PortListMatch value) {
      if (portListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        l4Info_ = value;
        onChanged();
      } else {
        portListBuilder_.setMessage(value);
      }
      l4InfoCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    public Builder setPortList(
        opi_api.network.opinetcommon.v1alpha1.PortListMatch.Builder builderForValue) {
      if (portListBuilder_ == null) {
        l4Info_ = builderForValue.build();
        onChanged();
      } else {
        portListBuilder_.setMessage(builderForValue.build());
      }
      l4InfoCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    public Builder mergePortList(opi_api.network.opinetcommon.v1alpha1.PortListMatch value) {
      if (portListBuilder_ == null) {
        if (l4InfoCase_ == 3 &&
            l4Info_ != opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance()) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.PortListMatch.newBuilder((opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_)
              .mergeFrom(value).buildPartial();
        } else {
          l4Info_ = value;
        }
        onChanged();
      } else {
        if (l4InfoCase_ == 3) {
          portListBuilder_.mergeFrom(value);
        }
        portListBuilder_.setMessage(value);
      }
      l4InfoCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    public Builder clearPortList() {
      if (portListBuilder_ == null) {
        if (l4InfoCase_ == 3) {
          l4InfoCase_ = 0;
          l4Info_ = null;
          onChanged();
        }
      } else {
        if (l4InfoCase_ == 3) {
          l4InfoCase_ = 0;
          l4Info_ = null;
        }
        portListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.PortListMatch.Builder getPortListBuilder() {
      return getPortListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.PortListMatchOrBuilder getPortListOrBuilder() {
      if ((l4InfoCase_ == 3) && (portListBuilder_ != null)) {
        return portListBuilder_.getMessageOrBuilder();
      } else {
        if (l4InfoCase_ == 3) {
          return (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * list of source and/or destination ports/ranges
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.PortListMatch port_list = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.PortListMatch, opi_api.network.opinetcommon.v1alpha1.PortListMatch.Builder, opi_api.network.opinetcommon.v1alpha1.PortListMatchOrBuilder> 
        getPortListFieldBuilder() {
      if (portListBuilder_ == null) {
        if (!(l4InfoCase_ == 3)) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.PortListMatch.getDefaultInstance();
        }
        portListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.PortListMatch, opi_api.network.opinetcommon.v1alpha1.PortListMatch.Builder, opi_api.network.opinetcommon.v1alpha1.PortListMatchOrBuilder>(
                (opi_api.network.opinetcommon.v1alpha1.PortListMatch) l4Info_,
                getParentForChildren(),
                isClean());
        l4Info_ = null;
      }
      l4InfoCase_ = 3;
      onChanged();;
      return portListBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.ICMPMatchList, opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.Builder, opi_api.network.opinetcommon.v1alpha1.ICMPMatchListOrBuilder> icmpMatchListBuilder_;
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     * @return Whether the icmpMatchList field is set.
     */
    @java.lang.Override
    public boolean hasIcmpMatchList() {
      return l4InfoCase_ == 4;
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     * @return The icmpMatchList.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatchList getIcmpMatchList() {
      if (icmpMatchListBuilder_ == null) {
        if (l4InfoCase_ == 4) {
          return (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance();
      } else {
        if (l4InfoCase_ == 4) {
          return icmpMatchListBuilder_.getMessage();
        }
        return opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    public Builder setIcmpMatchList(opi_api.network.opinetcommon.v1alpha1.ICMPMatchList value) {
      if (icmpMatchListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        l4Info_ = value;
        onChanged();
      } else {
        icmpMatchListBuilder_.setMessage(value);
      }
      l4InfoCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    public Builder setIcmpMatchList(
        opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.Builder builderForValue) {
      if (icmpMatchListBuilder_ == null) {
        l4Info_ = builderForValue.build();
        onChanged();
      } else {
        icmpMatchListBuilder_.setMessage(builderForValue.build());
      }
      l4InfoCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    public Builder mergeIcmpMatchList(opi_api.network.opinetcommon.v1alpha1.ICMPMatchList value) {
      if (icmpMatchListBuilder_ == null) {
        if (l4InfoCase_ == 4 &&
            l4Info_ != opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance()) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.newBuilder((opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_)
              .mergeFrom(value).buildPartial();
        } else {
          l4Info_ = value;
        }
        onChanged();
      } else {
        if (l4InfoCase_ == 4) {
          icmpMatchListBuilder_.mergeFrom(value);
        }
        icmpMatchListBuilder_.setMessage(value);
      }
      l4InfoCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    public Builder clearIcmpMatchList() {
      if (icmpMatchListBuilder_ == null) {
        if (l4InfoCase_ == 4) {
          l4InfoCase_ = 0;
          l4Info_ = null;
          onChanged();
        }
      } else {
        if (l4InfoCase_ == 4) {
          l4InfoCase_ = 0;
          l4Info_ = null;
        }
        icmpMatchListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.Builder getIcmpMatchListBuilder() {
      return getIcmpMatchListFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatchListOrBuilder getIcmpMatchListOrBuilder() {
      if ((l4InfoCase_ == 4) && (icmpMatchListBuilder_ != null)) {
        return icmpMatchListBuilder_.getMessageOrBuilder();
      } else {
        if (l4InfoCase_ == 4) {
          return (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_;
        }
        return opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * list ICMP type/code match criteria
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.ICMPMatchList icmp_match_list = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.ICMPMatchList, opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.Builder, opi_api.network.opinetcommon.v1alpha1.ICMPMatchListOrBuilder> 
        getIcmpMatchListFieldBuilder() {
      if (icmpMatchListBuilder_ == null) {
        if (!(l4InfoCase_ == 4)) {
          l4Info_ = opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.getDefaultInstance();
        }
        icmpMatchListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.ICMPMatchList, opi_api.network.opinetcommon.v1alpha1.ICMPMatchList.Builder, opi_api.network.opinetcommon.v1alpha1.ICMPMatchListOrBuilder>(
                (opi_api.network.opinetcommon.v1alpha1.ICMPMatchList) l4Info_,
                getParentForChildren(),
                isClean());
        l4Info_ = null;
      }
      l4InfoCase_ = 4;
      onChanged();;
      return icmpMatchListBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.opinetcommon.v1alpha1.RuleL4Match)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.opinetcommon.v1alpha1.RuleL4Match)
  private static final opi_api.network.opinetcommon.v1alpha1.RuleL4Match DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.opinetcommon.v1alpha1.RuleL4Match();
  }

  public static opi_api.network.opinetcommon.v1alpha1.RuleL4Match getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RuleL4Match>
      PARSER = new com.google.protobuf.AbstractParser<RuleL4Match>() {
    @java.lang.Override
    public RuleL4Match parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RuleL4Match(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RuleL4Match> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RuleL4Match> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.RuleL4Match getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

