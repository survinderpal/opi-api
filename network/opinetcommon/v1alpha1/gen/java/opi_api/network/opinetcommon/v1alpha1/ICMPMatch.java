// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networktypes.proto

package opi_api.network.opinetcommon.v1alpha1;

/**
 * <pre>
 * ICMPv4/ICMPv6 rule match criteria
 * </pre>
 *
 * Protobuf type {@code opi_api.network.opinetcommon.v1alpha1.ICMPMatch}
 */
public final class ICMPMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.opinetcommon.v1alpha1.ICMPMatch)
    ICMPMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ICMPMatch.newBuilder() to construct.
  private ICMPMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ICMPMatch() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ICMPMatch();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ICMPMatch(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            typematch_ = input.readInt32();
            typematchCase_ = 1;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();
            typematchCase_ = 2;
            typematch_ = rawValue;
            break;
          }
          case 24: {
            codematch_ = input.readInt32();
            codematchCase_ = 3;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            codematchCase_ = 4;
            codematch_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_ICMPMatch_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_ICMPMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.opinetcommon.v1alpha1.ICMPMatch.class, opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder.class);
  }

  private int typematchCase_ = 0;
  private java.lang.Object typematch_;
  public enum TypematchCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TYPE(1),
    TYPE_WILDCARD(2),
    TYPEMATCH_NOT_SET(0);
    private final int value;
    private TypematchCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypematchCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypematchCase forNumber(int value) {
      switch (value) {
        case 1: return TYPE;
        case 2: return TYPE_WILDCARD;
        case 0: return TYPEMATCH_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypematchCase
  getTypematchCase() {
    return TypematchCase.forNumber(
        typematchCase_);
  }

  private int codematchCase_ = 0;
  private java.lang.Object codematch_;
  public enum CodematchCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CODE(3),
    CODE_WILDCARD(4),
    CODEMATCH_NOT_SET(0);
    private final int value;
    private CodematchCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CodematchCase valueOf(int value) {
      return forNumber(value);
    }

    public static CodematchCase forNumber(int value) {
      switch (value) {
        case 3: return CODE;
        case 4: return CODE_WILDCARD;
        case 0: return CODEMATCH_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public CodematchCase
  getCodematchCase() {
    return CodematchCase.forNumber(
        codematchCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>int32 type = 1;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return typematchCase_ == 1;
  }
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>int32 type = 1;</code>
   * @return The type.
   */
  @java.lang.Override
  public int getType() {
    if (typematchCase_ == 1) {
      return (java.lang.Integer) typematch_;
    }
    return 0;
  }

  public static final int TYPE_WILDCARD_FIELD_NUMBER = 2;
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
   * @return Whether the typeWildcard field is set.
   */
  public boolean hasTypeWildcard() {
    return typematchCase_ == 2;
  }
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
   * @return The enum numeric value on the wire for typeWildcard.
   */
  public int getTypeWildcardValue() {
    if (typematchCase_ == 2) {
      return (java.lang.Integer) typematch_;
    }
    return 0;
  }
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
   * @return The typeWildcard.
   */
  public opi_api.network.opinetcommon.v1alpha1.WildcardMatch getTypeWildcard() {
    if (typematchCase_ == 2) {
      @SuppressWarnings("deprecation")
      opi_api.network.opinetcommon.v1alpha1.WildcardMatch result = opi_api.network.opinetcommon.v1alpha1.WildcardMatch.valueOf(
          (java.lang.Integer) typematch_);
      return result == null ? opi_api.network.opinetcommon.v1alpha1.WildcardMatch.UNRECOGNIZED : result;
    }
    return opi_api.network.opinetcommon.v1alpha1.WildcardMatch.MATCH_NONE;
  }

  public static final int CODE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>int32 code = 3;</code>
   * @return Whether the code field is set.
   */
  @java.lang.Override
  public boolean hasCode() {
    return codematchCase_ == 3;
  }
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>int32 code = 3;</code>
   * @return The code.
   */
  @java.lang.Override
  public int getCode() {
    if (codematchCase_ == 3) {
      return (java.lang.Integer) codematch_;
    }
    return 0;
  }

  public static final int CODE_WILDCARD_FIELD_NUMBER = 4;
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
   * @return Whether the codeWildcard field is set.
   */
  public boolean hasCodeWildcard() {
    return codematchCase_ == 4;
  }
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
   * @return The enum numeric value on the wire for codeWildcard.
   */
  public int getCodeWildcardValue() {
    if (codematchCase_ == 4) {
      return (java.lang.Integer) codematch_;
    }
    return 0;
  }
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
   * @return The codeWildcard.
   */
  public opi_api.network.opinetcommon.v1alpha1.WildcardMatch getCodeWildcard() {
    if (codematchCase_ == 4) {
      @SuppressWarnings("deprecation")
      opi_api.network.opinetcommon.v1alpha1.WildcardMatch result = opi_api.network.opinetcommon.v1alpha1.WildcardMatch.valueOf(
          (java.lang.Integer) codematch_);
      return result == null ? opi_api.network.opinetcommon.v1alpha1.WildcardMatch.UNRECOGNIZED : result;
    }
    return opi_api.network.opinetcommon.v1alpha1.WildcardMatch.MATCH_NONE;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typematchCase_ == 1) {
      output.writeInt32(
          1, (int)((java.lang.Integer) typematch_));
    }
    if (typematchCase_ == 2) {
      output.writeEnum(2, ((java.lang.Integer) typematch_));
    }
    if (codematchCase_ == 3) {
      output.writeInt32(
          3, (int)((java.lang.Integer) codematch_));
    }
    if (codematchCase_ == 4) {
      output.writeEnum(4, ((java.lang.Integer) codematch_));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typematchCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            1, (int)((java.lang.Integer) typematch_));
    }
    if (typematchCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, ((java.lang.Integer) typematch_));
    }
    if (codematchCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            3, (int)((java.lang.Integer) codematch_));
    }
    if (codematchCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, ((java.lang.Integer) codematch_));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.opinetcommon.v1alpha1.ICMPMatch)) {
      return super.equals(obj);
    }
    opi_api.network.opinetcommon.v1alpha1.ICMPMatch other = (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) obj;

    if (!getTypematchCase().equals(other.getTypematchCase())) return false;
    switch (typematchCase_) {
      case 1:
        if (getType()
            != other.getType()) return false;
        break;
      case 2:
        if (getTypeWildcardValue()
            != other.getTypeWildcardValue()) return false;
        break;
      case 0:
      default:
    }
    if (!getCodematchCase().equals(other.getCodematchCase())) return false;
    switch (codematchCase_) {
      case 3:
        if (getCode()
            != other.getCode()) return false;
        break;
      case 4:
        if (getCodeWildcardValue()
            != other.getCodeWildcardValue()) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (typematchCase_) {
      case 1:
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
        break;
      case 2:
        hash = (37 * hash) + TYPE_WILDCARD_FIELD_NUMBER;
        hash = (53 * hash) + getTypeWildcardValue();
        break;
      case 0:
      default:
    }
    switch (codematchCase_) {
      case 3:
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode();
        break;
      case 4:
        hash = (37 * hash) + CODE_WILDCARD_FIELD_NUMBER;
        hash = (53 * hash) + getCodeWildcardValue();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.opinetcommon.v1alpha1.ICMPMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ICMPv4/ICMPv6 rule match criteria
   * </pre>
   *
   * Protobuf type {@code opi_api.network.opinetcommon.v1alpha1.ICMPMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.opinetcommon.v1alpha1.ICMPMatch)
      opi_api.network.opinetcommon.v1alpha1.ICMPMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_ICMPMatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_ICMPMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.opinetcommon.v1alpha1.ICMPMatch.class, opi_api.network.opinetcommon.v1alpha1.ICMPMatch.Builder.class);
    }

    // Construct using opi_api.network.opinetcommon.v1alpha1.ICMPMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      typematchCase_ = 0;
      typematch_ = null;
      codematchCase_ = 0;
      codematch_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.internal_static_opi_api_network_opinetcommon_v1alpha1_ICMPMatch_descriptor;
    }

    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatch getDefaultInstanceForType() {
      return opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatch build() {
      opi_api.network.opinetcommon.v1alpha1.ICMPMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.ICMPMatch buildPartial() {
      opi_api.network.opinetcommon.v1alpha1.ICMPMatch result = new opi_api.network.opinetcommon.v1alpha1.ICMPMatch(this);
      if (typematchCase_ == 1) {
        result.typematch_ = typematch_;
      }
      if (typematchCase_ == 2) {
        result.typematch_ = typematch_;
      }
      if (codematchCase_ == 3) {
        result.codematch_ = codematch_;
      }
      if (codematchCase_ == 4) {
        result.codematch_ = codematch_;
      }
      result.typematchCase_ = typematchCase_;
      result.codematchCase_ = codematchCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.opinetcommon.v1alpha1.ICMPMatch) {
        return mergeFrom((opi_api.network.opinetcommon.v1alpha1.ICMPMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.opinetcommon.v1alpha1.ICMPMatch other) {
      if (other == opi_api.network.opinetcommon.v1alpha1.ICMPMatch.getDefaultInstance()) return this;
      switch (other.getTypematchCase()) {
        case TYPE: {
          setType(other.getType());
          break;
        }
        case TYPE_WILDCARD: {
          setTypeWildcardValue(other.getTypeWildcardValue());
          break;
        }
        case TYPEMATCH_NOT_SET: {
          break;
        }
      }
      switch (other.getCodematchCase()) {
        case CODE: {
          setCode(other.getCode());
          break;
        }
        case CODE_WILDCARD: {
          setCodeWildcardValue(other.getCodeWildcardValue());
          break;
        }
        case CODEMATCH_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.opinetcommon.v1alpha1.ICMPMatch parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.opinetcommon.v1alpha1.ICMPMatch) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typematchCase_ = 0;
    private java.lang.Object typematch_;
    public TypematchCase
        getTypematchCase() {
      return TypematchCase.forNumber(
          typematchCase_);
    }

    public Builder clearTypematch() {
      typematchCase_ = 0;
      typematch_ = null;
      onChanged();
      return this;
    }

    private int codematchCase_ = 0;
    private java.lang.Object codematch_;
    public CodematchCase
        getCodematchCase() {
      return CodematchCase.forNumber(
          codematchCase_);
    }

    public Builder clearCodematch() {
      codematchCase_ = 0;
      codematch_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>int32 type = 1;</code>
     * @return Whether the type field is set.
     */
    public boolean hasType() {
      return typematchCase_ == 1;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    public int getType() {
      if (typematchCase_ == 1) {
        return (java.lang.Integer) typematch_;
      }
      return 0;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>int32 type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(int value) {
      typematchCase_ = 1;
      typematch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>int32 type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      if (typematchCase_ == 1) {
        typematchCase_ = 0;
        typematch_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
     * @return Whether the typeWildcard field is set.
     */
    @java.lang.Override
    public boolean hasTypeWildcard() {
      return typematchCase_ == 2;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
     * @return The enum numeric value on the wire for typeWildcard.
     */
    @java.lang.Override
    public int getTypeWildcardValue() {
      if (typematchCase_ == 2) {
        return ((java.lang.Integer) typematch_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
     * @param value The enum numeric value on the wire for typeWildcard to set.
     * @return This builder for chaining.
     */
    public Builder setTypeWildcardValue(int value) {
      typematchCase_ = 2;
      typematch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
     * @return The typeWildcard.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.WildcardMatch getTypeWildcard() {
      if (typematchCase_ == 2) {
        @SuppressWarnings("deprecation")
        opi_api.network.opinetcommon.v1alpha1.WildcardMatch result = opi_api.network.opinetcommon.v1alpha1.WildcardMatch.valueOf(
            (java.lang.Integer) typematch_);
        return result == null ? opi_api.network.opinetcommon.v1alpha1.WildcardMatch.UNRECOGNIZED : result;
      }
      return opi_api.network.opinetcommon.v1alpha1.WildcardMatch.MATCH_NONE;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
     * @param value The typeWildcard to set.
     * @return This builder for chaining.
     */
    public Builder setTypeWildcard(opi_api.network.opinetcommon.v1alpha1.WildcardMatch value) {
      if (value == null) {
        throw new NullPointerException();
      }
      typematchCase_ = 2;
      typematch_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * match any ICMP type
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTypeWildcard() {
      if (typematchCase_ == 2) {
        typematchCase_ = 0;
        typematch_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>int32 code = 3;</code>
     * @return Whether the code field is set.
     */
    public boolean hasCode() {
      return codematchCase_ == 3;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>int32 code = 3;</code>
     * @return The code.
     */
    public int getCode() {
      if (codematchCase_ == 3) {
        return (java.lang.Integer) codematch_;
      }
      return 0;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>int32 code = 3;</code>
     * @param value The code to set.
     * @return This builder for chaining.
     */
    public Builder setCode(int value) {
      codematchCase_ = 3;
      codematch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>int32 code = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCode() {
      if (codematchCase_ == 3) {
        codematchCase_ = 0;
        codematch_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
     * @return Whether the codeWildcard field is set.
     */
    @java.lang.Override
    public boolean hasCodeWildcard() {
      return codematchCase_ == 4;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
     * @return The enum numeric value on the wire for codeWildcard.
     */
    @java.lang.Override
    public int getCodeWildcardValue() {
      if (codematchCase_ == 4) {
        return ((java.lang.Integer) codematch_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
     * @param value The enum numeric value on the wire for codeWildcard to set.
     * @return This builder for chaining.
     */
    public Builder setCodeWildcardValue(int value) {
      codematchCase_ = 4;
      codematch_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
     * @return The codeWildcard.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.WildcardMatch getCodeWildcard() {
      if (codematchCase_ == 4) {
        @SuppressWarnings("deprecation")
        opi_api.network.opinetcommon.v1alpha1.WildcardMatch result = opi_api.network.opinetcommon.v1alpha1.WildcardMatch.valueOf(
            (java.lang.Integer) codematch_);
        return result == null ? opi_api.network.opinetcommon.v1alpha1.WildcardMatch.UNRECOGNIZED : result;
      }
      return opi_api.network.opinetcommon.v1alpha1.WildcardMatch.MATCH_NONE;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
     * @param value The codeWildcard to set.
     * @return This builder for chaining.
     */
    public Builder setCodeWildcard(opi_api.network.opinetcommon.v1alpha1.WildcardMatch value) {
      if (value == null) {
        throw new NullPointerException();
      }
      codematchCase_ = 4;
      codematch_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * match any ICMP code
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCodeWildcard() {
      if (codematchCase_ == 4) {
        codematchCase_ = 0;
        codematch_ = null;
        onChanged();
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.opinetcommon.v1alpha1.ICMPMatch)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.opinetcommon.v1alpha1.ICMPMatch)
  private static final opi_api.network.opinetcommon.v1alpha1.ICMPMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.opinetcommon.v1alpha1.ICMPMatch();
  }

  public static opi_api.network.opinetcommon.v1alpha1.ICMPMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ICMPMatch>
      PARSER = new com.google.protobuf.AbstractParser<ICMPMatch>() {
    @java.lang.Override
    public ICMPMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ICMPMatch(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ICMPMatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ICMPMatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.ICMPMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

