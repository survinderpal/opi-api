// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networktypes.proto

package opi_api.network.opinetcommon.v1alpha1;

public interface ICMPMatchOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.opinetcommon.v1alpha1.ICMPMatch)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>int32 type = 1;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>int32 type = 1;</code>
   * @return The type.
   */
  int getType();

  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
   * @return Whether the typeWildcard field is set.
   */
  boolean hasTypeWildcard();
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
   * @return The enum numeric value on the wire for typeWildcard.
   */
  int getTypeWildcardValue();
  /**
   * <pre>
   * match any ICMP type
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch type_wildcard = 2;</code>
   * @return The typeWildcard.
   */
  opi_api.network.opinetcommon.v1alpha1.WildcardMatch getTypeWildcard();

  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>int32 code = 3;</code>
   * @return Whether the code field is set.
   */
  boolean hasCode();
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>int32 code = 3;</code>
   * @return The code.
   */
  int getCode();

  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
   * @return Whether the codeWildcard field is set.
   */
  boolean hasCodeWildcard();
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
   * @return The enum numeric value on the wire for codeWildcard.
   */
  int getCodeWildcardValue();
  /**
   * <pre>
   * match any ICMP code
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.WildcardMatch code_wildcard = 4;</code>
   * @return The codeWildcard.
   */
  opi_api.network.opinetcommon.v1alpha1.WildcardMatch getCodeWildcard();

  public opi_api.network.opinetcommon.v1alpha1.ICMPMatch.TypematchCase getTypematchCase();

  public opi_api.network.opinetcommon.v1alpha1.ICMPMatch.CodematchCase getCodematchCase();
}
