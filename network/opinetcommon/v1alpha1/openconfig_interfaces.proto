// openconfig-interfaces.proto file
// Derived from the OpenConfig interfaces model github.com/openconfig/public/release/models/interfaces
syntax = "proto3";

package opi_api.network.v1;
option go_package = "github.com/opiproject/opi-api/network/v1/gen/go";

// Service functions for Network Interface exported by the server
service NetInterface {
    // Retrieves the interface information for a given interface
    rpc NetInterfaceGet (NetInterfaceGetRequest) returns (NetInterfaceGetResponse) {}
    // Retrieves the set of interfaces on the device
    rpc NetInterfaceList (NetInterfaceListRequest) returns (NetInterfaceListResponse) {}
    // A method for setting or changing configuration of an interface
    rpc NetInterfaceUpdate (NetInterfaceUpdateRequest) returns (NetInterfaceUpdateResponse) {}
}

// Data Types
enum InterfaceType {
    ETHERNET = 0;
    LOOPBACK = 1;
}

enum InterfaceState {
    DOWN = 0;
    UP = 1;
}

//Main Data Structure
message Interface {
    string name = 1;

    message Config {
        string name = 1;
        InterfaceType type = 2;
        uint32 mtu = 3;
        bool loopback_mode = 4;
        string description = 5;
        bool enabled = 6;
    }
    Config config = 2;

    message State {
        string name = 1;
        InterfaceType type = 2;
        uint32 mtu = 3;
        bool loopback_mode = 4;
        string description = 5;
        bool enabled = 6;
        uint32 ifindex = 7;
        InterfaceState admin_status = 8;
        InterfaceState oper_status = 9;
        uint64 last_change = 10;
        bool logical = 11;
        bool management = 12;
        bool cpu = 13;

        message Counters {
            uint64 in_octets = 1;
            uint64 in_packets = 2;
            uint64 in_unicast_pkts = 3;
            uint64 in_broadcast_pkts = 4;
            uint64 in_multicast_pkts = 5;
            uint64 in_discards = 6;
            uint64 in_errors = 7;
            uint64 in_unknown_protos = 8;
            uint64 in_fcs_errors = 9;
            uint64 out_octets = 10;
            uint64 out_packets = 11;
            uint64 out_unicast_pkts = 12;
            uint64 out_broadcast_pkts = 13;
            uint64 out_multicast_pkts = 14;
            uint64 out_discards = 15;
            uint64 out_errors = 16;
            uint64 carrier_transitions = 17;
            uint64 last_clear = 18;
        }
        Counters counters = 14;
    }
    State state = 3;

    message HoldTime {
        message Config {
            uint32 up = 1;
            uint32 down = 2;
        }
        Config config = 1;

        message State {
            uint32 up = 1;
            uint32 down = 2;
        }
        State state = 2;
    }
    HoldTime holdtime = 4;

    message Subinterfaces {
        message Subinterface {
            uint64 index = 1;

            message Config {
                uint64 index = 1;
                string description = 2;
                bool enabled = 3;
            }
            Config config = 2;

            message State {
                uint32 index = 1;
                string description = 2;
                bool enabled = 3;
                string name = 4;
                uint32 ifindex = 5;
                InterfaceState admin_status = 6;
                InterfaceState oper_status = 7;
                uint64 last_change = 10;
                bool logical = 11;
                bool management = 12;
                bool cpu = 13;

                message Counters {
                    uint64 in_octets = 1;
                    uint64 in_packets = 2;
                    uint64 in_unicast_pkts = 3;
                    uint64 in_broadcast_pkts = 4;
                    uint64 in_multicast_pkts = 5;
                    uint64 in_discards = 6;
                    uint64 in_errors = 7;
                    uint64 in_unknown_protos = 8;
                    uint64 in_fcs_errors = 9;
                    uint64 out_octets = 10;
                    uint64 out_packets = 11;
                    uint64 out_unicast_pkts = 12;
                    uint64 out_broadcast_pkts = 13;
                    uint64 out_multicast_pkts = 14;
                    uint64 out_discards = 15;
                    uint64 out_errors = 16;
                    uint64 carrier_transitions = 17;
                    uint64 last_clear = 18;
                }
                Counters counters = 14;
            }
            State state = 3;
        }
        repeated Subinterface subinterface = 2;
    }
    Subinterfaces subinterfaces = 5;
}

message Interfaces {
    repeated Interface interface = 1;
}

message NetInterfaceGetRequest {
    string name = 1;
}

message NetInterfaceGetResponse {
    Interface interface = 1;
}

message NetInterfaceListRequest {
    // empty
}

message NetInterfaceListResponse {
    repeated Interface interface = 1;
}

message NetInterfaceUpdateRequest {
    Interface interface = 1;
}

message NetInterfaceUpdateResponse {
    uint32 result = 1;
}