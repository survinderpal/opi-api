// Copyright (c) 2023 Pensando, AMD Inc, or its subsidiaries.
// device's network configuration

syntax = "proto3";
package opi_api.network.cloud.v1alpha1;

option java_package = "opi_api.network.cloud.v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "CloudRPC";

option go_package = "github.com/opiproject/opi-api/network/cloud/v1alpha1/gen/go";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/protobuf/empty.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/field_mask.proto";
import "google/api/resource.proto";

import "device.proto";
import "port.proto";
import "interface.proto";
import "route.proto";
import "vnic.proto";
import "underlayroute.proto";
import "bgp.proto";
import "nexthop.proto";
import "mapping.proto";
import "subnet.proto";
import "tunnel.proto";
import "vpc.proto";
import "networkpolicy.proto";


// Cloud Infra Service configure/operate objects to manage cloud infrastructure
//  Device Capabilities APIs
//  Device APIs
//  Port APIs
//  Vnic APIs
//  Interface APIs
//  RouteTable APIs
//  Route APIs
//  Mapping APIs
//  SecurityPolicy APIs
//  SecurityRule APIs
//  SecurityProfile APIs
//


// Cloud Infra APIs - to manage a multi-node cloud infrastructure on a xPU
service CloudInfraService {
    // device capabilities
    rpc GetDeviceCapabilities (GetDeviceCapabilitiesRequest) returns (DeviceCapabilities) {
        option (google.api.http) = {
            get: "/v1/devicecapabilitiess"
        };
        option (google.api.method_signature) = "";
    }

    // device apis
    rpc CreateDevice (CreateDeviceRequest) returns (Device) {
        option (google.api.http) = {
            post: "/v1/{parent=devices}"
            body: "device"
        };
        option (google.api.method_signature) = "parent,device,device_id";
    }
    rpc DeleteDevice (DeleteDeviceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=devices}/{device}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateDevice (UpdateDeviceRequest) returns (Device) {
        option (google.api.http) = {
            patch: "/v1/{device.id=devices}"
            body: "device"
        };
        option (google.api.method_signature) = "device, update_mask";
    }
    rpc ListDevices (ListDevicesRequest) returns (ListDevicesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=devices}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetDevice (GetDeviceRequest) returns (Device) {
        option (google.api.http) = {
            get: "/v1/{id=devices}/{device}"
        };
        option (google.api.method_signature) = "id";
    }

    // port apis
    rpc UpdatePort (UpdatePortRequest) returns (Port) {
        option (google.api.http) = {
            patch: "/v1/{port.id=ports}"
            body: "port"
        };
        option (google.api.method_signature) = "port, update_mask";
    }
    rpc ListPorts (ListPortsRequest) returns (ListPortsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=ports}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetPort (GetPortRequest) returns (Port) {
        option (google.api.http) = {
            get: "/v1/{id=ports}/{port}"
        };
        option (google.api.method_signature) = "id";
    }

    // vnic apis
    rpc CreateVnic (CreateVnicRequest) returns (Vnic) {
        option (google.api.http) = {
            post: "/v1/{parent=vnics}"
            body: "vnic"
        };
        option (google.api.method_signature) = "parent,vnic,vnic_id";
    }
    rpc DeleteVnic (DeleteVnicRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=vnics}/{vnic}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateVnic (UpdateVnicRequest) returns (Vnic) {
        option (google.api.http) = {
            patch: "/v1/{vnic.id=vnics}"
            body: "vnic"
        };
        option (google.api.method_signature) = "vnic, update_mask";
    }
    rpc ListVnics (ListVnicsRequest) returns (ListVnicsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=vnics}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetVnic (GetVnicRequest) returns (Vnic) {
        option (google.api.http) = {
            get: "/v1/{id=vnics}/{vnic}"
        };
        option (google.api.method_signature) = "id";
    }

    // interface apis
    rpc CreateInterface (CreateInterfaceRequest) returns (Interface) {
        option (google.api.http) = {
            post: "/v1/{parent=interfaces}"
            body: "interface"
        };
        option (google.api.method_signature) = "parent,interface,interface_id";
    }
    rpc DeleteInterface (DeleteInterfaceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=interfaces}/{interface}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateInterface (UpdateInterfaceRequest) returns (Interface) {
        option (google.api.http) = {
            patch: "/v1/{interface.id=interfaces}"
            body: "interface"
        };
        option (google.api.method_signature) = "interface, update_mask";
    }
    rpc ListInterfaces (ListInterfacesRequest) returns (ListInterfacesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=interfaces}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetInterface (GetInterfaceRequest) returns (Interface) {
        option (google.api.http) = {
            get: "/v1/{id=interfaces}/{interface}"
        };
        option (google.api.method_signature) = "id";
    }

    // routetable apis
    rpc CreateRouteTable (CreateRouteTableRequest) returns (RouteTable) {
        option (google.api.http) = {
            post: "/v1/{parent=routetables}"
            body: "routetable"
        };
        option (google.api.method_signature) = "parent,routetable,routetable_id";
    }
    rpc DeleteRouteTable (DeleteRouteTableRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=routetables}/{routetable}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateRouteTable (UpdateRouteTableRequest) returns (RouteTable) {
        option (google.api.http) = {
            patch: "/v1/{routetable.id=routetables}"
            body: "routetable"
        };
        option (google.api.method_signature) = "routetable, update_mask";
    }
    rpc ListRouteTables (ListRouteTablesRequest) returns (ListRouteTablesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=routetables}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetRouteTable (GetRouteTableRequest) returns (RouteTable) {
        option (google.api.http) = {
            get: "/v1/{id=routetables}/{routetable}"
        };
        option (google.api.method_signature) = "id";
    }
    // TBD rpc RouteTableGetStreaming (RouteTableGetRequest) returns (stream RouteTableGetResponse) {}


    // route apis
    rpc CreateRoute (CreateRouteRequest) returns (Route) {
        option (google.api.http) = {
            post: "/v1/{parent=routes}"
            body: "route"
        };
        option (google.api.method_signature) = "parent,route,route_id";
    }
    rpc DeleteRoute (DeleteRouteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=routes}/{route}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateRoute (UpdateRouteRequest) returns (Route) {
        option (google.api.http) = {
            patch: "/v1/{route.id=routes}"
            body: "route"
        };
        option (google.api.method_signature) = "route, update_mask";
    }
    rpc ListRoutes (ListRoutesRequest) returns (ListRoutesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=routes}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetRoute (GetRouteRequest) returns (Route) {
        option (google.api.http) = {
            get: "/v1/{id=routes}/{route}"
        };
        option (google.api.method_signature) = "id";
    }
    // TBD rpc RouteLookup (RouteLookupRequest) returns (RouteLookupResponse) {}

    // underlayroute apis
    rpc CreateUnderlayRoute (CreateUnderlayRouteRequest) returns (UnderlayRoute) {
        option (google.api.http) = {
            post: "/v1/{parent=underlayroutes}"
            body: "underlayroute"
        };
        option (google.api.method_signature) = "parent,underlayroute,underlayroute_id";
    }
    rpc DeleteUnderlayRoute (DeleteUnderlayRouteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=underlayroutes}/{underlayroute}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateUnderlayRoute (UpdateUnderlayRouteRequest) returns (UnderlayRoute) {
        option (google.api.http) = {
            patch: "/v1/{underlayroute.id=underlayroutes}"
            body: "underlayroute"
        };
        option (google.api.method_signature) = "underlayroute, update_mask";
    }
    rpc ListUnderlayRoutes (ListUnderlayRoutesRequest) returns (ListUnderlayRoutesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=underlayroutes}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetUnderlayRoute (GetUnderlayRouteRequest) returns (UnderlayRoute) {
        option (google.api.http) = {
            get: "/v1/{id=underlayroutes}/{underlayroute}"
        };
        option (google.api.method_signature) = "id";
    }
    // TBD rpc CPRouteLookup (CPRouteGetRequest) returns (CPRouteGetResponse) {}
    // TBD rpc CPRouteRedistGet (CPRouteRedistGetRequest) returns (CPRouteRedistGetResponse) {}

    // bgp (optional) apis
    rpc CreateBgp (CreateBgpRequest) returns (Bgp) {
        option (google.api.http) = {
            post: "/v1/{parent=bgps}"
            body: "bgp"
        };
        option (google.api.method_signature) = "parent,bgp,bgp_id";
    }
    rpc DeleteBgp (DeleteBgpRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=bgps}/{bgp}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateBgp (UpdateBgpRequest) returns (Bgp) {
        option (google.api.http) = {
            patch: "/v1/{bgp.id=bgps}"
            body: "bgp"
        };
        option (google.api.method_signature) = "bgp, update_mask";
    }
    rpc ListBgps (ListBgpsRequest) returns (ListBgpsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=bgps}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetBgp (GetBgpRequest) returns (Bgp) {
        option (google.api.http) = {
            get: "/v1/{id=bgps}/{bgp}"
        };
        option (google.api.method_signature) = "id";
    }

    // bgppeer (optional) apis
    rpc CreateBGPPeer (CreateBGPPeerRequest) returns (BGPPeer) {
        option (google.api.http) = {
            post: "/v1/{parent=bgppeers}"
            body: "bgppeer"
        };
        option (google.api.method_signature) = "parent,bgppeer,bgppeer_id";
    }
    rpc DeleteBGPPeer (DeleteBGPPeerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=bgppeers}/{bgppeer}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateBGPPeer (UpdateBGPPeerRequest) returns (BGPPeer) {
        option (google.api.http) = {
            patch: "/v1/{bgppeer.id=bgppeers}"
            body: "bgppeer"
        };
        option (google.api.method_signature) = "bgppeer, update_mask";
    }
    rpc ListBGPPeers (ListBGPPeersRequest) returns (ListBGPPeersResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=bgppeers}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetBGPPeer (GetBGPPeerRequest) returns (BGPPeer) {
        option (google.api.http) = {
            get: "/v1/{id=bgppeers}/{bgppeer}"
        };
        option (google.api.method_signature) = "id";
    }

    // bgppeeraf (optional) apis
    rpc CreateBGPPeerAf (CreateBGPPeerAfRequest) returns (BGPPeerAf) {
        option (google.api.http) = {
            post: "/v1/{parent=bgppeerafs}"
            body: "bgppeeraf"
        };
        option (google.api.method_signature) = "parent,bgppeeraf,bgppeeraf_id";
    }
    rpc DeleteBGPPeerAf (DeleteBGPPeerAfRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=bgppeerafs}/{bgppeeraf}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateBGPPeerAf (UpdateBGPPeerAfRequest) returns (BGPPeerAf) {
        option (google.api.http) = {
            patch: "/v1/{bgppeeraf.id=bgppeerafs}"
            body: "bgppeeraf"
        };
        option (google.api.method_signature) = "bgppeeraf, update_mask";
    }
    rpc ListBGPPeerAfs (ListBGPPeerAfsRequest) returns (ListBGPPeerAfsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=bgppeerafs}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetBGPPeerAf (GetBGPPeerAfRequest) returns (BGPPeerAf) {
        option (google.api.http) = {
            get: "/v1/{id=bgppeerafs}/{bgppeeraf}"
        };
        option (google.api.method_signature) = "id";
    }
    // TBD rpc BGPClearRoute (BGPClearRouteRequest) returns (BGPClearRouteResponse) {}
    // TBD rpc BGPNLRIPrefixGet (BGPNLRIPrefixGetRequest) returns (BGPNLRIPrefixGetResponse) {}
    // TBD rpc BGPPrfxCntrsGet (BGPPrfxCntrsGetRequest) returns (BGPPrfxCntrsGetResponse) {}
    // TBD rpc BGPAdjRibOutGet (BGPAdjRibOutGetRequest) returns (BGPAdjRibOutGetResponse) {}

    // mapping apis
    rpc CreateMapping (CreateMappingRequest) returns (Mapping) {
        option (google.api.http) = {
            post: "/v1/{parent=mappings}"
            body: "mapping"
        };
        option (google.api.method_signature) = "parent,mapping,mapping_id";
    }
    rpc DeleteMapping (DeleteMappingRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=mappings}/{mapping}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateMapping (UpdateMappingRequest) returns (Mapping) {
        option (google.api.http) = {
            patch: "/v1/{mapping.id=mappings}"
            body: "mapping"
        };
        option (google.api.method_signature) = "mapping, update_mask";
    }
    rpc ListMappings (ListMappingsRequest) returns (ListMappingsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=mappings}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetMapping (GetMappingRequest) returns (Mapping) {
        option (google.api.http) = {
            get: "/v1/{id=mappings}/{mapping}"
        };
        option (google.api.method_signature) = "id";
    }
    // TBD rpc MappingGetStreaming (MappingGetRequest) returns (stream MappingGetResponse) {}

    // nexthop apis
    rpc CreateNextHop (CreateNextHopRequest) returns (NextHop) {
        option (google.api.http) = {
            post: "/v1/{parent=nexthops}"
            body: "nexthop"
        };
        option (google.api.method_signature) = "parent,nexthop,nexthop_id";
    }
    rpc DeleteNextHop (DeleteNextHopRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=nexthops}/{nexthop}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateNextHop (UpdateNextHopRequest) returns (NextHop) {
        option (google.api.http) = {
            patch: "/v1/{nexthop.id=nexthops}"
            body: "nexthop"
        };
        option (google.api.method_signature) = "nexthop, update_mask";
    }
    rpc ListNextHop (ListNextHopsRequest) returns (ListNextHopsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=nexthops}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetNextHop (GetNextHopRequest) returns (NextHop) {
        option (google.api.http) = {
            get: "/v1/{id=nexthops}/{nexthop}"
        };
        option (google.api.method_signature) = "id";
    }

    // nexthopgroup apis
    rpc CreateNextHopGroup (CreateNextHopGroupRequest) returns (NextHopGroup) {
        option (google.api.http) = {
            post: "/v1/{parent=nexthopgroups}"
            body: "nexthopgroup"
        };
        option (google.api.method_signature) = "parent,nexthopgroup,nexthopgroup_id";
    }
    rpc DeleteNextHopGroup (DeleteNextHopGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=nexthopgroups}/{nexthopgroup}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateNextHopGroup (UpdateNextHopGroupRequest) returns (NextHopGroup) {
        option (google.api.http) = {
            patch: "/v1/{nexthopgroup.id=nexthopgroups}"
            body: "nexthopgroup"
        };
        option (google.api.method_signature) = "nexthopgroup, update_mask";
    }
    rpc ListNextHopGroups (ListNextHopGroupsRequest) returns (ListNextHopGroupsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=nexthopgroups}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetNextHopGroup (GetNextHopGroupRequest) returns (NextHopGroup) {
        option (google.api.http) = {
            get: "/v1/{id=nexthopgroups}/{nexthopgroup}"
        };
        option (google.api.method_signature) = "id";
    }

    // subnet apis
    rpc CreateSubnet (CreateSubnetRequest) returns (Subnet) {
        option (google.api.http) = {
            post: "/v1/{parent=subnets}"
            body: "subnet"
        };
        option (google.api.method_signature) = "parent,subnet,subnet_id";
    }
    rpc DeleteSubnet (DeleteSubnetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=subnets}/{subnet}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateSubnet (UpdateSubnetRequest) returns (Subnet) {
        option (google.api.http) = {
            patch: "/v1/{subnet.id=subnets}"
            body: "subnet"
        };
        option (google.api.method_signature) = "subnet, update_mask";
    }
    rpc ListSubnets (ListSubnetsRequest) returns (ListSubnetsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=subnets}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetSubnet (GetSubnetRequest) returns (Subnet) {
        option (google.api.http) = {
            get: "/v1/{id=subnets}/{subnet}"
        };
        option (google.api.method_signature) = "id";
    }

    // tunnel apis
    rpc CreateTunnel (CreateTunnelRequest) returns (Tunnel) {
        option (google.api.http) = {
            post: "/v1/{parent=tunnels}"
            body: "tunnel"
        };
        option (google.api.method_signature) = "parent,tunnel,tunnel_id";
    }
    rpc DeleteTunnel (DeleteTunnelRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=tunnels}/{tunnel}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateTunnel (UpdateTunnelRequest) returns (Tunnel) {
        option (google.api.http) = {
            patch: "/v1/{tunnel.id=tunnels}"
            body: "tunnel"
        };
        option (google.api.method_signature) = "tunnel, update_mask";
    }
    rpc ListTunnels (ListTunnelsRequest) returns (ListTunnelsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=tunnels}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetTunnel (GetTunnelRequest) returns (Tunnel) {
        option (google.api.http) = {
            get: "/v1/{id=tunnels}/{tunnel}"
        };
        option (google.api.method_signature) = "id";
    }

    // vpc apis
    rpc CreateVpc (CreateVpcRequest) returns (Vpc) {
        option (google.api.http) = {
            post: "/v1/{parent=vpcs}"
            body: "vpc"
        };
        option (google.api.method_signature) = "parent,vpc,vpc_id";
    }
    rpc DeleteVpc (DeleteVpcRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=vpcs}/{vpc}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateVpc (UpdateVpcRequest) returns (Vpc) {
        option (google.api.http) = {
            patch: "/v1/{vpc.id=vpcs}"
            body: "vpc"
        };
        option (google.api.method_signature) = "vpc, update_mask";
    }
    rpc ListVpcs (ListVpcsRequest) returns (ListVpcsResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=vpcs}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetVpc (GetVpcRequest) returns (Vpc) {
        option (google.api.http) = {
            get: "/v1/{id=vpcs}/{vpc}"
        };
        option (google.api.method_signature) = "id";
    }

    // vpcpeer apis
    rpc CreateVPCPeer (CreateVPCPeerRequest) returns (VPCPeer) {
        option (google.api.http) = {
            post: "/v1/{parent=vpcpeers}"
            body: "vpcpeer"
        };
        option (google.api.method_signature) = "parent,vpcpeer,vpcpeer_id";
    }
    rpc DeleteVPCPeer (DeleteVPCPeerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=vpcpeers}/{vpcpeer}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateVPCPeer (UpdateVPCPeerRequest) returns (VPCPeer) {
        option (google.api.http) = {
            patch: "/v1/{vpcpeer.id=vpcpeers}"
            body: "vpcpeer"
        };
        option (google.api.method_signature) = "vpcpeer, update_mask";
    }
    rpc ListVPCPeers (ListVPCPeersRequest) returns (ListVPCPeersResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=vpcpeers}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetVPCPeer (GetVPCPeerRequest) returns (VPCPeer) {
        option (google.api.http) = {
            get: "/v1/{id=vpcpeers}/{vpcpeer}"
        };
        option (google.api.method_signature) = "id";
    }

    // securitypolicy apis
    rpc CreateSecurityPolicy (CreateSecurityPolicyRequest) returns (SecurityPolicy) {
        option (google.api.http) = {
            post: "/v1/{parent=securitypolicys}"
            body: "securitypolicy"
        };
        option (google.api.method_signature) = "parent,securitypolicy,securitypolicy_id";
    }
    rpc DeleteSecurityPolicy (DeleteSecurityPolicyRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=securitypolicys}/{securitypolicy}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateSecurityPolicy (UpdateSecurityPolicyRequest) returns (SecurityPolicy) {
        option (google.api.http) = {
            patch: "/v1/{securitypolicy.id=securitypolicys}"
            body: "securitypolicy"
        };
        option (google.api.method_signature) = "securitypolicy, update_mask";
    }
    rpc ListSecurityPolicys (ListSecurityPolicysRequest) returns (ListSecurityPolicysResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=securitypolicys}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetSecurityPolicy (GetSecurityPolicyRequest) returns (SecurityPolicy) {
        option (google.api.http) = {
            get: "/v1/{id=securitypolicys}/{securitypolicy}"
        };
        option (google.api.method_signature) = "id";
    }

    // securityrule apis
    rpc CreateSecurityRule (CreateSecurityRuleRequest) returns (SecurityRule) {
        option (google.api.http) = {
            post: "/v1/{parent=securityrules}"
            body: "securityrule"
        };
        option (google.api.method_signature) = "parent,securityrule,securityrule_id";
    }
    rpc DeleteSecurityRule (DeleteSecurityRuleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=securityrules}/{securityrule}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateSecurityRule (UpdateSecurityRuleRequest) returns (SecurityRule) {
        option (google.api.http) = {
            patch: "/v1/{securityrule.id=securityrules}"
            body: "securityrule"
        };
        option (google.api.method_signature) = "securityrule, update_mask";
    }
    rpc ListSecurityRules (ListSecurityRulesRequest) returns (ListSecurityRulesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=securityrules}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetSecurityRule (GetSecurityRuleRequest) returns (SecurityRule) {
        option (google.api.http) = {
            get: "/v1/{id=securityrules}/{securityrule}"
        };
        option (google.api.method_signature) = "id";
    }

    // securityprofile apis
    rpc CreateSecurityProfile (CreateSecurityProfileRequest) returns (SecurityProfile) {
        option (google.api.http) = {
            post: "/v1/{parent=securityprofiles}"
            body: "securityprofile"
        };
        option (google.api.method_signature) = "parent,securityprofile,securityprofile_id";
    }
    rpc DeleteSecurityProfile (DeleteSecurityProfileRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{id=securityprofiles}/{securityprofile}"
        };
        option (google.api.method_signature) = "id";
    }
    rpc UpdateSecurityProfile (UpdateSecurityProfileRequest) returns (SecurityProfile) {
        option (google.api.http) = {
            patch: "/v1/{securityprofile.id=securityprofiles}"
            body: "securityprofile"
        };
        option (google.api.method_signature) = "securityprofile, update_mask";
    }
    rpc ListSecurityProfiles (ListSecurityProfilesRequest) returns (ListSecurityProfilesResponse) {
        option (google.api.http) = {
            get: "/v1/{parent=securityprofiles}"
        };
        option (google.api.method_signature) = "parent";
    }
    rpc GetSecurityProfile (GetSecurityProfileRequest) returns (SecurityProfile) {
        option (google.api.http) = {
            get: "/v1/{id=securityprofiles}/{securityprofile}"
        };
        option (google.api.method_signature) = "id";
    }
    //  TBD rpc SecurityPolicyGetStreaming (SecurityPolicyGetRequest) returns (stream SecurityPolicyGetResponse) {}
    //  TBD rpc SecurityPolicyLookup (SecurityPolicyLookupRequest) returns (SecurityPolicyLookupResponse) {}
}

//
// Device Capabilities Requests/Responses
//

// Get DeviceCapabilities Request
message GetDeviceCapabilitiesRequest {
}

//
// Device Requests/Responses
//

// Create Device Request
message CreateDeviceRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Device"
    ];
    // device
    Device device = 2 [(google.api.field_behavior) = REQUIRED];
    // device_id
    string device_id = 3;
}

// Delete device request
message DeleteDeviceRequest {
    // device id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Device"
    ];
}

// Update device request
message UpdateDeviceRequest {
    // updated device info
    Device device = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List device request
message ListDevicesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Device"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List device response
message ListDevicesResponse {
    // list of devices
    repeated Device device = 1;
    // next page token
    string next_page_token = 2;
}

// Get device request
message GetDeviceRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Device"
    ];
}

// Update port request
message UpdatePortRequest {
    // updated port info
    Port port = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List port request
message ListPortsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Port"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List port response
message ListPortsResponse {
    // list of ports
    repeated Port port = 1;
    // next page token
    string next_page_token = 2;
}

// Get port request
message GetPortRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Port"
    ];
}

//
// Vnic Requests/Responses
//

// Create Vnic Request
message CreateVnicRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vnic"
    ];
    // vnic
    Vnic vnic = 2 [(google.api.field_behavior) = REQUIRED];
    // vnic_id
    string vnic_id = 3;
}

// Delete vnic request
message DeleteVnicRequest {
    // vnic id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vnic"
    ];
}

// Update vnic request
message UpdateVnicRequest {
    // updated vnic info
    Vnic vnic = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List vnic request
message ListVnicsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vnic"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List vnic response
message ListVnicsResponse {
    // list of vnics
    repeated Vnic vnic = 1;
    // next page token
    string next_page_token = 2;
}

// Get vnic request
message GetVnicRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vnic"
    ];
}
//
// Interface Requests/Responses
//

// Create Interface Request
message CreateInterfaceRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Interface"
    ];
    // interface
    Interface interface = 2 [(google.api.field_behavior) = REQUIRED];
    // interface_id
    string interface_id = 3;
}

// Delete interface request
message DeleteInterfaceRequest {
    // interface id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Interface"
    ];
}

// Update interface request
message UpdateInterfaceRequest {
    // updated interface info
    Interface interface = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List interface request
message ListInterfacesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Interface"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List interface response
message ListInterfacesResponse {
    // list of interfaces
    repeated Interface interface = 1;
    // next page token
    string next_page_token = 2;
}

// Get interface request
message GetInterfaceRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Interface"
    ];
}

//
// RouteTable Requests/Responses
//

// Create RouteTable Request
message CreateRouteTableRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/RouteTable"
    ];
    // routetable
    RouteTable routetable = 2 [(google.api.field_behavior) = REQUIRED];
    // routetable_id
    string routetable_id = 3;
}

// Delete routetable request
message DeleteRouteTableRequest {
    // routetable id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/RouteTable"
    ];
}

// Update routetable request
message UpdateRouteTableRequest {
    // updated routetable info
    RouteTable routetable = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List routetable request
message ListRouteTablesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/RouteTable"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List routetable response
message ListRouteTablesResponse {
    // list of routetables
    repeated RouteTable routetable = 1;
    // next page token
    string next_page_token = 2;
}

// Get routetable request
message GetRouteTableRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/RouteTable"
    ];
}

//
// Route Requests/Responses
//

// Create Route Request
message CreateRouteRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Route"
    ];
    // route
    Route route = 2 [(google.api.field_behavior) = REQUIRED];
    // route_id
    string route_id = 3;
}

// Delete route request
message DeleteRouteRequest {
    // route id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Route"
    ];
}

// Update route request
message UpdateRouteRequest {
    // updated route info
    Route route = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List route request
message ListRoutesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Route"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List route response
message ListRoutesResponse {
    // list of routes
    repeated Route route = 1;
    // next page token
    string next_page_token = 2;
}

// Get route request
message GetRouteRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Route"
    ];
}

//
// UnderlayRoute Requests/Responses
//

// Create UnderlayRoute Request
message CreateUnderlayRouteRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/UnderlayRoute"
    ];
    // underlayroute
    UnderlayRoute underlayroute = 2 [(google.api.field_behavior) = REQUIRED];
    // underlayroute_id
    string underlayroute_id = 3;
}

// Delete underlayroute request
message DeleteUnderlayRouteRequest {
    // underlayroute id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/UnderlayRoute"
    ];
}

// Update underlayroute request
message UpdateUnderlayRouteRequest {
    // updated underlayroute info
    UnderlayRoute underlayroute = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List underlayroute request
message ListUnderlayRoutesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/UnderlayRoute"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List underlayroute response
message ListUnderlayRoutesResponse {
    // list of underlayroutes
    repeated UnderlayRoute underlayroute = 1;
    // next page token
    string next_page_token = 2;
}

// Get underlayroute request
message GetUnderlayRouteRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/UnderlayRoute"
    ];
}

//
// Bgp Requests/Responses
//

// Create Bgp Request
message CreateBgpRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Bgp"
    ];
    // bgp
    Bgp bgp = 2 [(google.api.field_behavior) = REQUIRED];
    // bgp_id
    string bgp_id = 3;
}

// Delete bgp request
message DeleteBgpRequest {
    // bgp id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Bgp"
    ];
}

// Update bgp request
message UpdateBgpRequest {
    // updated bgp info
    Bgp bgp = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List bgp request
message ListBgpsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Bgp"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List bgp response
message ListBgpsResponse {
    // list of bgps
    repeated Bgp bgp = 1;
    // next page token
    string next_page_token = 2;
}

// Get bgp request
message GetBgpRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Bgp"
    ];
}

//
// BGPPeer Requests/Responses
//

// Create BGPPeer Request
message CreateBGPPeerRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeer"
    ];
    // bgppeer
    BGPPeer bgppeer = 2 [(google.api.field_behavior) = REQUIRED];
    // bgppeer_id
    string bgppeer_id = 3;
}

// Delete bgppeer request
message DeleteBGPPeerRequest {
    // bgppeer id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeer"
    ];
}

// Update bgppeer request
message UpdateBGPPeerRequest {
    // updated bgppeer info
    BGPPeer bgppeer = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List bgppeer request
message ListBGPPeersRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeer"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List bgppeer response
message ListBGPPeersResponse {
    // list of bgppeers
    repeated BGPPeer bgppeer = 1;
    // next page token
    string next_page_token = 2;
}

// Get bgppeer request
message GetBGPPeerRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeer"
    ];
}

//
// BGPPeerAf Requests/Responses
//

// Create BGPPeerAf Request
message CreateBGPPeerAfRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeerAf"
    ];
    // bgppeeraf
    BGPPeerAf bgppeeraf = 2 [(google.api.field_behavior) = REQUIRED];
    // bgppeeraf_id
    string bgppeeraf_id = 3;
}

// Delete bgppeeraf request
message DeleteBGPPeerAfRequest {
    // bgppeeraf id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeerAf"
    ];
}

// Update bgppeeraf request
message UpdateBGPPeerAfRequest {
    // updated bgppeeraf info
    BGPPeerAf bgppeeraf = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List bgppeeraf request
message ListBGPPeerAfsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeerAf"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List bgppeeraf response
message ListBGPPeerAfsResponse {
    // list of bgppeerafs
    repeated BGPPeerAf bgppeeraf = 1;
    // next page token
    string next_page_token = 2;
}

// Get bgppeeraf request
message GetBGPPeerAfRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/BGPPeerAf"
    ];
}

//
// Mapping Requests/Responses
//

// Create Mapping Request
message CreateMappingRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Mapping"
    ];
    // mapping
    Mapping mapping = 2 [(google.api.field_behavior) = REQUIRED];
    // mapping_id
    string mapping_id = 3;
}

// Delete mapping request
message DeleteMappingRequest {
    // mapping id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Mapping"
    ];
}

// Update mapping request
message UpdateMappingRequest {
    // updated mapping info
    Mapping mapping = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List mapping request
message ListMappingsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Mapping"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List mapping response
message ListMappingsResponse {
    // list of mappings
    repeated Mapping mapping = 1;
    // next page token
    string next_page_token = 2;
}

// Get mapping request
message GetMappingRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Mapping"
    ];
}

//
// NextHop Requests/Responses
//

// Create NextHop Request
message CreateNextHopRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHop"
    ];
    // nexthop
    NextHop nexthop = 2 [(google.api.field_behavior) = REQUIRED];
    // nexthop_id
    string nexthop_id = 3;
}

// Delete nexthop request
message DeleteNextHopRequest {
    // nexthop id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHop"
    ];
}

// Update nexthop request
message UpdateNextHopRequest {
    // updated nexthop info
    NextHop nexthop = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List nexthop request
message ListNextHopsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHop"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List nexthop response
message ListNextHopsResponse {
    // list of nexthops
    repeated NextHop nexthop = 1;
    // next page token
    string next_page_token = 2;
}

// Get nexthop request
message GetNextHopRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHop"
    ];
}

//
// NextHopGroup Requests/Responses
//

// Create NextHopGroup Request
message CreateNextHopGroupRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHopGroup"
    ];
    // nexthopgroup
    NextHopGroup nexthopgroup = 2 [(google.api.field_behavior) = REQUIRED];
    // nexthopgroup_id
    string nexthopgroup_id = 3;
}

// Delete nexthopgroup request
message DeleteNextHopGroupRequest {
    // nexthopgroup id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHopGroup"
    ];
}

// Update nexthopgroup request
message UpdateNextHopGroupRequest {
    // updated nexthopgroup info
    NextHopGroup nexthopgroup = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List nexthopgroup request
message ListNextHopGroupsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHopGroup"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List nexthopgroup response
message ListNextHopGroupsResponse {
    // list of nexthopgroups
    repeated NextHopGroup nexthopgroup = 1;
    // next page token
    string next_page_token = 2;
}

// Get nexthopgroup request
message GetNextHopGroupRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/NextHopGroup"
    ];
}

//
// Subnet Requests/Responses
//

// Create Subnet Request
message CreateSubnetRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Subnet"
    ];
    // subnet
    Subnet subnet = 2 [(google.api.field_behavior) = REQUIRED];
    // subnet_id
    string subnet_id = 3;
}

// Delete subnet request
message DeleteSubnetRequest {
    // subnet id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Subnet"
    ];
}

// Update subnet request
message UpdateSubnetRequest {
    // updated subnet info
    Subnet subnet = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List subnet request
message ListSubnetsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Subnet"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List subnet response
message ListSubnetsResponse {
    // list of subnets
    repeated Subnet subnet = 1;
    // next page token
    string next_page_token = 2;
}

// Get subnet request
message GetSubnetRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Subnet"
    ];
}

//
// Tunnel Requests/Responses
//

// Create Tunnel Request
message CreateTunnelRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Tunnel"
    ];
    // tunnel
    Tunnel tunnel = 2 [(google.api.field_behavior) = REQUIRED];
    // tunnel_id
    string tunnel_id = 3;
}

// Delete Tunnel request
message DeleteTunnelRequest {
    // tunnel id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Tunnel"
    ];
}

// Update Tunnel request
message UpdateTunnelRequest {
    // updated tunnel info
    Tunnel tunnel = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List Tunnel request
message ListTunnelsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Tunnel"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List Tunnel response
message ListTunnelsResponse {
    // list of tunnels
    repeated Tunnel tunnel = 1;
    // next page token
    string next_page_token = 2;
}

// Get Tunnel request
message GetTunnelRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Tunnel"
    ];
}

//
// Vpc Requests/Responses
//

// Create Vpc Request
message CreateVpcRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vpc"
    ];
    // vpc
    Vpc vpc = 2 [(google.api.field_behavior) = REQUIRED];
    // vpc_id
    string vpc_id = 3;
}

// Delete vpc request
message DeleteVpcRequest {
    // vpc id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vpc"
    ];
}

// Update vpc request
message UpdateVpcRequest {
    // updated vpc info
    Vpc vpc = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List vpc request
message ListVpcsRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vpc"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List vpc response
message ListVpcsResponse {
    // list of vpcs
    repeated Vpc vpc = 1;
    // next page token
    string next_page_token = 2;
}

// Get vpc request
message GetVpcRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/Vpc"
    ];
}

//
// VPCPeer Requests/Responses
//

// Create VPCPeer Request
message CreateVPCPeerRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/VPCPeer"
    ];
    // vpcpeer
    VPCPeer vpcpeer = 2 [(google.api.field_behavior) = REQUIRED];
    // vpcpeer_id
    string vpcpeer_id = 3;
}

// Delete vpcpeer request
message DeleteVPCPeerRequest {
    // vpcpeer id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/VPCPeer"
    ];
}

// Update vpcpeer request
message UpdateVPCPeerRequest {
    // updated vpcpeer info
    VPCPeer vpcpeer = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List vpcpeer request
message ListVPCPeersRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/VPCPeer"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List vpcpeer response
message ListVPCPeersResponse {
    // list of vpcpeers
    repeated VPCPeer vpcpeer = 1;
    // next page token
    string next_page_token = 2;
}

// Get vpcpeer request
message GetVPCPeerRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/VPCPeer"
    ];
}

//
// SecurityPolicy Requests/Responses
//

// Create SecurityPolicy Request
message CreateSecurityPolicyRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityPolicy"
    ];
    // securitypolicy
    SecurityPolicy securitypolicy = 2 [(google.api.field_behavior) = REQUIRED];
    // securitypolicy_id
    string securitypolicy_id = 3;
}

// Delete securitypolicy request
message DeleteSecurityPolicyRequest {
    // securitypolicy id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityPolicy"
    ];
}

// Update securitypolicy request
message UpdateSecurityPolicyRequest {
    // updated securitypolicy info
    SecurityPolicy securitypolicy = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List securitypolicy request
message ListSecurityPolicysRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityPolicy"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List securitypolicy response
message ListSecurityPolicysResponse {
    // list of securitypolicys
    repeated SecurityPolicy securitypolicy = 1;
    // next page token
    string next_page_token = 2;
}

// Get securitypolicy request
message GetSecurityPolicyRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityPolicy"
    ];
}

//
// SecurityRule Requests/Responses
//

// Create SecurityRule Request
message CreateSecurityRuleRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityRule"
    ];
    // securityrule
    SecurityRule securityrule = 2 [(google.api.field_behavior) = REQUIRED];
    // securityrule_id
    string securityrule_id = 3;
}

// Delete securityrule request
message DeleteSecurityRuleRequest {
    // securityrule id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityRule"
    ];
}

// Update securityrule request
message UpdateSecurityRuleRequest {
    // updated securityrule info
    SecurityRule securityrule = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List securityrule request
message ListSecurityRulesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityRule"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List securityrule response
message ListSecurityRulesResponse {
    // list of securityrules
    repeated SecurityRule securityrule = 1;
    // next page token
    string next_page_token = 2;
}

// Get securityrule request
message GetSecurityRuleRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityRule"
    ];
}

//
// SecurityProfile Requests/Responses
//

// Create SecurityProfile Request
message CreateSecurityProfileRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityProfile"
    ];
    // securityprofile
    SecurityProfile securityprofile = 2 [(google.api.field_behavior) = REQUIRED];
    // securityprofile_id
    string securityprofile_id = 3;
}

// Delete securityprofile request
message DeleteSecurityProfileRequest {
    // securityprofile id
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityProfile"
    ];
}

// Update securityprofile request
message UpdateSecurityProfileRequest {
    // updated securityprofile info
    SecurityProfile securityprofile = 1;
    // list of fields to update.
    google.protobuf.FieldMask update_mask = 2;
}

// List securityprofile request
message ListSecurityProfilesRequest {
    // parent
    string parent = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityProfile"
    ];
    // pagination: page-size
    int32 page_size = 2;
    // pagination: start token
    string page_token = 3;
}

// List securityprofile response
message ListSecurityProfilesResponse {
    // list of securityprofiles
    repeated SecurityProfile securityprofile = 1;
    // next page token
    string next_page_token = 2;
}

// Get securityprofile request
message GetSecurityProfileRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED,
        (google.api.resource_reference).type = "opi_api.network.v1alpha1/SecurityProfile"
    ];
}
