// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloudrpc.proto

#include "cloudrpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace opi_api {
namespace network {
namespace cloud {
namespace v1alpha1 {
constexpr GetDeviceCapabilitiesRequest::GetDeviceCapabilitiesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetDeviceCapabilitiesRequestDefaultTypeInternal {
  constexpr GetDeviceCapabilitiesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDeviceCapabilitiesRequestDefaultTypeInternal() {}
  union {
    GetDeviceCapabilitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDeviceCapabilitiesRequestDefaultTypeInternal _GetDeviceCapabilitiesRequest_default_instance_;
constexpr CreateDeviceRequest::CreateDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , device_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , device_(nullptr){}
struct CreateDeviceRequestDefaultTypeInternal {
  constexpr CreateDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDeviceRequestDefaultTypeInternal() {}
  union {
    CreateDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
constexpr DeleteDeviceRequest::DeleteDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteDeviceRequestDefaultTypeInternal {
  constexpr DeleteDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteDeviceRequestDefaultTypeInternal() {}
  union {
    DeleteDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;
constexpr UpdateDeviceRequest::UpdateDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_(nullptr)
  , update_mask_(nullptr){}
struct UpdateDeviceRequestDefaultTypeInternal {
  constexpr UpdateDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateDeviceRequestDefaultTypeInternal() {}
  union {
    UpdateDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;
constexpr ListDevicesRequest::ListDevicesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListDevicesRequestDefaultTypeInternal {
  constexpr ListDevicesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListDevicesRequestDefaultTypeInternal() {}
  union {
    ListDevicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListDevicesRequestDefaultTypeInternal _ListDevicesRequest_default_instance_;
constexpr ListDevicesResponse::ListDevicesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : device_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListDevicesResponseDefaultTypeInternal {
  constexpr ListDevicesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListDevicesResponseDefaultTypeInternal() {}
  union {
    ListDevicesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListDevicesResponseDefaultTypeInternal _ListDevicesResponse_default_instance_;
constexpr GetDeviceRequest::GetDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetDeviceRequestDefaultTypeInternal {
  constexpr GetDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDeviceRequestDefaultTypeInternal() {}
  union {
    GetDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDeviceRequestDefaultTypeInternal _GetDeviceRequest_default_instance_;
constexpr UpdatePortRequest::UpdatePortRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : port_(nullptr)
  , update_mask_(nullptr){}
struct UpdatePortRequestDefaultTypeInternal {
  constexpr UpdatePortRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdatePortRequestDefaultTypeInternal() {}
  union {
    UpdatePortRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdatePortRequestDefaultTypeInternal _UpdatePortRequest_default_instance_;
constexpr ListPortsRequest::ListPortsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListPortsRequestDefaultTypeInternal {
  constexpr ListPortsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPortsRequestDefaultTypeInternal() {}
  union {
    ListPortsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPortsRequestDefaultTypeInternal _ListPortsRequest_default_instance_;
constexpr ListPortsResponse::ListPortsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : port_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListPortsResponseDefaultTypeInternal {
  constexpr ListPortsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPortsResponseDefaultTypeInternal() {}
  union {
    ListPortsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPortsResponseDefaultTypeInternal _ListPortsResponse_default_instance_;
constexpr GetPortRequest::GetPortRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPortRequestDefaultTypeInternal {
  constexpr GetPortRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPortRequestDefaultTypeInternal() {}
  union {
    GetPortRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPortRequestDefaultTypeInternal _GetPortRequest_default_instance_;
constexpr CreateVnicRequest::CreateVnicRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vnic_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vnic_(nullptr){}
struct CreateVnicRequestDefaultTypeInternal {
  constexpr CreateVnicRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVnicRequestDefaultTypeInternal() {}
  union {
    CreateVnicRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVnicRequestDefaultTypeInternal _CreateVnicRequest_default_instance_;
constexpr DeleteVnicRequest::DeleteVnicRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteVnicRequestDefaultTypeInternal {
  constexpr DeleteVnicRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVnicRequestDefaultTypeInternal() {}
  union {
    DeleteVnicRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVnicRequestDefaultTypeInternal _DeleteVnicRequest_default_instance_;
constexpr UpdateVnicRequest::UpdateVnicRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vnic_(nullptr)
  , update_mask_(nullptr){}
struct UpdateVnicRequestDefaultTypeInternal {
  constexpr UpdateVnicRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateVnicRequestDefaultTypeInternal() {}
  union {
    UpdateVnicRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateVnicRequestDefaultTypeInternal _UpdateVnicRequest_default_instance_;
constexpr ListVnicsRequest::ListVnicsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListVnicsRequestDefaultTypeInternal {
  constexpr ListVnicsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVnicsRequestDefaultTypeInternal() {}
  union {
    ListVnicsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVnicsRequestDefaultTypeInternal _ListVnicsRequest_default_instance_;
constexpr ListVnicsResponse::ListVnicsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vnic_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListVnicsResponseDefaultTypeInternal {
  constexpr ListVnicsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVnicsResponseDefaultTypeInternal() {}
  union {
    ListVnicsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVnicsResponseDefaultTypeInternal _ListVnicsResponse_default_instance_;
constexpr GetVnicRequest::GetVnicRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetVnicRequestDefaultTypeInternal {
  constexpr GetVnicRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVnicRequestDefaultTypeInternal() {}
  union {
    GetVnicRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVnicRequestDefaultTypeInternal _GetVnicRequest_default_instance_;
constexpr CreateInterfaceRequest::CreateInterfaceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , interface_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , interface_(nullptr){}
struct CreateInterfaceRequestDefaultTypeInternal {
  constexpr CreateInterfaceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateInterfaceRequestDefaultTypeInternal() {}
  union {
    CreateInterfaceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateInterfaceRequestDefaultTypeInternal _CreateInterfaceRequest_default_instance_;
constexpr DeleteInterfaceRequest::DeleteInterfaceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteInterfaceRequestDefaultTypeInternal {
  constexpr DeleteInterfaceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteInterfaceRequestDefaultTypeInternal() {}
  union {
    DeleteInterfaceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteInterfaceRequestDefaultTypeInternal _DeleteInterfaceRequest_default_instance_;
constexpr UpdateInterfaceRequest::UpdateInterfaceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : interface_(nullptr)
  , update_mask_(nullptr){}
struct UpdateInterfaceRequestDefaultTypeInternal {
  constexpr UpdateInterfaceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateInterfaceRequestDefaultTypeInternal() {}
  union {
    UpdateInterfaceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateInterfaceRequestDefaultTypeInternal _UpdateInterfaceRequest_default_instance_;
constexpr ListInterfacesRequest::ListInterfacesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListInterfacesRequestDefaultTypeInternal {
  constexpr ListInterfacesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListInterfacesRequestDefaultTypeInternal() {}
  union {
    ListInterfacesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListInterfacesRequestDefaultTypeInternal _ListInterfacesRequest_default_instance_;
constexpr ListInterfacesResponse::ListInterfacesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : interface_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListInterfacesResponseDefaultTypeInternal {
  constexpr ListInterfacesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListInterfacesResponseDefaultTypeInternal() {}
  union {
    ListInterfacesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListInterfacesResponseDefaultTypeInternal _ListInterfacesResponse_default_instance_;
constexpr GetInterfaceRequest::GetInterfaceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetInterfaceRequestDefaultTypeInternal {
  constexpr GetInterfaceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInterfaceRequestDefaultTypeInternal() {}
  union {
    GetInterfaceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInterfaceRequestDefaultTypeInternal _GetInterfaceRequest_default_instance_;
constexpr CreateRouteTableRequest::CreateRouteTableRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , routetable_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , routetable_(nullptr){}
struct CreateRouteTableRequestDefaultTypeInternal {
  constexpr CreateRouteTableRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRouteTableRequestDefaultTypeInternal() {}
  union {
    CreateRouteTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRouteTableRequestDefaultTypeInternal _CreateRouteTableRequest_default_instance_;
constexpr DeleteRouteTableRequest::DeleteRouteTableRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRouteTableRequestDefaultTypeInternal {
  constexpr DeleteRouteTableRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRouteTableRequestDefaultTypeInternal() {}
  union {
    DeleteRouteTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRouteTableRequestDefaultTypeInternal _DeleteRouteTableRequest_default_instance_;
constexpr UpdateRouteTableRequest::UpdateRouteTableRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : routetable_(nullptr)
  , update_mask_(nullptr){}
struct UpdateRouteTableRequestDefaultTypeInternal {
  constexpr UpdateRouteTableRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateRouteTableRequestDefaultTypeInternal() {}
  union {
    UpdateRouteTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateRouteTableRequestDefaultTypeInternal _UpdateRouteTableRequest_default_instance_;
constexpr ListRouteTablesRequest::ListRouteTablesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListRouteTablesRequestDefaultTypeInternal {
  constexpr ListRouteTablesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRouteTablesRequestDefaultTypeInternal() {}
  union {
    ListRouteTablesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRouteTablesRequestDefaultTypeInternal _ListRouteTablesRequest_default_instance_;
constexpr ListRouteTablesResponse::ListRouteTablesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : routetable_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListRouteTablesResponseDefaultTypeInternal {
  constexpr ListRouteTablesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRouteTablesResponseDefaultTypeInternal() {}
  union {
    ListRouteTablesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRouteTablesResponseDefaultTypeInternal _ListRouteTablesResponse_default_instance_;
constexpr GetRouteTableRequest::GetRouteTableRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetRouteTableRequestDefaultTypeInternal {
  constexpr GetRouteTableRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRouteTableRequestDefaultTypeInternal() {}
  union {
    GetRouteTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRouteTableRequestDefaultTypeInternal _GetRouteTableRequest_default_instance_;
constexpr CreateRouteRequest::CreateRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , route_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , route_(nullptr){}
struct CreateRouteRequestDefaultTypeInternal {
  constexpr CreateRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateRouteRequestDefaultTypeInternal() {}
  union {
    CreateRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateRouteRequestDefaultTypeInternal _CreateRouteRequest_default_instance_;
constexpr DeleteRouteRequest::DeleteRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteRouteRequestDefaultTypeInternal {
  constexpr DeleteRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteRouteRequestDefaultTypeInternal() {}
  union {
    DeleteRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteRouteRequestDefaultTypeInternal _DeleteRouteRequest_default_instance_;
constexpr UpdateRouteRequest::UpdateRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : route_(nullptr)
  , update_mask_(nullptr){}
struct UpdateRouteRequestDefaultTypeInternal {
  constexpr UpdateRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateRouteRequestDefaultTypeInternal() {}
  union {
    UpdateRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateRouteRequestDefaultTypeInternal _UpdateRouteRequest_default_instance_;
constexpr ListRoutesRequest::ListRoutesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListRoutesRequestDefaultTypeInternal {
  constexpr ListRoutesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRoutesRequestDefaultTypeInternal() {}
  union {
    ListRoutesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRoutesRequestDefaultTypeInternal _ListRoutesRequest_default_instance_;
constexpr ListRoutesResponse::ListRoutesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : route_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListRoutesResponseDefaultTypeInternal {
  constexpr ListRoutesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRoutesResponseDefaultTypeInternal() {}
  union {
    ListRoutesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRoutesResponseDefaultTypeInternal _ListRoutesResponse_default_instance_;
constexpr GetRouteRequest::GetRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetRouteRequestDefaultTypeInternal {
  constexpr GetRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRouteRequestDefaultTypeInternal() {}
  union {
    GetRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRouteRequestDefaultTypeInternal _GetRouteRequest_default_instance_;
constexpr CreateUnderlayRouteRequest::CreateUnderlayRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , underlayroute_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , underlayroute_(nullptr){}
struct CreateUnderlayRouteRequestDefaultTypeInternal {
  constexpr CreateUnderlayRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateUnderlayRouteRequestDefaultTypeInternal() {}
  union {
    CreateUnderlayRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateUnderlayRouteRequestDefaultTypeInternal _CreateUnderlayRouteRequest_default_instance_;
constexpr DeleteUnderlayRouteRequest::DeleteUnderlayRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteUnderlayRouteRequestDefaultTypeInternal {
  constexpr DeleteUnderlayRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteUnderlayRouteRequestDefaultTypeInternal() {}
  union {
    DeleteUnderlayRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteUnderlayRouteRequestDefaultTypeInternal _DeleteUnderlayRouteRequest_default_instance_;
constexpr UpdateUnderlayRouteRequest::UpdateUnderlayRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : underlayroute_(nullptr)
  , update_mask_(nullptr){}
struct UpdateUnderlayRouteRequestDefaultTypeInternal {
  constexpr UpdateUnderlayRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateUnderlayRouteRequestDefaultTypeInternal() {}
  union {
    UpdateUnderlayRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateUnderlayRouteRequestDefaultTypeInternal _UpdateUnderlayRouteRequest_default_instance_;
constexpr ListUnderlayRoutesRequest::ListUnderlayRoutesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListUnderlayRoutesRequestDefaultTypeInternal {
  constexpr ListUnderlayRoutesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListUnderlayRoutesRequestDefaultTypeInternal() {}
  union {
    ListUnderlayRoutesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListUnderlayRoutesRequestDefaultTypeInternal _ListUnderlayRoutesRequest_default_instance_;
constexpr ListUnderlayRoutesResponse::ListUnderlayRoutesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : underlayroute_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListUnderlayRoutesResponseDefaultTypeInternal {
  constexpr ListUnderlayRoutesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListUnderlayRoutesResponseDefaultTypeInternal() {}
  union {
    ListUnderlayRoutesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListUnderlayRoutesResponseDefaultTypeInternal _ListUnderlayRoutesResponse_default_instance_;
constexpr GetUnderlayRouteRequest::GetUnderlayRouteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetUnderlayRouteRequestDefaultTypeInternal {
  constexpr GetUnderlayRouteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetUnderlayRouteRequestDefaultTypeInternal() {}
  union {
    GetUnderlayRouteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetUnderlayRouteRequestDefaultTypeInternal _GetUnderlayRouteRequest_default_instance_;
constexpr CreateBgpRequest::CreateBgpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bgp_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bgp_(nullptr){}
struct CreateBgpRequestDefaultTypeInternal {
  constexpr CreateBgpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateBgpRequestDefaultTypeInternal() {}
  union {
    CreateBgpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateBgpRequestDefaultTypeInternal _CreateBgpRequest_default_instance_;
constexpr DeleteBgpRequest::DeleteBgpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteBgpRequestDefaultTypeInternal {
  constexpr DeleteBgpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteBgpRequestDefaultTypeInternal() {}
  union {
    DeleteBgpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteBgpRequestDefaultTypeInternal _DeleteBgpRequest_default_instance_;
constexpr UpdateBgpRequest::UpdateBgpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bgp_(nullptr)
  , update_mask_(nullptr){}
struct UpdateBgpRequestDefaultTypeInternal {
  constexpr UpdateBgpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateBgpRequestDefaultTypeInternal() {}
  union {
    UpdateBgpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateBgpRequestDefaultTypeInternal _UpdateBgpRequest_default_instance_;
constexpr ListBgpsRequest::ListBgpsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListBgpsRequestDefaultTypeInternal {
  constexpr ListBgpsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListBgpsRequestDefaultTypeInternal() {}
  union {
    ListBgpsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListBgpsRequestDefaultTypeInternal _ListBgpsRequest_default_instance_;
constexpr ListBgpsResponse::ListBgpsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bgp_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListBgpsResponseDefaultTypeInternal {
  constexpr ListBgpsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListBgpsResponseDefaultTypeInternal() {}
  union {
    ListBgpsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListBgpsResponseDefaultTypeInternal _ListBgpsResponse_default_instance_;
constexpr GetBgpRequest::GetBgpRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBgpRequestDefaultTypeInternal {
  constexpr GetBgpRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBgpRequestDefaultTypeInternal() {}
  union {
    GetBgpRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBgpRequestDefaultTypeInternal _GetBgpRequest_default_instance_;
constexpr CreateBGPPeerRequest::CreateBGPPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bgppeer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bgppeer_(nullptr){}
struct CreateBGPPeerRequestDefaultTypeInternal {
  constexpr CreateBGPPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateBGPPeerRequestDefaultTypeInternal() {}
  union {
    CreateBGPPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateBGPPeerRequestDefaultTypeInternal _CreateBGPPeerRequest_default_instance_;
constexpr DeleteBGPPeerRequest::DeleteBGPPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteBGPPeerRequestDefaultTypeInternal {
  constexpr DeleteBGPPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteBGPPeerRequestDefaultTypeInternal() {}
  union {
    DeleteBGPPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteBGPPeerRequestDefaultTypeInternal _DeleteBGPPeerRequest_default_instance_;
constexpr UpdateBGPPeerRequest::UpdateBGPPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bgppeer_(nullptr)
  , update_mask_(nullptr){}
struct UpdateBGPPeerRequestDefaultTypeInternal {
  constexpr UpdateBGPPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateBGPPeerRequestDefaultTypeInternal() {}
  union {
    UpdateBGPPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateBGPPeerRequestDefaultTypeInternal _UpdateBGPPeerRequest_default_instance_;
constexpr ListBGPPeersRequest::ListBGPPeersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListBGPPeersRequestDefaultTypeInternal {
  constexpr ListBGPPeersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListBGPPeersRequestDefaultTypeInternal() {}
  union {
    ListBGPPeersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListBGPPeersRequestDefaultTypeInternal _ListBGPPeersRequest_default_instance_;
constexpr ListBGPPeersResponse::ListBGPPeersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bgppeer_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListBGPPeersResponseDefaultTypeInternal {
  constexpr ListBGPPeersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListBGPPeersResponseDefaultTypeInternal() {}
  union {
    ListBGPPeersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListBGPPeersResponseDefaultTypeInternal _ListBGPPeersResponse_default_instance_;
constexpr GetBGPPeerRequest::GetBGPPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBGPPeerRequestDefaultTypeInternal {
  constexpr GetBGPPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBGPPeerRequestDefaultTypeInternal() {}
  union {
    GetBGPPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBGPPeerRequestDefaultTypeInternal _GetBGPPeerRequest_default_instance_;
constexpr CreateBGPPeerAfRequest::CreateBGPPeerAfRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bgppeeraf_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bgppeeraf_(nullptr){}
struct CreateBGPPeerAfRequestDefaultTypeInternal {
  constexpr CreateBGPPeerAfRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateBGPPeerAfRequestDefaultTypeInternal() {}
  union {
    CreateBGPPeerAfRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateBGPPeerAfRequestDefaultTypeInternal _CreateBGPPeerAfRequest_default_instance_;
constexpr DeleteBGPPeerAfRequest::DeleteBGPPeerAfRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteBGPPeerAfRequestDefaultTypeInternal {
  constexpr DeleteBGPPeerAfRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteBGPPeerAfRequestDefaultTypeInternal() {}
  union {
    DeleteBGPPeerAfRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteBGPPeerAfRequestDefaultTypeInternal _DeleteBGPPeerAfRequest_default_instance_;
constexpr UpdateBGPPeerAfRequest::UpdateBGPPeerAfRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bgppeeraf_(nullptr)
  , update_mask_(nullptr){}
struct UpdateBGPPeerAfRequestDefaultTypeInternal {
  constexpr UpdateBGPPeerAfRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateBGPPeerAfRequestDefaultTypeInternal() {}
  union {
    UpdateBGPPeerAfRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateBGPPeerAfRequestDefaultTypeInternal _UpdateBGPPeerAfRequest_default_instance_;
constexpr ListBGPPeerAfsRequest::ListBGPPeerAfsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListBGPPeerAfsRequestDefaultTypeInternal {
  constexpr ListBGPPeerAfsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListBGPPeerAfsRequestDefaultTypeInternal() {}
  union {
    ListBGPPeerAfsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListBGPPeerAfsRequestDefaultTypeInternal _ListBGPPeerAfsRequest_default_instance_;
constexpr ListBGPPeerAfsResponse::ListBGPPeerAfsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bgppeeraf_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListBGPPeerAfsResponseDefaultTypeInternal {
  constexpr ListBGPPeerAfsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListBGPPeerAfsResponseDefaultTypeInternal() {}
  union {
    ListBGPPeerAfsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListBGPPeerAfsResponseDefaultTypeInternal _ListBGPPeerAfsResponse_default_instance_;
constexpr GetBGPPeerAfRequest::GetBGPPeerAfRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetBGPPeerAfRequestDefaultTypeInternal {
  constexpr GetBGPPeerAfRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetBGPPeerAfRequestDefaultTypeInternal() {}
  union {
    GetBGPPeerAfRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetBGPPeerAfRequestDefaultTypeInternal _GetBGPPeerAfRequest_default_instance_;
constexpr CreateMappingRequest::CreateMappingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mapping_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mapping_(nullptr){}
struct CreateMappingRequestDefaultTypeInternal {
  constexpr CreateMappingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateMappingRequestDefaultTypeInternal() {}
  union {
    CreateMappingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateMappingRequestDefaultTypeInternal _CreateMappingRequest_default_instance_;
constexpr DeleteMappingRequest::DeleteMappingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteMappingRequestDefaultTypeInternal {
  constexpr DeleteMappingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteMappingRequestDefaultTypeInternal() {}
  union {
    DeleteMappingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteMappingRequestDefaultTypeInternal _DeleteMappingRequest_default_instance_;
constexpr UpdateMappingRequest::UpdateMappingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mapping_(nullptr)
  , update_mask_(nullptr){}
struct UpdateMappingRequestDefaultTypeInternal {
  constexpr UpdateMappingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateMappingRequestDefaultTypeInternal() {}
  union {
    UpdateMappingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateMappingRequestDefaultTypeInternal _UpdateMappingRequest_default_instance_;
constexpr ListMappingsRequest::ListMappingsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListMappingsRequestDefaultTypeInternal {
  constexpr ListMappingsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListMappingsRequestDefaultTypeInternal() {}
  union {
    ListMappingsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListMappingsRequestDefaultTypeInternal _ListMappingsRequest_default_instance_;
constexpr ListMappingsResponse::ListMappingsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mapping_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListMappingsResponseDefaultTypeInternal {
  constexpr ListMappingsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListMappingsResponseDefaultTypeInternal() {}
  union {
    ListMappingsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListMappingsResponseDefaultTypeInternal _ListMappingsResponse_default_instance_;
constexpr GetMappingRequest::GetMappingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetMappingRequestDefaultTypeInternal {
  constexpr GetMappingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMappingRequestDefaultTypeInternal() {}
  union {
    GetMappingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMappingRequestDefaultTypeInternal _GetMappingRequest_default_instance_;
constexpr CreateNextHopRequest::CreateNextHopRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nexthop_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nexthop_(nullptr){}
struct CreateNextHopRequestDefaultTypeInternal {
  constexpr CreateNextHopRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNextHopRequestDefaultTypeInternal() {}
  union {
    CreateNextHopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNextHopRequestDefaultTypeInternal _CreateNextHopRequest_default_instance_;
constexpr DeleteNextHopRequest::DeleteNextHopRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteNextHopRequestDefaultTypeInternal {
  constexpr DeleteNextHopRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteNextHopRequestDefaultTypeInternal() {}
  union {
    DeleteNextHopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteNextHopRequestDefaultTypeInternal _DeleteNextHopRequest_default_instance_;
constexpr UpdateNextHopRequest::UpdateNextHopRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nexthop_(nullptr)
  , update_mask_(nullptr){}
struct UpdateNextHopRequestDefaultTypeInternal {
  constexpr UpdateNextHopRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateNextHopRequestDefaultTypeInternal() {}
  union {
    UpdateNextHopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateNextHopRequestDefaultTypeInternal _UpdateNextHopRequest_default_instance_;
constexpr ListNextHopsRequest::ListNextHopsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListNextHopsRequestDefaultTypeInternal {
  constexpr ListNextHopsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNextHopsRequestDefaultTypeInternal() {}
  union {
    ListNextHopsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNextHopsRequestDefaultTypeInternal _ListNextHopsRequest_default_instance_;
constexpr ListNextHopsResponse::ListNextHopsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nexthop_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListNextHopsResponseDefaultTypeInternal {
  constexpr ListNextHopsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNextHopsResponseDefaultTypeInternal() {}
  union {
    ListNextHopsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNextHopsResponseDefaultTypeInternal _ListNextHopsResponse_default_instance_;
constexpr GetNextHopRequest::GetNextHopRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetNextHopRequestDefaultTypeInternal {
  constexpr GetNextHopRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNextHopRequestDefaultTypeInternal() {}
  union {
    GetNextHopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNextHopRequestDefaultTypeInternal _GetNextHopRequest_default_instance_;
constexpr CreateNextHopGroupRequest::CreateNextHopGroupRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nexthopgroup_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nexthopgroup_(nullptr){}
struct CreateNextHopGroupRequestDefaultTypeInternal {
  constexpr CreateNextHopGroupRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateNextHopGroupRequestDefaultTypeInternal() {}
  union {
    CreateNextHopGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateNextHopGroupRequestDefaultTypeInternal _CreateNextHopGroupRequest_default_instance_;
constexpr DeleteNextHopGroupRequest::DeleteNextHopGroupRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteNextHopGroupRequestDefaultTypeInternal {
  constexpr DeleteNextHopGroupRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteNextHopGroupRequestDefaultTypeInternal() {}
  union {
    DeleteNextHopGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteNextHopGroupRequestDefaultTypeInternal _DeleteNextHopGroupRequest_default_instance_;
constexpr UpdateNextHopGroupRequest::UpdateNextHopGroupRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nexthopgroup_(nullptr)
  , update_mask_(nullptr){}
struct UpdateNextHopGroupRequestDefaultTypeInternal {
  constexpr UpdateNextHopGroupRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateNextHopGroupRequestDefaultTypeInternal() {}
  union {
    UpdateNextHopGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateNextHopGroupRequestDefaultTypeInternal _UpdateNextHopGroupRequest_default_instance_;
constexpr ListNextHopGroupsRequest::ListNextHopGroupsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListNextHopGroupsRequestDefaultTypeInternal {
  constexpr ListNextHopGroupsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNextHopGroupsRequestDefaultTypeInternal() {}
  union {
    ListNextHopGroupsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNextHopGroupsRequestDefaultTypeInternal _ListNextHopGroupsRequest_default_instance_;
constexpr ListNextHopGroupsResponse::ListNextHopGroupsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nexthopgroup_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListNextHopGroupsResponseDefaultTypeInternal {
  constexpr ListNextHopGroupsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNextHopGroupsResponseDefaultTypeInternal() {}
  union {
    ListNextHopGroupsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNextHopGroupsResponseDefaultTypeInternal _ListNextHopGroupsResponse_default_instance_;
constexpr GetNextHopGroupRequest::GetNextHopGroupRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetNextHopGroupRequestDefaultTypeInternal {
  constexpr GetNextHopGroupRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetNextHopGroupRequestDefaultTypeInternal() {}
  union {
    GetNextHopGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetNextHopGroupRequestDefaultTypeInternal _GetNextHopGroupRequest_default_instance_;
constexpr CreateSubnetRequest::CreateSubnetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subnet_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subnet_(nullptr){}
struct CreateSubnetRequestDefaultTypeInternal {
  constexpr CreateSubnetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSubnetRequestDefaultTypeInternal() {}
  union {
    CreateSubnetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSubnetRequestDefaultTypeInternal _CreateSubnetRequest_default_instance_;
constexpr DeleteSubnetRequest::DeleteSubnetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteSubnetRequestDefaultTypeInternal {
  constexpr DeleteSubnetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSubnetRequestDefaultTypeInternal() {}
  union {
    DeleteSubnetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSubnetRequestDefaultTypeInternal _DeleteSubnetRequest_default_instance_;
constexpr UpdateSubnetRequest::UpdateSubnetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnet_(nullptr)
  , update_mask_(nullptr){}
struct UpdateSubnetRequestDefaultTypeInternal {
  constexpr UpdateSubnetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSubnetRequestDefaultTypeInternal() {}
  union {
    UpdateSubnetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSubnetRequestDefaultTypeInternal _UpdateSubnetRequest_default_instance_;
constexpr ListSubnetsRequest::ListSubnetsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListSubnetsRequestDefaultTypeInternal {
  constexpr ListSubnetsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSubnetsRequestDefaultTypeInternal() {}
  union {
    ListSubnetsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSubnetsRequestDefaultTypeInternal _ListSubnetsRequest_default_instance_;
constexpr ListSubnetsResponse::ListSubnetsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnet_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListSubnetsResponseDefaultTypeInternal {
  constexpr ListSubnetsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSubnetsResponseDefaultTypeInternal() {}
  union {
    ListSubnetsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSubnetsResponseDefaultTypeInternal _ListSubnetsResponse_default_instance_;
constexpr GetSubnetRequest::GetSubnetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSubnetRequestDefaultTypeInternal {
  constexpr GetSubnetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSubnetRequestDefaultTypeInternal() {}
  union {
    GetSubnetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSubnetRequestDefaultTypeInternal _GetSubnetRequest_default_instance_;
constexpr CreateTunnelRequest::CreateTunnelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tunnel_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tunnel_(nullptr){}
struct CreateTunnelRequestDefaultTypeInternal {
  constexpr CreateTunnelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateTunnelRequestDefaultTypeInternal() {}
  union {
    CreateTunnelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateTunnelRequestDefaultTypeInternal _CreateTunnelRequest_default_instance_;
constexpr DeleteTunnelRequest::DeleteTunnelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteTunnelRequestDefaultTypeInternal {
  constexpr DeleteTunnelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteTunnelRequestDefaultTypeInternal() {}
  union {
    DeleteTunnelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteTunnelRequestDefaultTypeInternal _DeleteTunnelRequest_default_instance_;
constexpr UpdateTunnelRequest::UpdateTunnelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tunnel_(nullptr)
  , update_mask_(nullptr){}
struct UpdateTunnelRequestDefaultTypeInternal {
  constexpr UpdateTunnelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateTunnelRequestDefaultTypeInternal() {}
  union {
    UpdateTunnelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateTunnelRequestDefaultTypeInternal _UpdateTunnelRequest_default_instance_;
constexpr ListTunnelsRequest::ListTunnelsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListTunnelsRequestDefaultTypeInternal {
  constexpr ListTunnelsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTunnelsRequestDefaultTypeInternal() {}
  union {
    ListTunnelsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTunnelsRequestDefaultTypeInternal _ListTunnelsRequest_default_instance_;
constexpr ListTunnelsResponse::ListTunnelsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tunnel_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListTunnelsResponseDefaultTypeInternal {
  constexpr ListTunnelsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTunnelsResponseDefaultTypeInternal() {}
  union {
    ListTunnelsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTunnelsResponseDefaultTypeInternal _ListTunnelsResponse_default_instance_;
constexpr GetTunnelRequest::GetTunnelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetTunnelRequestDefaultTypeInternal {
  constexpr GetTunnelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTunnelRequestDefaultTypeInternal() {}
  union {
    GetTunnelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTunnelRequestDefaultTypeInternal _GetTunnelRequest_default_instance_;
constexpr CreateVpcRequest::CreateVpcRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vpc_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vpc_(nullptr){}
struct CreateVpcRequestDefaultTypeInternal {
  constexpr CreateVpcRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVpcRequestDefaultTypeInternal() {}
  union {
    CreateVpcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVpcRequestDefaultTypeInternal _CreateVpcRequest_default_instance_;
constexpr DeleteVpcRequest::DeleteVpcRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteVpcRequestDefaultTypeInternal {
  constexpr DeleteVpcRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVpcRequestDefaultTypeInternal() {}
  union {
    DeleteVpcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVpcRequestDefaultTypeInternal _DeleteVpcRequest_default_instance_;
constexpr UpdateVpcRequest::UpdateVpcRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vpc_(nullptr)
  , update_mask_(nullptr){}
struct UpdateVpcRequestDefaultTypeInternal {
  constexpr UpdateVpcRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateVpcRequestDefaultTypeInternal() {}
  union {
    UpdateVpcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateVpcRequestDefaultTypeInternal _UpdateVpcRequest_default_instance_;
constexpr ListVpcsRequest::ListVpcsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListVpcsRequestDefaultTypeInternal {
  constexpr ListVpcsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVpcsRequestDefaultTypeInternal() {}
  union {
    ListVpcsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVpcsRequestDefaultTypeInternal _ListVpcsRequest_default_instance_;
constexpr ListVpcsResponse::ListVpcsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vpc_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListVpcsResponseDefaultTypeInternal {
  constexpr ListVpcsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVpcsResponseDefaultTypeInternal() {}
  union {
    ListVpcsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVpcsResponseDefaultTypeInternal _ListVpcsResponse_default_instance_;
constexpr GetVpcRequest::GetVpcRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetVpcRequestDefaultTypeInternal {
  constexpr GetVpcRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVpcRequestDefaultTypeInternal() {}
  union {
    GetVpcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVpcRequestDefaultTypeInternal _GetVpcRequest_default_instance_;
constexpr CreateVPCPeerRequest::CreateVPCPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vpcpeer_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vpcpeer_(nullptr){}
struct CreateVPCPeerRequestDefaultTypeInternal {
  constexpr CreateVPCPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVPCPeerRequestDefaultTypeInternal() {}
  union {
    CreateVPCPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVPCPeerRequestDefaultTypeInternal _CreateVPCPeerRequest_default_instance_;
constexpr DeleteVPCPeerRequest::DeleteVPCPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteVPCPeerRequestDefaultTypeInternal {
  constexpr DeleteVPCPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVPCPeerRequestDefaultTypeInternal() {}
  union {
    DeleteVPCPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVPCPeerRequestDefaultTypeInternal _DeleteVPCPeerRequest_default_instance_;
constexpr UpdateVPCPeerRequest::UpdateVPCPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vpcpeer_(nullptr)
  , update_mask_(nullptr){}
struct UpdateVPCPeerRequestDefaultTypeInternal {
  constexpr UpdateVPCPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateVPCPeerRequestDefaultTypeInternal() {}
  union {
    UpdateVPCPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateVPCPeerRequestDefaultTypeInternal _UpdateVPCPeerRequest_default_instance_;
constexpr ListVPCPeersRequest::ListVPCPeersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListVPCPeersRequestDefaultTypeInternal {
  constexpr ListVPCPeersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVPCPeersRequestDefaultTypeInternal() {}
  union {
    ListVPCPeersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVPCPeersRequestDefaultTypeInternal _ListVPCPeersRequest_default_instance_;
constexpr ListVPCPeersResponse::ListVPCPeersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vpcpeer_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListVPCPeersResponseDefaultTypeInternal {
  constexpr ListVPCPeersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVPCPeersResponseDefaultTypeInternal() {}
  union {
    ListVPCPeersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVPCPeersResponseDefaultTypeInternal _ListVPCPeersResponse_default_instance_;
constexpr GetVPCPeerRequest::GetVPCPeerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetVPCPeerRequestDefaultTypeInternal {
  constexpr GetVPCPeerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVPCPeerRequestDefaultTypeInternal() {}
  union {
    GetVPCPeerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVPCPeerRequestDefaultTypeInternal _GetVPCPeerRequest_default_instance_;
constexpr CreateSecurityPolicyRequest::CreateSecurityPolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , securitypolicy_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , securitypolicy_(nullptr){}
struct CreateSecurityPolicyRequestDefaultTypeInternal {
  constexpr CreateSecurityPolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSecurityPolicyRequestDefaultTypeInternal() {}
  union {
    CreateSecurityPolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSecurityPolicyRequestDefaultTypeInternal _CreateSecurityPolicyRequest_default_instance_;
constexpr DeleteSecurityPolicyRequest::DeleteSecurityPolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteSecurityPolicyRequestDefaultTypeInternal {
  constexpr DeleteSecurityPolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSecurityPolicyRequestDefaultTypeInternal() {}
  union {
    DeleteSecurityPolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSecurityPolicyRequestDefaultTypeInternal _DeleteSecurityPolicyRequest_default_instance_;
constexpr UpdateSecurityPolicyRequest::UpdateSecurityPolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : securitypolicy_(nullptr)
  , update_mask_(nullptr){}
struct UpdateSecurityPolicyRequestDefaultTypeInternal {
  constexpr UpdateSecurityPolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSecurityPolicyRequestDefaultTypeInternal() {}
  union {
    UpdateSecurityPolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSecurityPolicyRequestDefaultTypeInternal _UpdateSecurityPolicyRequest_default_instance_;
constexpr ListSecurityPolicysRequest::ListSecurityPolicysRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListSecurityPolicysRequestDefaultTypeInternal {
  constexpr ListSecurityPolicysRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSecurityPolicysRequestDefaultTypeInternal() {}
  union {
    ListSecurityPolicysRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSecurityPolicysRequestDefaultTypeInternal _ListSecurityPolicysRequest_default_instance_;
constexpr ListSecurityPolicysResponse::ListSecurityPolicysResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : securitypolicy_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListSecurityPolicysResponseDefaultTypeInternal {
  constexpr ListSecurityPolicysResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSecurityPolicysResponseDefaultTypeInternal() {}
  union {
    ListSecurityPolicysResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSecurityPolicysResponseDefaultTypeInternal _ListSecurityPolicysResponse_default_instance_;
constexpr GetSecurityPolicyRequest::GetSecurityPolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSecurityPolicyRequestDefaultTypeInternal {
  constexpr GetSecurityPolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSecurityPolicyRequestDefaultTypeInternal() {}
  union {
    GetSecurityPolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSecurityPolicyRequestDefaultTypeInternal _GetSecurityPolicyRequest_default_instance_;
constexpr CreateSecurityRuleRequest::CreateSecurityRuleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , securityrule_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , securityrule_(nullptr){}
struct CreateSecurityRuleRequestDefaultTypeInternal {
  constexpr CreateSecurityRuleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSecurityRuleRequestDefaultTypeInternal() {}
  union {
    CreateSecurityRuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSecurityRuleRequestDefaultTypeInternal _CreateSecurityRuleRequest_default_instance_;
constexpr DeleteSecurityRuleRequest::DeleteSecurityRuleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteSecurityRuleRequestDefaultTypeInternal {
  constexpr DeleteSecurityRuleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSecurityRuleRequestDefaultTypeInternal() {}
  union {
    DeleteSecurityRuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSecurityRuleRequestDefaultTypeInternal _DeleteSecurityRuleRequest_default_instance_;
constexpr UpdateSecurityRuleRequest::UpdateSecurityRuleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : securityrule_(nullptr)
  , update_mask_(nullptr){}
struct UpdateSecurityRuleRequestDefaultTypeInternal {
  constexpr UpdateSecurityRuleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSecurityRuleRequestDefaultTypeInternal() {}
  union {
    UpdateSecurityRuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSecurityRuleRequestDefaultTypeInternal _UpdateSecurityRuleRequest_default_instance_;
constexpr ListSecurityRulesRequest::ListSecurityRulesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListSecurityRulesRequestDefaultTypeInternal {
  constexpr ListSecurityRulesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSecurityRulesRequestDefaultTypeInternal() {}
  union {
    ListSecurityRulesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSecurityRulesRequestDefaultTypeInternal _ListSecurityRulesRequest_default_instance_;
constexpr ListSecurityRulesResponse::ListSecurityRulesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : securityrule_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListSecurityRulesResponseDefaultTypeInternal {
  constexpr ListSecurityRulesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSecurityRulesResponseDefaultTypeInternal() {}
  union {
    ListSecurityRulesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSecurityRulesResponseDefaultTypeInternal _ListSecurityRulesResponse_default_instance_;
constexpr GetSecurityRuleRequest::GetSecurityRuleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSecurityRuleRequestDefaultTypeInternal {
  constexpr GetSecurityRuleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSecurityRuleRequestDefaultTypeInternal() {}
  union {
    GetSecurityRuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSecurityRuleRequestDefaultTypeInternal _GetSecurityRuleRequest_default_instance_;
constexpr CreateSecurityProfileRequest::CreateSecurityProfileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , securityprofile_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , securityprofile_(nullptr){}
struct CreateSecurityProfileRequestDefaultTypeInternal {
  constexpr CreateSecurityProfileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSecurityProfileRequestDefaultTypeInternal() {}
  union {
    CreateSecurityProfileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSecurityProfileRequestDefaultTypeInternal _CreateSecurityProfileRequest_default_instance_;
constexpr DeleteSecurityProfileRequest::DeleteSecurityProfileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteSecurityProfileRequestDefaultTypeInternal {
  constexpr DeleteSecurityProfileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSecurityProfileRequestDefaultTypeInternal() {}
  union {
    DeleteSecurityProfileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSecurityProfileRequestDefaultTypeInternal _DeleteSecurityProfileRequest_default_instance_;
constexpr UpdateSecurityProfileRequest::UpdateSecurityProfileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : securityprofile_(nullptr)
  , update_mask_(nullptr){}
struct UpdateSecurityProfileRequestDefaultTypeInternal {
  constexpr UpdateSecurityProfileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateSecurityProfileRequestDefaultTypeInternal() {}
  union {
    UpdateSecurityProfileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateSecurityProfileRequestDefaultTypeInternal _UpdateSecurityProfileRequest_default_instance_;
constexpr ListSecurityProfilesRequest::ListSecurityProfilesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parent_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , page_size_(0){}
struct ListSecurityProfilesRequestDefaultTypeInternal {
  constexpr ListSecurityProfilesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSecurityProfilesRequestDefaultTypeInternal() {}
  union {
    ListSecurityProfilesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSecurityProfilesRequestDefaultTypeInternal _ListSecurityProfilesRequest_default_instance_;
constexpr ListSecurityProfilesResponse::ListSecurityProfilesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : securityprofile_()
  , next_page_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListSecurityProfilesResponseDefaultTypeInternal {
  constexpr ListSecurityProfilesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSecurityProfilesResponseDefaultTypeInternal() {}
  union {
    ListSecurityProfilesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSecurityProfilesResponseDefaultTypeInternal _ListSecurityProfilesResponse_default_instance_;
constexpr GetSecurityProfileRequest::GetSecurityProfileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSecurityProfileRequestDefaultTypeInternal {
  constexpr GetSecurityProfileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSecurityProfileRequestDefaultTypeInternal() {}
  union {
    GetSecurityProfileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSecurityProfileRequestDefaultTypeInternal _GetSecurityProfileRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace cloud
}  // namespace network
}  // namespace opi_api
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cloudrpc_2eproto[119];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cloudrpc_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cloudrpc_2eproto = nullptr;

const uint32_t TableStruct_cloudrpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, device_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, device_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, device_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesResponse, device_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListDevicesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetDeviceRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdatePortRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdatePortRequest, port_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdatePortRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsResponse, port_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListPortsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetPortRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetPortRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVnicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVnicRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVnicRequest, vnic_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVnicRequest, vnic_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteVnicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteVnicRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, vnic_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsResponse, vnic_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVnicsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetVnicRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetVnicRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, interface_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, interface_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, interface_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, interface_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetInterfaceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetInterfaceRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, routetable_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, routetable_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, routetable_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, routetable_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetRouteTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetRouteTableRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteRequest, route_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateRouteRequest, route_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteRouteRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, route_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesResponse, route_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListRoutesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetRouteRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, underlayroute_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, underlayroute_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, underlayroute_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, underlayroute_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBgpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBgpRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBgpRequest, bgp_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBgpRequest, bgp_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteBgpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteBgpRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, bgp_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsResponse, bgp_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBgpsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetBgpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetBgpRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, bgppeer_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, bgppeer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, bgppeer_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, bgppeer_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, bgppeeraf_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, bgppeeraf_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, bgppeeraf_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, bgppeeraf_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateMappingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateMappingRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateMappingRequest, mapping_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateMappingRequest, mapping_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteMappingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteMappingRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, mapping_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsResponse, mapping_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListMappingsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetMappingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetMappingRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, nexthop_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, nexthop_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, nexthop_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, nexthop_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetNextHopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetNextHopRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, nexthopgroup_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, nexthopgroup_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, nexthopgroup_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, nexthopgroup_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, subnet_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, subnet_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, subnet_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, subnet_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSubnetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSubnetRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, tunnel_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, tunnel_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, tunnel_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, tunnel_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetTunnelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetTunnelRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVpcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVpcRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVpcRequest, vpc_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVpcRequest, vpc_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteVpcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteVpcRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, vpc_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsResponse, vpc_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVpcsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetVpcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetVpcRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, vpcpeer_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, vpcpeer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, vpcpeer_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, vpcpeer_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, securitypolicy_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, securitypolicy_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, securitypolicy_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, securitypolicy_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, securityrule_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, securityrule_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, securityrule_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, securityrule_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, securityprofile_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, securityprofile_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, securityprofile_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, securityprofile_),
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest, id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest)},
  { 6, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateDeviceRequest)},
  { 15, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest)},
  { 22, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest)},
  { 30, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListDevicesRequest)},
  { 39, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListDevicesResponse)},
  { 47, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetDeviceRequest)},
  { 54, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdatePortRequest)},
  { 62, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListPortsRequest)},
  { 71, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListPortsResponse)},
  { 79, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetPortRequest)},
  { 86, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateVnicRequest)},
  { 95, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteVnicRequest)},
  { 102, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateVnicRequest)},
  { 110, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListVnicsRequest)},
  { 119, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListVnicsResponse)},
  { 127, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetVnicRequest)},
  { 134, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest)},
  { 143, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest)},
  { 150, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest)},
  { 158, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListInterfacesRequest)},
  { 167, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListInterfacesResponse)},
  { 175, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetInterfaceRequest)},
  { 182, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest)},
  { 191, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest)},
  { 198, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest)},
  { 206, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest)},
  { 215, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse)},
  { 223, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetRouteTableRequest)},
  { 230, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateRouteRequest)},
  { 239, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteRouteRequest)},
  { 246, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateRouteRequest)},
  { 254, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListRoutesRequest)},
  { 263, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListRoutesResponse)},
  { 271, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetRouteRequest)},
  { 278, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest)},
  { 287, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest)},
  { 294, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest)},
  { 302, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest)},
  { 311, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse)},
  { 319, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest)},
  { 326, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateBgpRequest)},
  { 335, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteBgpRequest)},
  { 342, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateBgpRequest)},
  { 350, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListBgpsRequest)},
  { 359, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListBgpsResponse)},
  { 367, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetBgpRequest)},
  { 374, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest)},
  { 383, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest)},
  { 390, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest)},
  { 398, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest)},
  { 407, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse)},
  { 415, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest)},
  { 422, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest)},
  { 431, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest)},
  { 438, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest)},
  { 446, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest)},
  { 455, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse)},
  { 463, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest)},
  { 470, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateMappingRequest)},
  { 479, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteMappingRequest)},
  { 486, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateMappingRequest)},
  { 494, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListMappingsRequest)},
  { 503, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListMappingsResponse)},
  { 511, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetMappingRequest)},
  { 518, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateNextHopRequest)},
  { 527, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest)},
  { 534, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest)},
  { 542, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListNextHopsRequest)},
  { 551, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListNextHopsResponse)},
  { 559, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetNextHopRequest)},
  { 566, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest)},
  { 575, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest)},
  { 582, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest)},
  { 590, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest)},
  { 599, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse)},
  { 607, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest)},
  { 614, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateSubnetRequest)},
  { 623, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest)},
  { 630, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest)},
  { 638, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSubnetsRequest)},
  { 647, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSubnetsResponse)},
  { 655, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetSubnetRequest)},
  { 662, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateTunnelRequest)},
  { 671, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest)},
  { 678, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest)},
  { 686, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListTunnelsRequest)},
  { 695, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListTunnelsResponse)},
  { 703, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetTunnelRequest)},
  { 710, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateVpcRequest)},
  { 719, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteVpcRequest)},
  { 726, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateVpcRequest)},
  { 734, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListVpcsRequest)},
  { 743, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListVpcsResponse)},
  { 751, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetVpcRequest)},
  { 758, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest)},
  { 767, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest)},
  { 774, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest)},
  { 782, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest)},
  { 791, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse)},
  { 799, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest)},
  { 806, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest)},
  { 815, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest)},
  { 822, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest)},
  { 830, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest)},
  { 839, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse)},
  { 847, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest)},
  { 854, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest)},
  { 863, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest)},
  { 870, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest)},
  { 878, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest)},
  { 887, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse)},
  { 895, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest)},
  { 902, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest)},
  { 911, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest)},
  { 918, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest)},
  { 926, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest)},
  { 935, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse)},
  { 943, -1, -1, sizeof(::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetDeviceCapabilitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListDevicesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListDevicesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdatePortRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListPortsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListPortsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetPortRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateVnicRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteVnicRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateVnicRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListVnicsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListVnicsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetVnicRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateInterfaceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteInterfaceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateInterfaceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListInterfacesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListInterfacesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetInterfaceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateRouteTableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteRouteTableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateRouteTableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListRouteTablesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListRouteTablesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetRouteTableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListRoutesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListRoutesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateUnderlayRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteUnderlayRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateUnderlayRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListUnderlayRoutesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListUnderlayRoutesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetUnderlayRouteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateBgpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteBgpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateBgpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListBgpsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListBgpsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetBgpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateBGPPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteBGPPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateBGPPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListBGPPeersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListBGPPeersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetBGPPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateBGPPeerAfRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteBGPPeerAfRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateBGPPeerAfRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListBGPPeerAfsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListBGPPeerAfsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetBGPPeerAfRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateMappingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteMappingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateMappingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListMappingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListMappingsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetMappingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateNextHopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteNextHopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateNextHopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListNextHopsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListNextHopsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetNextHopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateNextHopGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteNextHopGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateNextHopGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListNextHopGroupsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListNextHopGroupsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetNextHopGroupRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateSubnetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteSubnetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateSubnetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSubnetsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSubnetsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetSubnetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateTunnelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteTunnelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateTunnelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListTunnelsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListTunnelsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetTunnelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateVpcRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteVpcRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateVpcRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListVpcsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListVpcsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetVpcRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateVPCPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteVPCPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateVPCPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListVPCPeersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListVPCPeersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetVPCPeerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateSecurityPolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteSecurityPolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateSecurityPolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSecurityPolicysRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSecurityPolicysResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetSecurityPolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateSecurityRuleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteSecurityRuleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateSecurityRuleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSecurityRulesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSecurityRulesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetSecurityRuleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_CreateSecurityProfileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_DeleteSecurityProfileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_UpdateSecurityProfileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSecurityProfilesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_ListSecurityProfilesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::opi_api::network::cloud::v1alpha1::_GetSecurityProfileRequest_default_instance_),
};

const char descriptor_table_protodef_cloudrpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016cloudrpc.proto\022\036opi_api.network.cloud."
  "v1alpha1\032\034google/api/annotations.proto\032\027"
  "google/api/client.proto\032\033google/protobuf"
  "/empty.proto\032\037google/api/field_behavior."
  "proto\032 google/protobuf/field_mask.proto\032"
  "\031google/api/resource.proto\032\014device.proto"
  "\032\nport.proto\032\017interface.proto\032\013route.pro"
  "to\032\nvnic.proto\032\023underlayroute.proto\032\tbgp"
  ".proto\032\rnexthop.proto\032\rmapping.proto\032\014su"
  "bnet.proto\032\014tunnel.proto\032\tvpc.proto\032\023net"
  "workpolicy.proto\"\036\n\034GetDeviceCapabilitie"
  "sRequest\"\236\001\n\023CreateDeviceRequest\0227\n\006pare"
  "nt\030\001 \001(\tB\'\340A\002\372A!\n\037opi_api.network.v1alph"
  "a1/Device\022;\n\006device\030\002 \001(\0132&.opi_api.netw"
  "ork.cloud.v1alpha1.DeviceB\003\340A\002\022\021\n\tdevice"
  "_id\030\003 \001(\t\"J\n\023DeleteDeviceRequest\0223\n\002id\030\001"
  " \001(\tB\'\340A\002\372A!\n\037opi_api.network.v1alpha1/D"
  "evice\"~\n\023UpdateDeviceRequest\0226\n\006device\030\001"
  " \001(\0132&.opi_api.network.cloud.v1alpha1.De"
  "vice\022/\n\013update_mask\030\002 \001(\0132\032.google.proto"
  "buf.FieldMask\"t\n\022ListDevicesRequest\0227\n\006p"
  "arent\030\001 \001(\tB\'\340A\002\372A!\n\037opi_api.network.v1a"
  "lpha1/Device\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_"
  "token\030\003 \001(\t\"f\n\023ListDevicesResponse\0226\n\006de"
  "vice\030\001 \003(\0132&.opi_api.network.cloud.v1alp"
  "ha1.Device\022\027\n\017next_page_token\030\002 \001(\t\"G\n\020G"
  "etDeviceRequest\0223\n\002id\030\001 \001(\tB\'\340A\002\372A!\n\037opi"
  "_api.network.v1alpha1/Device\"x\n\021UpdatePo"
  "rtRequest\0222\n\004port\030\001 \001(\0132$.opi_api.networ"
  "k.cloud.v1alpha1.Port\022/\n\013update_mask\030\002 \001"
  "(\0132\032.google.protobuf.FieldMask\"p\n\020ListPo"
  "rtsRequest\0225\n\006parent\030\001 \001(\tB%\340A\002\372A\037\n\035opi_"
  "api.network.v1alpha1/Port\022\021\n\tpage_size\030\002"
  " \001(\005\022\022\n\npage_token\030\003 \001(\t\"`\n\021ListPortsRes"
  "ponse\0222\n\004port\030\001 \003(\0132$.opi_api.network.cl"
  "oud.v1alpha1.Port\022\027\n\017next_page_token\030\002 \001"
  "(\t\"C\n\016GetPortRequest\0221\n\002id\030\001 \001(\tB%\340A\002\372A\037"
  "\n\035opi_api.network.v1alpha1/Port\"\224\001\n\021Crea"
  "teVnicRequest\0225\n\006parent\030\001 \001(\tB%\340A\002\372A\037\n\035o"
  "pi_api.network.v1alpha1/Vnic\0227\n\004vnic\030\002 \001"
  "(\0132$.opi_api.network.cloud.v1alpha1.Vnic"
  "B\003\340A\002\022\017\n\007vnic_id\030\003 \001(\t\"F\n\021DeleteVnicRequ"
  "est\0221\n\002id\030\001 \001(\tB%\340A\002\372A\037\n\035opi_api.network"
  ".v1alpha1/Vnic\"x\n\021UpdateVnicRequest\0222\n\004v"
  "nic\030\001 \001(\0132$.opi_api.network.cloud.v1alph"
  "a1.Vnic\022/\n\013update_mask\030\002 \001(\0132\032.google.pr"
  "otobuf.FieldMask\"p\n\020ListVnicsRequest\0225\n\006"
  "parent\030\001 \001(\tB%\340A\002\372A\037\n\035opi_api.network.v1"
  "alpha1/Vnic\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_t"
  "oken\030\003 \001(\t\"`\n\021ListVnicsResponse\0222\n\004vnic\030"
  "\001 \003(\0132$.opi_api.network.cloud.v1alpha1.V"
  "nic\022\027\n\017next_page_token\030\002 \001(\t\"C\n\016GetVnicR"
  "equest\0221\n\002id\030\001 \001(\tB%\340A\002\372A\037\n\035opi_api.netw"
  "ork.v1alpha1/Vnic\"\255\001\n\026CreateInterfaceReq"
  "uest\022:\n\006parent\030\001 \001(\tB*\340A\002\372A$\n\"opi_api.ne"
  "twork.v1alpha1/Interface\022A\n\tinterface\030\002 "
  "\001(\0132).opi_api.network.cloud.v1alpha1.Int"
  "erfaceB\003\340A\002\022\024\n\014interface_id\030\003 \001(\t\"P\n\026Del"
  "eteInterfaceRequest\0226\n\002id\030\001 \001(\tB*\340A\002\372A$\n"
  "\"opi_api.network.v1alpha1/Interface\"\207\001\n\026"
  "UpdateInterfaceRequest\022<\n\tinterface\030\001 \001("
  "\0132).opi_api.network.cloud.v1alpha1.Inter"
  "face\022/\n\013update_mask\030\002 \001(\0132\032.google.proto"
  "buf.FieldMask\"z\n\025ListInterfacesRequest\022:"
  "\n\006parent\030\001 \001(\tB*\340A\002\372A$\n\"opi_api.network."
  "v1alpha1/Interface\022\021\n\tpage_size\030\002 \001(\005\022\022\n"
  "\npage_token\030\003 \001(\t\"o\n\026ListInterfacesRespo"
  "nse\022<\n\tinterface\030\001 \003(\0132).opi_api.network"
  ".cloud.v1alpha1.Interface\022\027\n\017next_page_t"
  "oken\030\002 \001(\t\"M\n\023GetInterfaceRequest\0226\n\002id\030"
  "\001 \001(\tB*\340A\002\372A$\n\"opi_api.network.v1alpha1/"
  "Interface\"\262\001\n\027CreateRouteTableRequest\022;\n"
  "\006parent\030\001 \001(\tB+\340A\002\372A%\n#opi_api.network.v"
  "1alpha1/RouteTable\022C\n\nroutetable\030\002 \001(\0132*"
  ".opi_api.network.cloud.v1alpha1.RouteTab"
  "leB\003\340A\002\022\025\n\rroutetable_id\030\003 \001(\t\"R\n\027Delete"
  "RouteTableRequest\0227\n\002id\030\001 \001(\tB+\340A\002\372A%\n#o"
  "pi_api.network.v1alpha1/RouteTable\"\212\001\n\027U"
  "pdateRouteTableRequest\022>\n\nroutetable\030\001 \001"
  "(\0132*.opi_api.network.cloud.v1alpha1.Rout"
  "eTable\022/\n\013update_mask\030\002 \001(\0132\032.google.pro"
  "tobuf.FieldMask\"|\n\026ListRouteTablesReques"
  "t\022;\n\006parent\030\001 \001(\tB+\340A\002\372A%\n#opi_api.netwo"
  "rk.v1alpha1/RouteTable\022\021\n\tpage_size\030\002 \001("
  "\005\022\022\n\npage_token\030\003 \001(\t\"r\n\027ListRouteTables"
  "Response\022>\n\nroutetable\030\001 \003(\0132*.opi_api.n"
  "etwork.cloud.v1alpha1.RouteTable\022\027\n\017next"
  "_page_token\030\002 \001(\t\"O\n\024GetRouteTableReques"
  "t\0227\n\002id\030\001 \001(\tB+\340A\002\372A%\n#opi_api.network.v"
  "1alpha1/RouteTable\"\231\001\n\022CreateRouteReques"
  "t\0226\n\006parent\030\001 \001(\tB&\340A\002\372A \n\036opi_api.netwo"
  "rk.v1alpha1/Route\0229\n\005route\030\002 \001(\0132%.opi_a"
  "pi.network.cloud.v1alpha1.RouteB\003\340A\002\022\020\n\010"
  "route_id\030\003 \001(\t\"H\n\022DeleteRouteRequest\0222\n\002"
  "id\030\001 \001(\tB&\340A\002\372A \n\036opi_api.network.v1alph"
  "a1/Route\"{\n\022UpdateRouteRequest\0224\n\005route\030"
  "\001 \001(\0132%.opi_api.network.cloud.v1alpha1.R"
  "oute\022/\n\013update_mask\030\002 \001(\0132\032.google.proto"
  "buf.FieldMask\"r\n\021ListRoutesRequest\0226\n\006pa"
  "rent\030\001 \001(\tB&\340A\002\372A \n\036opi_api.network.v1al"
  "pha1/Route\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_to"
  "ken\030\003 \001(\t\"c\n\022ListRoutesResponse\0224\n\005route"
  "\030\001 \003(\0132%.opi_api.network.cloud.v1alpha1."
  "Route\022\027\n\017next_page_token\030\002 \001(\t\"E\n\017GetRou"
  "teRequest\0222\n\002id\030\001 \001(\tB&\340A\002\372A \n\036opi_api.n"
  "etwork.v1alpha1/Route\"\301\001\n\032CreateUnderlay"
  "RouteRequest\022>\n\006parent\030\001 \001(\tB.\340A\002\372A(\n&op"
  "i_api.network.v1alpha1/UnderlayRoute\022I\n\r"
  "underlayroute\030\002 \001(\0132-.opi_api.network.cl"
  "oud.v1alpha1.UnderlayRouteB\003\340A\002\022\030\n\020under"
  "layroute_id\030\003 \001(\t\"X\n\032DeleteUnderlayRoute"
  "Request\022:\n\002id\030\001 \001(\tB.\340A\002\372A(\n&opi_api.net"
  "work.v1alpha1/UnderlayRoute\"\223\001\n\032UpdateUn"
  "derlayRouteRequest\022D\n\runderlayroute\030\001 \001("
  "\0132-.opi_api.network.cloud.v1alpha1.Under"
  "layRoute\022/\n\013update_mask\030\002 \001(\0132\032.google.p"
  "rotobuf.FieldMask\"\202\001\n\031ListUnderlayRoutes"
  "Request\022>\n\006parent\030\001 \001(\tB.\340A\002\372A(\n&opi_api"
  ".network.v1alpha1/UnderlayRoute\022\021\n\tpage_"
  "size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"{\n\032ListUn"
  "derlayRoutesResponse\022D\n\runderlayroute\030\001 "
  "\003(\0132-.opi_api.network.cloud.v1alpha1.Und"
  "erlayRoute\022\027\n\017next_page_token\030\002 \001(\t\"U\n\027G"
  "etUnderlayRouteRequest\022:\n\002id\030\001 \001(\tB.\340A\002\372"
  "A(\n&opi_api.network.v1alpha1/UnderlayRou"
  "te\"\217\001\n\020CreateBgpRequest\0224\n\006parent\030\001 \001(\tB"
  "$\340A\002\372A\036\n\034opi_api.network.v1alpha1/Bgp\0225\n"
  "\003bgp\030\002 \001(\0132#.opi_api.network.cloud.v1alp"
  "ha1.BgpB\003\340A\002\022\016\n\006bgp_id\030\003 \001(\t\"D\n\020DeleteBg"
  "pRequest\0220\n\002id\030\001 \001(\tB$\340A\002\372A\036\n\034opi_api.ne"
  "twork.v1alpha1/Bgp\"u\n\020UpdateBgpRequest\0220"
  "\n\003bgp\030\001 \001(\0132#.opi_api.network.cloud.v1al"
  "pha1.Bgp\022/\n\013update_mask\030\002 \001(\0132\032.google.p"
  "rotobuf.FieldMask\"n\n\017ListBgpsRequest\0224\n\006"
  "parent\030\001 \001(\tB$\340A\002\372A\036\n\034opi_api.network.v1"
  "alpha1/Bgp\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_to"
  "ken\030\003 \001(\t\"]\n\020ListBgpsResponse\0220\n\003bgp\030\001 \003"
  "(\0132#.opi_api.network.cloud.v1alpha1.Bgp\022"
  "\027\n\017next_page_token\030\002 \001(\t\"A\n\rGetBgpReques"
  "t\0220\n\002id\030\001 \001(\tB$\340A\002\372A\036\n\034opi_api.network.v"
  "1alpha1/Bgp\"\243\001\n\024CreateBGPPeerRequest\0228\n\006"
  "parent\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network.v1"
  "alpha1/BGPPeer\022=\n\007bgppeer\030\002 \001(\0132\'.opi_ap"
  "i.network.cloud.v1alpha1.BGPPeerB\003\340A\002\022\022\n"
  "\nbgppeer_id\030\003 \001(\t\"L\n\024DeleteBGPPeerReques"
  "t\0224\n\002id\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network.v"
  "1alpha1/BGPPeer\"\201\001\n\024UpdateBGPPeerRequest"
  "\0228\n\007bgppeer\030\001 \001(\0132\'.opi_api.network.clou"
  "d.v1alpha1.BGPPeer\022/\n\013update_mask\030\002 \001(\0132"
  "\032.google.protobuf.FieldMask\"v\n\023ListBGPPe"
  "ersRequest\0228\n\006parent\030\001 \001(\tB(\340A\002\372A\"\n opi_"
  "api.network.v1alpha1/BGPPeer\022\021\n\tpage_siz"
  "e\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"i\n\024ListBGPPe"
  "ersResponse\0228\n\007bgppeer\030\001 \003(\0132\'.opi_api.n"
  "etwork.cloud.v1alpha1.BGPPeer\022\027\n\017next_pa"
  "ge_token\030\002 \001(\t\"I\n\021GetBGPPeerRequest\0224\n\002i"
  "d\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network.v1alpha"
  "1/BGPPeer\"\255\001\n\026CreateBGPPeerAfRequest\022:\n\006"
  "parent\030\001 \001(\tB*\340A\002\372A$\n\"opi_api.network.v1"
  "alpha1/BGPPeerAf\022A\n\tbgppeeraf\030\002 \001(\0132).op"
  "i_api.network.cloud.v1alpha1.BGPPeerAfB\003"
  "\340A\002\022\024\n\014bgppeeraf_id\030\003 \001(\t\"P\n\026DeleteBGPPe"
  "erAfRequest\0226\n\002id\030\001 \001(\tB*\340A\002\372A$\n\"opi_api"
  ".network.v1alpha1/BGPPeerAf\"\207\001\n\026UpdateBG"
  "PPeerAfRequest\022<\n\tbgppeeraf\030\001 \001(\0132).opi_"
  "api.network.cloud.v1alpha1.BGPPeerAf\022/\n\013"
  "update_mask\030\002 \001(\0132\032.google.protobuf.Fiel"
  "dMask\"z\n\025ListBGPPeerAfsRequest\022:\n\006parent"
  "\030\001 \001(\tB*\340A\002\372A$\n\"opi_api.network.v1alpha1"
  "/BGPPeerAf\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_to"
  "ken\030\003 \001(\t\"o\n\026ListBGPPeerAfsResponse\022<\n\tb"
  "gppeeraf\030\001 \003(\0132).opi_api.network.cloud.v"
  "1alpha1.BGPPeerAf\022\027\n\017next_page_token\030\002 \001"
  "(\t\"M\n\023GetBGPPeerAfRequest\0226\n\002id\030\001 \001(\tB*\340"
  "A\002\372A$\n\"opi_api.network.v1alpha1/BGPPeerA"
  "f\"\243\001\n\024CreateMappingRequest\0228\n\006parent\030\001 \001"
  "(\tB(\340A\002\372A\"\n opi_api.network.v1alpha1/Map"
  "ping\022=\n\007mapping\030\002 \001(\0132\'.opi_api.network."
  "cloud.v1alpha1.MappingB\003\340A\002\022\022\n\nmapping_i"
  "d\030\003 \001(\t\"L\n\024DeleteMappingRequest\0224\n\002id\030\001 "
  "\001(\tB(\340A\002\372A\"\n opi_api.network.v1alpha1/Ma"
  "pping\"\201\001\n\024UpdateMappingRequest\0228\n\007mappin"
  "g\030\001 \001(\0132\'.opi_api.network.cloud.v1alpha1"
  ".Mapping\022/\n\013update_mask\030\002 \001(\0132\032.google.p"
  "rotobuf.FieldMask\"v\n\023ListMappingsRequest"
  "\0228\n\006parent\030\001 \001(\tB(\340A\002\372A\"\n opi_api.networ"
  "k.v1alpha1/Mapping\022\021\n\tpage_size\030\002 \001(\005\022\022\n"
  "\npage_token\030\003 \001(\t\"i\n\024ListMappingsRespons"
  "e\0228\n\007mapping\030\001 \003(\0132\'.opi_api.network.clo"
  "ud.v1alpha1.Mapping\022\027\n\017next_page_token\030\002"
  " \001(\t\"I\n\021GetMappingRequest\0224\n\002id\030\001 \001(\tB(\340"
  "A\002\372A\"\n opi_api.network.v1alpha1/Mapping\""
  "\243\001\n\024CreateNextHopRequest\0228\n\006parent\030\001 \001(\t"
  "B(\340A\002\372A\"\n opi_api.network.v1alpha1/NextH"
  "op\022=\n\007nexthop\030\002 \001(\0132\'.opi_api.network.cl"
  "oud.v1alpha1.NextHopB\003\340A\002\022\022\n\nnexthop_id\030"
  "\003 \001(\t\"L\n\024DeleteNextHopRequest\0224\n\002id\030\001 \001("
  "\tB(\340A\002\372A\"\n opi_api.network.v1alpha1/Next"
  "Hop\"\201\001\n\024UpdateNextHopRequest\0228\n\007nexthop\030"
  "\001 \001(\0132\'.opi_api.network.cloud.v1alpha1.N"
  "extHop\022/\n\013update_mask\030\002 \001(\0132\032.google.pro"
  "tobuf.FieldMask\"v\n\023ListNextHopsRequest\0228"
  "\n\006parent\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network."
  "v1alpha1/NextHop\022\021\n\tpage_size\030\002 \001(\005\022\022\n\np"
  "age_token\030\003 \001(\t\"i\n\024ListNextHopsResponse\022"
  "8\n\007nexthop\030\001 \003(\0132\'.opi_api.network.cloud"
  ".v1alpha1.NextHop\022\027\n\017next_page_token\030\002 \001"
  "(\t\"I\n\021GetNextHopRequest\0224\n\002id\030\001 \001(\tB(\340A\002"
  "\372A\"\n opi_api.network.v1alpha1/NextHop\"\274\001"
  "\n\031CreateNextHopGroupRequest\022=\n\006parent\030\001 "
  "\001(\tB-\340A\002\372A\'\n%opi_api.network.v1alpha1/Ne"
  "xtHopGroup\022G\n\014nexthopgroup\030\002 \001(\0132,.opi_a"
  "pi.network.cloud.v1alpha1.NextHopGroupB\003"
  "\340A\002\022\027\n\017nexthopgroup_id\030\003 \001(\t\"V\n\031DeleteNe"
  "xtHopGroupRequest\0229\n\002id\030\001 \001(\tB-\340A\002\372A\'\n%o"
  "pi_api.network.v1alpha1/NextHopGroup\"\220\001\n"
  "\031UpdateNextHopGroupRequest\022B\n\014nexthopgro"
  "up\030\001 \001(\0132,.opi_api.network.cloud.v1alpha"
  "1.NextHopGroup\022/\n\013update_mask\030\002 \001(\0132\032.go"
  "ogle.protobuf.FieldMask\"\200\001\n\030ListNextHopG"
  "roupsRequest\022=\n\006parent\030\001 \001(\tB-\340A\002\372A\'\n%op"
  "i_api.network.v1alpha1/NextHopGroup\022\021\n\tp"
  "age_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"x\n\031Li"
  "stNextHopGroupsResponse\022B\n\014nexthopgroup\030"
  "\001 \003(\0132,.opi_api.network.cloud.v1alpha1.N"
  "extHopGroup\022\027\n\017next_page_token\030\002 \001(\t\"S\n\026"
  "GetNextHopGroupRequest\0229\n\002id\030\001 \001(\tB-\340A\002\372"
  "A\'\n%opi_api.network.v1alpha1/NextHopGrou"
  "p\"\236\001\n\023CreateSubnetRequest\0227\n\006parent\030\001 \001("
  "\tB\'\340A\002\372A!\n\037opi_api.network.v1alpha1/Subn"
  "et\022;\n\006subnet\030\002 \001(\0132&.opi_api.network.clo"
  "ud.v1alpha1.SubnetB\003\340A\002\022\021\n\tsubnet_id\030\003 \001"
  "(\t\"J\n\023DeleteSubnetRequest\0223\n\002id\030\001 \001(\tB\'\340"
  "A\002\372A!\n\037opi_api.network.v1alpha1/Subnet\"~"
  "\n\023UpdateSubnetRequest\0226\n\006subnet\030\001 \001(\0132&."
  "opi_api.network.cloud.v1alpha1.Subnet\022/\n"
  "\013update_mask\030\002 \001(\0132\032.google.protobuf.Fie"
  "ldMask\"t\n\022ListSubnetsRequest\0227\n\006parent\030\001"
  " \001(\tB\'\340A\002\372A!\n\037opi_api.network.v1alpha1/S"
  "ubnet\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003"
  " \001(\t\"f\n\023ListSubnetsResponse\0226\n\006subnet\030\001 "
  "\003(\0132&.opi_api.network.cloud.v1alpha1.Sub"
  "net\022\027\n\017next_page_token\030\002 \001(\t\"G\n\020GetSubne"
  "tRequest\0223\n\002id\030\001 \001(\tB\'\340A\002\372A!\n\037opi_api.ne"
  "twork.v1alpha1/Subnet\"\236\001\n\023CreateTunnelRe"
  "quest\0227\n\006parent\030\001 \001(\tB\'\340A\002\372A!\n\037opi_api.n"
  "etwork.v1alpha1/Tunnel\022;\n\006tunnel\030\002 \001(\0132&"
  ".opi_api.network.cloud.v1alpha1.TunnelB\003"
  "\340A\002\022\021\n\ttunnel_id\030\003 \001(\t\"J\n\023DeleteTunnelRe"
  "quest\0223\n\002id\030\001 \001(\tB\'\340A\002\372A!\n\037opi_api.netwo"
  "rk.v1alpha1/Tunnel\"~\n\023UpdateTunnelReques"
  "t\0226\n\006tunnel\030\001 \001(\0132&.opi_api.network.clou"
  "d.v1alpha1.Tunnel\022/\n\013update_mask\030\002 \001(\0132\032"
  ".google.protobuf.FieldMask\"t\n\022ListTunnel"
  "sRequest\0227\n\006parent\030\001 \001(\tB\'\340A\002\372A!\n\037opi_ap"
  "i.network.v1alpha1/Tunnel\022\021\n\tpage_size\030\002"
  " \001(\005\022\022\n\npage_token\030\003 \001(\t\"f\n\023ListTunnelsR"
  "esponse\0226\n\006tunnel\030\001 \003(\0132&.opi_api.networ"
  "k.cloud.v1alpha1.Tunnel\022\027\n\017next_page_tok"
  "en\030\002 \001(\t\"G\n\020GetTunnelRequest\0223\n\002id\030\001 \001(\t"
  "B\'\340A\002\372A!\n\037opi_api.network.v1alpha1/Tunne"
  "l\"\217\001\n\020CreateVpcRequest\0224\n\006parent\030\001 \001(\tB$"
  "\340A\002\372A\036\n\034opi_api.network.v1alpha1/Vpc\0225\n\003"
  "vpc\030\002 \001(\0132#.opi_api.network.cloud.v1alph"
  "a1.VpcB\003\340A\002\022\016\n\006vpc_id\030\003 \001(\t\"D\n\020DeleteVpc"
  "Request\0220\n\002id\030\001 \001(\tB$\340A\002\372A\036\n\034opi_api.net"
  "work.v1alpha1/Vpc\"u\n\020UpdateVpcRequest\0220\n"
  "\003vpc\030\001 \001(\0132#.opi_api.network.cloud.v1alp"
  "ha1.Vpc\022/\n\013update_mask\030\002 \001(\0132\032.google.pr"
  "otobuf.FieldMask\"n\n\017ListVpcsRequest\0224\n\006p"
  "arent\030\001 \001(\tB$\340A\002\372A\036\n\034opi_api.network.v1a"
  "lpha1/Vpc\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_tok"
  "en\030\003 \001(\t\"]\n\020ListVpcsResponse\0220\n\003vpc\030\001 \003("
  "\0132#.opi_api.network.cloud.v1alpha1.Vpc\022\027"
  "\n\017next_page_token\030\002 \001(\t\"A\n\rGetVpcRequest"
  "\0220\n\002id\030\001 \001(\tB$\340A\002\372A\036\n\034opi_api.network.v1"
  "alpha1/Vpc\"\243\001\n\024CreateVPCPeerRequest\0228\n\006p"
  "arent\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network.v1a"
  "lpha1/VPCPeer\022=\n\007vpcpeer\030\002 \001(\0132\'.opi_api"
  ".network.cloud.v1alpha1.VPCPeerB\003\340A\002\022\022\n\n"
  "vpcpeer_id\030\003 \001(\t\"L\n\024DeleteVPCPeerRequest"
  "\0224\n\002id\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network.v1"
  "alpha1/VPCPeer\"\201\001\n\024UpdateVPCPeerRequest\022"
  "8\n\007vpcpeer\030\001 \001(\0132\'.opi_api.network.cloud"
  ".v1alpha1.VPCPeer\022/\n\013update_mask\030\002 \001(\0132\032"
  ".google.protobuf.FieldMask\"v\n\023ListVPCPee"
  "rsRequest\0228\n\006parent\030\001 \001(\tB(\340A\002\372A\"\n opi_a"
  "pi.network.v1alpha1/VPCPeer\022\021\n\tpage_size"
  "\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"i\n\024ListVPCPee"
  "rsResponse\0228\n\007vpcpeer\030\001 \003(\0132\'.opi_api.ne"
  "twork.cloud.v1alpha1.VPCPeer\022\027\n\017next_pag"
  "e_token\030\002 \001(\t\"I\n\021GetVPCPeerRequest\0224\n\002id"
  "\030\001 \001(\tB(\340A\002\372A\"\n opi_api.network.v1alpha1"
  "/VPCPeer\"\306\001\n\033CreateSecurityPolicyRequest"
  "\022\?\n\006parent\030\001 \001(\tB/\340A\002\372A)\n\'opi_api.networ"
  "k.v1alpha1/SecurityPolicy\022K\n\016securitypol"
  "icy\030\002 \001(\0132..opi_api.network.cloud.v1alph"
  "a1.SecurityPolicyB\003\340A\002\022\031\n\021securitypolicy"
  "_id\030\003 \001(\t\"Z\n\033DeleteSecurityPolicyRequest"
  "\022;\n\002id\030\001 \001(\tB/\340A\002\372A)\n\'opi_api.network.v1"
  "alpha1/SecurityPolicy\"\226\001\n\033UpdateSecurity"
  "PolicyRequest\022F\n\016securitypolicy\030\001 \001(\0132.."
  "opi_api.network.cloud.v1alpha1.SecurityP"
  "olicy\022/\n\013update_mask\030\002 \001(\0132\032.google.prot"
  "obuf.FieldMask\"\204\001\n\032ListSecurityPolicysRe"
  "quest\022\?\n\006parent\030\001 \001(\tB/\340A\002\372A)\n\'opi_api.n"
  "etwork.v1alpha1/SecurityPolicy\022\021\n\tpage_s"
  "ize\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"~\n\033ListSec"
  "urityPolicysResponse\022F\n\016securitypolicy\030\001"
  " \003(\0132..opi_api.network.cloud.v1alpha1.Se"
  "curityPolicy\022\027\n\017next_page_token\030\002 \001(\t\"W\n"
  "\030GetSecurityPolicyRequest\022;\n\002id\030\001 \001(\tB/\340"
  "A\002\372A)\n\'opi_api.network.v1alpha1/Security"
  "Policy\"\274\001\n\031CreateSecurityRuleRequest\022=\n\006"
  "parent\030\001 \001(\tB-\340A\002\372A\'\n%opi_api.network.v1"
  "alpha1/SecurityRule\022G\n\014securityrule\030\002 \001("
  "\0132,.opi_api.network.cloud.v1alpha1.Secur"
  "ityRuleB\003\340A\002\022\027\n\017securityrule_id\030\003 \001(\t\"V\n"
  "\031DeleteSecurityRuleRequest\0229\n\002id\030\001 \001(\tB-"
  "\340A\002\372A\'\n%opi_api.network.v1alpha1/Securit"
  "yRule\"\220\001\n\031UpdateSecurityRuleRequest\022B\n\014s"
  "ecurityrule\030\001 \001(\0132,.opi_api.network.clou"
  "d.v1alpha1.SecurityRule\022/\n\013update_mask\030\002"
  " \001(\0132\032.google.protobuf.FieldMask\"\200\001\n\030Lis"
  "tSecurityRulesRequest\022=\n\006parent\030\001 \001(\tB-\340"
  "A\002\372A\'\n%opi_api.network.v1alpha1/Security"
  "Rule\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 "
  "\001(\t\"x\n\031ListSecurityRulesResponse\022B\n\014secu"
  "rityrule\030\001 \003(\0132,.opi_api.network.cloud.v"
  "1alpha1.SecurityRule\022\027\n\017next_page_token\030"
  "\002 \001(\t\"S\n\026GetSecurityRuleRequest\0229\n\002id\030\001 "
  "\001(\tB-\340A\002\372A\'\n%opi_api.network.v1alpha1/Se"
  "curityRule\"\313\001\n\034CreateSecurityProfileRequ"
  "est\022@\n\006parent\030\001 \001(\tB0\340A\002\372A*\n(opi_api.net"
  "work.v1alpha1/SecurityProfile\022M\n\017securit"
  "yprofile\030\002 \001(\0132/.opi_api.network.cloud.v"
  "1alpha1.SecurityProfileB\003\340A\002\022\032\n\022security"
  "profile_id\030\003 \001(\t\"\\\n\034DeleteSecurityProfil"
  "eRequest\022<\n\002id\030\001 \001(\tB0\340A\002\372A*\n(opi_api.ne"
  "twork.v1alpha1/SecurityProfile\"\231\001\n\034Updat"
  "eSecurityProfileRequest\022H\n\017securityprofi"
  "le\030\001 \001(\0132/.opi_api.network.cloud.v1alpha"
  "1.SecurityProfile\022/\n\013update_mask\030\002 \001(\0132\032"
  ".google.protobuf.FieldMask\"\206\001\n\033ListSecur"
  "ityProfilesRequest\022@\n\006parent\030\001 \001(\tB0\340A\002\372"
  "A*\n(opi_api.network.v1alpha1/SecurityPro"
  "file\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 "
  "\001(\t\"\201\001\n\034ListSecurityProfilesResponse\022H\n\017"
  "securityprofile\030\001 \003(\0132/.opi_api.network."
  "cloud.v1alpha1.SecurityProfile\022\027\n\017next_p"
  "age_token\030\002 \001(\t\"Y\n\031GetSecurityProfileReq"
  "uest\022<\n\002id\030\001 \001(\tB0\340A\002\372A*\n(opi_api.networ"
  "k.v1alpha1/SecurityProfile2\217\202\001\n\021CloudInf"
  "raService\022\255\001\n\025GetDeviceCapabilities\022<.op"
  "i_api.network.cloud.v1alpha1.GetDeviceCa"
  "pabilitiesRequest\0322.opi_api.network.clou"
  "d.v1alpha1.DeviceCapabilities\"\"\202\323\344\223\002\031\022\027/"
  "v1/devicecapabilitiess\332A\000\022\253\001\n\014CreateDevi"
  "ce\0223.opi_api.network.cloud.v1alpha1.Crea"
  "teDeviceRequest\032&.opi_api.network.cloud."
  "v1alpha1.Device\">\202\323\344\223\002\036\"\024/v1/{parent=dev"
  "ices}:\006device\332A\027parent,device,device_id\022"
  "\203\001\n\014DeleteDevice\0223.opi_api.network.cloud"
  ".v1alpha1.DeleteDeviceRequest\032\026.google.p"
  "rotobuf.Empty\"&\202\323\344\223\002\033*\031/v1/{id=devices}/"
  "{device}\332A\002id\022\252\001\n\014UpdateDevice\0223.opi_api"
  ".network.cloud.v1alpha1.UpdateDeviceRequ"
  "est\032&.opi_api.network.cloud.v1alpha1.Dev"
  "ice\"=\202\323\344\223\002!2\027/v1/{device.id=devices}:\006de"
  "vice\332A\023device, update_mask\022\235\001\n\013ListDevic"
  "es\0222.opi_api.network.cloud.v1alpha1.List"
  "DevicesRequest\0323.opi_api.network.cloud.v"
  "1alpha1.ListDevicesResponse\"%\202\323\344\223\002\026\022\024/v1"
  "/{parent=devices}\332A\006parent\022\215\001\n\tGetDevice"
  "\0220.opi_api.network.cloud.v1alpha1.GetDev"
  "iceRequest\032&.opi_api.network.cloud.v1alp"
  "ha1.Device\"&\202\323\344\223\002\033\022\031/v1/{id=devices}/{de"
  "vice}\332A\002id\022\234\001\n\nUpdatePort\0221.opi_api.netw"
  "ork.cloud.v1alpha1.UpdatePortRequest\032$.o"
  "pi_api.network.cloud.v1alpha1.Port\"5\202\323\344\223"
  "\002\0332\023/v1/{port.id=ports}:\004port\332A\021port, up"
  "date_mask\022\225\001\n\tListPorts\0220.opi_api.networ"
  "k.cloud.v1alpha1.ListPortsRequest\0321.opi_"
  "api.network.cloud.v1alpha1.ListPortsResp"
  "onse\"#\202\323\344\223\002\024\022\022/v1/{parent=ports}\332A\006paren"
  "t\022\203\001\n\007GetPort\022..opi_api.network.cloud.v1"
  "alpha1.GetPortRequest\032$.opi_api.network."
  "cloud.v1alpha1.Port\"\"\202\323\344\223\002\027\022\025/v1/{id=por"
  "ts}/{port}\332A\002id\022\235\001\n\nCreateVnic\0221.opi_api"
  ".network.cloud.v1alpha1.CreateVnicReques"
  "t\032$.opi_api.network.cloud.v1alpha1.Vnic\""
  "6\202\323\344\223\002\032\"\022/v1/{parent=vnics}:\004vnic\332A\023pare"
  "nt,vnic,vnic_id\022{\n\nDeleteVnic\0221.opi_api."
  "network.cloud.v1alpha1.DeleteVnicRequest"
  "\032\026.google.protobuf.Empty\"\"\202\323\344\223\002\027*\025/v1/{i"
  "d=vnics}/{vnic}\332A\002id\022\234\001\n\nUpdateVnic\0221.op"
  "i_api.network.cloud.v1alpha1.UpdateVnicR"
  "equest\032$.opi_api.network.cloud.v1alpha1."
  "Vnic\"5\202\323\344\223\002\0332\023/v1/{vnic.id=vnics}:\004vnic\332"
  "A\021vnic, update_mask\022\225\001\n\tListVnics\0220.opi_"
  "api.network.cloud.v1alpha1.ListVnicsRequ"
  "est\0321.opi_api.network.cloud.v1alpha1.Lis"
  "tVnicsResponse\"#\202\323\344\223\002\024\022\022/v1/{parent=vnic"
  "s}\332A\006parent\022\203\001\n\007GetVnic\022..opi_api.networ"
  "k.cloud.v1alpha1.GetVnicRequest\032$.opi_ap"
  "i.network.cloud.v1alpha1.Vnic\"\"\202\323\344\223\002\027\022\025/"
  "v1/{id=vnics}/{vnic}\332A\002id\022\300\001\n\017CreateInte"
  "rface\0226.opi_api.network.cloud.v1alpha1.C"
  "reateInterfaceRequest\032).opi_api.network."
  "cloud.v1alpha1.Interface\"J\202\323\344\223\002$\"\027/v1/{p"
  "arent=interfaces}:\tinterface\332A\035parent,in"
  "terface,interface_id\022\217\001\n\017DeleteInterface"
  "\0226.opi_api.network.cloud.v1alpha1.Delete"
  "InterfaceRequest\032\026.google.protobuf.Empty"
  "\",\202\323\344\223\002!*\037/v1/{id=interfaces}/{interface"
  "}\332A\002id\022\277\001\n\017UpdateInterface\0226.opi_api.net"
  "work.cloud.v1alpha1.UpdateInterfaceReque"
  "st\032).opi_api.network.cloud.v1alpha1.Inte"
  "rface\"I\202\323\344\223\002*2\035/v1/{interface.id=interfa"
  "ces}:\tinterface\332A\026interface, update_mask"
  "\022\251\001\n\016ListInterfaces\0225.opi_api.network.cl"
  "oud.v1alpha1.ListInterfacesRequest\0326.opi"
  "_api.network.cloud.v1alpha1.ListInterfac"
  "esResponse\"(\202\323\344\223\002\031\022\027/v1/{parent=interfac"
  "es}\332A\006parent\022\234\001\n\014GetInterface\0223.opi_api."
  "network.cloud.v1alpha1.GetInterfaceReque"
  "st\032).opi_api.network.cloud.v1alpha1.Inte"
  "rface\",\202\323\344\223\002!\022\037/v1/{id=interfaces}/{inte"
  "rface}\332A\002id\022\307\001\n\020CreateRouteTable\0227.opi_a"
  "pi.network.cloud.v1alpha1.CreateRouteTab"
  "leRequest\032*.opi_api.network.cloud.v1alph"
  "a1.RouteTable\"N\202\323\344\223\002&\"\030/v1/{parent=route"
  "tables}:\nroutetable\332A\037parent,routetable,"
  "routetable_id\022\223\001\n\020DeleteRouteTable\0227.opi"
  "_api.network.cloud.v1alpha1.DeleteRouteT"
  "ableRequest\032\026.google.protobuf.Empty\".\202\323\344"
  "\223\002#*!/v1/{id=routetables}/{routetable}\332A"
  "\002id\022\306\001\n\020UpdateRouteTable\0227.opi_api.netwo"
  "rk.cloud.v1alpha1.UpdateRouteTableReques"
  "t\032*.opi_api.network.cloud.v1alpha1.Route"
  "Table\"M\202\323\344\223\002-2\037/v1/{routetable.id=routet"
  "ables}:\nroutetable\332A\027routetable, update_"
  "mask\022\255\001\n\017ListRouteTables\0226.opi_api.netwo"
  "rk.cloud.v1alpha1.ListRouteTablesRequest"
  "\0327.opi_api.network.cloud.v1alpha1.ListRo"
  "uteTablesResponse\")\202\323\344\223\002\032\022\030/v1/{parent=r"
  "outetables}\332A\006parent\022\241\001\n\rGetRouteTable\0224"
  ".opi_api.network.cloud.v1alpha1.GetRoute"
  "TableRequest\032*.opi_api.network.cloud.v1a"
  "lpha1.RouteTable\".\202\323\344\223\002#\022!/v1/{id=routet"
  "ables}/{routetable}\332A\002id\022\244\001\n\013CreateRoute"
  "\0222.opi_api.network.cloud.v1alpha1.Create"
  "RouteRequest\032%.opi_api.network.cloud.v1a"
  "lpha1.Route\":\202\323\344\223\002\034\"\023/v1/{parent=routes}"
  ":\005route\332A\025parent,route,route_id\022\177\n\013Delet"
  "eRoute\0222.opi_api.network.cloud.v1alpha1."
  "DeleteRouteRequest\032\026.google.protobuf.Emp"
  "ty\"$\202\323\344\223\002\031*\027/v1/{id=routes}/{route}\332A\002id"
  "\022\243\001\n\013UpdateRoute\0222.opi_api.network.cloud"
  ".v1alpha1.UpdateRouteRequest\032%.opi_api.n"
  "etwork.cloud.v1alpha1.Route\"9\202\323\344\223\002\0362\025/v1"
  "/{route.id=routes}:\005route\332A\022route, updat"
  "e_mask\022\231\001\n\nListRoutes\0221.opi_api.network."
  "cloud.v1alpha1.ListRoutesRequest\0322.opi_a"
  "pi.network.cloud.v1alpha1.ListRoutesResp"
  "onse\"$\202\323\344\223\002\025\022\023/v1/{parent=routes}\332A\006pare"
  "nt\022\210\001\n\010GetRoute\022/.opi_api.network.cloud."
  "v1alpha1.GetRouteRequest\032%.opi_api.netwo"
  "rk.cloud.v1alpha1.Route\"$\202\323\344\223\002\031\022\027/v1/{id"
  "=routes}/{route}\332A\002id\022\334\001\n\023CreateUnderlay"
  "Route\022:.opi_api.network.cloud.v1alpha1.C"
  "reateUnderlayRouteRequest\032-.opi_api.netw"
  "ork.cloud.v1alpha1.UnderlayRoute\"Z\202\323\344\223\002,"
  "\"\033/v1/{parent=underlayroutes}:\runderlayr"
  "oute\332A%parent,underlayroute,underlayrout"
  "e_id\022\237\001\n\023DeleteUnderlayRoute\022:.opi_api.n"
  "etwork.cloud.v1alpha1.DeleteUnderlayRout"
  "eRequest\032\026.google.protobuf.Empty\"4\202\323\344\223\002)"
  "*\'/v1/{id=underlayroutes}/{underlayroute"
  "}\332A\002id\022\333\001\n\023UpdateUnderlayRoute\022:.opi_api"
  ".network.cloud.v1alpha1.UpdateUnderlayRo"
  "uteRequest\032-.opi_api.network.cloud.v1alp"
  "ha1.UnderlayRoute\"Y\202\323\344\223\00262%/v1/{underlay"
  "route.id=underlayroutes}:\runderlayroute\332"
  "A\032underlayroute, update_mask\022\271\001\n\022ListUnd"
  "erlayRoutes\0229.opi_api.network.cloud.v1al"
  "pha1.ListUnderlayRoutesRequest\032:.opi_api"
  ".network.cloud.v1alpha1.ListUnderlayRout"
  "esResponse\",\202\323\344\223\002\035\022\033/v1/{parent=underlay"
  "routes}\332A\006parent\022\260\001\n\020GetUnderlayRoute\0227."
  "opi_api.network.cloud.v1alpha1.GetUnderl"
  "ayRouteRequest\032-.opi_api.network.cloud.v"
  "1alpha1.UnderlayRoute\"4\202\323\344\223\002)\022\'/v1/{id=u"
  "nderlayroutes}/{underlayroute}\332A\002id\022\226\001\n\t"
  "CreateBgp\0220.opi_api.network.cloud.v1alph"
  "a1.CreateBgpRequest\032#.opi_api.network.cl"
  "oud.v1alpha1.Bgp\"2\202\323\344\223\002\030\"\021/v1/{parent=bg"
  "ps}:\003bgp\332A\021parent,bgp,bgp_id\022w\n\tDeleteBg"
  "p\0220.opi_api.network.cloud.v1alpha1.Delet"
  "eBgpRequest\032\026.google.protobuf.Empty\" \202\323\344"
  "\223\002\025*\023/v1/{id=bgps}/{bgp}\332A\002id\022\225\001\n\tUpdate"
  "Bgp\0220.opi_api.network.cloud.v1alpha1.Upd"
  "ateBgpRequest\032#.opi_api.network.cloud.v1"
  "alpha1.Bgp\"1\202\323\344\223\002\0302\021/v1/{bgp.id=bgps}:\003b"
  "gp\332A\020bgp, update_mask\022\221\001\n\010ListBgps\022/.opi"
  "_api.network.cloud.v1alpha1.ListBgpsRequ"
  "est\0320.opi_api.network.cloud.v1alpha1.Lis"
  "tBgpsResponse\"\"\202\323\344\223\002\023\022\021/v1/{parent=bgps}"
  "\332A\006parent\022~\n\006GetBgp\022-.opi_api.network.cl"
  "oud.v1alpha1.GetBgpRequest\032#.opi_api.net"
  "work.cloud.v1alpha1.Bgp\" \202\323\344\223\002\025\022\023/v1/{id"
  "=bgps}/{bgp}\332A\002id\022\262\001\n\rCreateBGPPeer\0224.op"
  "i_api.network.cloud.v1alpha1.CreateBGPPe"
  "erRequest\032\'.opi_api.network.cloud.v1alph"
  "a1.BGPPeer\"B\202\323\344\223\002 \"\025/v1/{parent=bgppeers"
  "}:\007bgppeer\332A\031parent,bgppeer,bgppeer_id\022\207"
  "\001\n\rDeleteBGPPeer\0224.opi_api.network.cloud"
  ".v1alpha1.DeleteBGPPeerRequest\032\026.google."
  "protobuf.Empty\"(\202\323\344\223\002\035*\033/v1/{id=bgppeers"
  "}/{bgppeer}\332A\002id\022\261\001\n\rUpdateBGPPeer\0224.opi"
  "_api.network.cloud.v1alpha1.UpdateBGPPee"
  "rRequest\032\'.opi_api.network.cloud.v1alpha"
  "1.BGPPeer\"A\202\323\344\223\002$2\031/v1/{bgppeer.id=bgppe"
  "ers}:\007bgppeer\332A\024bgppeer, update_mask\022\241\001\n"
  "\014ListBGPPeers\0223.opi_api.network.cloud.v1"
  "alpha1.ListBGPPeersRequest\0324.opi_api.net"
  "work.cloud.v1alpha1.ListBGPPeersResponse"
  "\"&\202\323\344\223\002\027\022\025/v1/{parent=bgppeers}\332A\006parent"
  "\022\222\001\n\nGetBGPPeer\0221.opi_api.network.cloud."
  "v1alpha1.GetBGPPeerRequest\032\'.opi_api.net"
  "work.cloud.v1alpha1.BGPPeer\"(\202\323\344\223\002\035\022\033/v1"
  "/{id=bgppeers}/{bgppeer}\332A\002id\022\300\001\n\017Create"
  "BGPPeerAf\0226.opi_api.network.cloud.v1alph"
  "a1.CreateBGPPeerAfRequest\032).opi_api.netw"
  "ork.cloud.v1alpha1.BGPPeerAf\"J\202\323\344\223\002$\"\027/v"
  "1/{parent=bgppeerafs}:\tbgppeeraf\332A\035paren"
  "t,bgppeeraf,bgppeeraf_id\022\217\001\n\017DeleteBGPPe"
  "erAf\0226.opi_api.network.cloud.v1alpha1.De"
  "leteBGPPeerAfRequest\032\026.google.protobuf.E"
  "mpty\",\202\323\344\223\002!*\037/v1/{id=bgppeerafs}/{bgppe"
  "eraf}\332A\002id\022\277\001\n\017UpdateBGPPeerAf\0226.opi_api"
  ".network.cloud.v1alpha1.UpdateBGPPeerAfR"
  "equest\032).opi_api.network.cloud.v1alpha1."
  "BGPPeerAf\"I\202\323\344\223\002*2\035/v1/{bgppeeraf.id=bgp"
  "peerafs}:\tbgppeeraf\332A\026bgppeeraf, update_"
  "mask\022\251\001\n\016ListBGPPeerAfs\0225.opi_api.networ"
  "k.cloud.v1alpha1.ListBGPPeerAfsRequest\0326"
  ".opi_api.network.cloud.v1alpha1.ListBGPP"
  "eerAfsResponse\"(\202\323\344\223\002\031\022\027/v1/{parent=bgpp"
  "eerafs}\332A\006parent\022\234\001\n\014GetBGPPeerAf\0223.opi_"
  "api.network.cloud.v1alpha1.GetBGPPeerAfR"
  "equest\032).opi_api.network.cloud.v1alpha1."
  "BGPPeerAf\",\202\323\344\223\002!\022\037/v1/{id=bgppeerafs}/{"
  "bgppeeraf}\332A\002id\022\262\001\n\rCreateMapping\0224.opi_"
  "api.network.cloud.v1alpha1.CreateMapping"
  "Request\032\'.opi_api.network.cloud.v1alpha1"
  ".Mapping\"B\202\323\344\223\002 \"\025/v1/{parent=mappings}:"
  "\007mapping\332A\031parent,mapping,mapping_id\022\207\001\n"
  "\rDeleteMapping\0224.opi_api.network.cloud.v"
  "1alpha1.DeleteMappingRequest\032\026.google.pr"
  "otobuf.Empty\"(\202\323\344\223\002\035*\033/v1/{id=mappings}/"
  "{mapping}\332A\002id\022\261\001\n\rUpdateMapping\0224.opi_a"
  "pi.network.cloud.v1alpha1.UpdateMappingR"
  "equest\032\'.opi_api.network.cloud.v1alpha1."
  "Mapping\"A\202\323\344\223\002$2\031/v1/{mapping.id=mapping"
  "s}:\007mapping\332A\024mapping, update_mask\022\241\001\n\014L"
  "istMappings\0223.opi_api.network.cloud.v1al"
  "pha1.ListMappingsRequest\0324.opi_api.netwo"
  "rk.cloud.v1alpha1.ListMappingsResponse\"&"
  "\202\323\344\223\002\027\022\025/v1/{parent=mappings}\332A\006parent\022\222"
  "\001\n\nGetMapping\0221.opi_api.network.cloud.v1"
  "alpha1.GetMappingRequest\032\'.opi_api.netwo"
  "rk.cloud.v1alpha1.Mapping\"(\202\323\344\223\002\035\022\033/v1/{"
  "id=mappings}/{mapping}\332A\002id\022\262\001\n\rCreateNe"
  "xtHop\0224.opi_api.network.cloud.v1alpha1.C"
  "reateNextHopRequest\032\'.opi_api.network.cl"
  "oud.v1alpha1.NextHop\"B\202\323\344\223\002 \"\025/v1/{paren"
  "t=nexthops}:\007nexthop\332A\031parent,nexthop,ne"
  "xthop_id\022\207\001\n\rDeleteNextHop\0224.opi_api.net"
  "work.cloud.v1alpha1.DeleteNextHopRequest"
  "\032\026.google.protobuf.Empty\"(\202\323\344\223\002\035*\033/v1/{i"
  "d=nexthops}/{nexthop}\332A\002id\022\261\001\n\rUpdateNex"
  "tHop\0224.opi_api.network.cloud.v1alpha1.Up"
  "dateNextHopRequest\032\'.opi_api.network.clo"
  "ud.v1alpha1.NextHop\"A\202\323\344\223\002$2\031/v1/{nextho"
  "p.id=nexthops}:\007nexthop\332A\024nexthop, updat"
  "e_mask\022\240\001\n\013ListNextHop\0223.opi_api.network"
  ".cloud.v1alpha1.ListNextHopsRequest\0324.op"
  "i_api.network.cloud.v1alpha1.ListNextHop"
  "sResponse\"&\202\323\344\223\002\027\022\025/v1/{parent=nexthops}"
  "\332A\006parent\022\222\001\n\nGetNextHop\0221.opi_api.netwo"
  "rk.cloud.v1alpha1.GetNextHopRequest\032\'.op"
  "i_api.network.cloud.v1alpha1.NextHop\"(\202\323"
  "\344\223\002\035\022\033/v1/{id=nexthops}/{nexthop}\332A\002id\022\325"
  "\001\n\022CreateNextHopGroup\0229.opi_api.network."
  "cloud.v1alpha1.CreateNextHopGroupRequest"
  "\032,.opi_api.network.cloud.v1alpha1.NextHo"
  "pGroup\"V\202\323\344\223\002*\"\032/v1/{parent=nexthopgroup"
  "s}:\014nexthopgroup\332A#parent,nexthopgroup,n"
  "exthopgroup_id\022\233\001\n\022DeleteNextHopGroup\0229."
  "opi_api.network.cloud.v1alpha1.DeleteNex"
  "tHopGroupRequest\032\026.google.protobuf.Empty"
  "\"2\202\323\344\223\002\'*%/v1/{id=nexthopgroups}/{nextho"
  "pgroup}\332A\002id\022\324\001\n\022UpdateNextHopGroup\0229.op"
  "i_api.network.cloud.v1alpha1.UpdateNextH"
  "opGroupRequest\032,.opi_api.network.cloud.v"
  "1alpha1.NextHopGroup\"U\202\323\344\223\00232#/v1/{nexth"
  "opgroup.id=nexthopgroups}:\014nexthopgroup\332"
  "A\031nexthopgroup, update_mask\022\265\001\n\021ListNext"
  "HopGroups\0228.opi_api.network.cloud.v1alph"
  "a1.ListNextHopGroupsRequest\0329.opi_api.ne"
  "twork.cloud.v1alpha1.ListNextHopGroupsRe"
  "sponse\"+\202\323\344\223\002\034\022\032/v1/{parent=nexthopgroup"
  "s}\332A\006parent\022\253\001\n\017GetNextHopGroup\0226.opi_ap"
  "i.network.cloud.v1alpha1.GetNextHopGroup"
  "Request\032,.opi_api.network.cloud.v1alpha1"
  ".NextHopGroup\"2\202\323\344\223\002\'\022%/v1/{id=nexthopgr"
  "oups}/{nexthopgroup}\332A\002id\022\253\001\n\014CreateSubn"
  "et\0223.opi_api.network.cloud.v1alpha1.Crea"
  "teSubnetRequest\032&.opi_api.network.cloud."
  "v1alpha1.Subnet\">\202\323\344\223\002\036\"\024/v1/{parent=sub"
  "nets}:\006subnet\332A\027parent,subnet,subnet_id\022"
  "\203\001\n\014DeleteSubnet\0223.opi_api.network.cloud"
  ".v1alpha1.DeleteSubnetRequest\032\026.google.p"
  "rotobuf.Empty\"&\202\323\344\223\002\033*\031/v1/{id=subnets}/"
  "{subnet}\332A\002id\022\252\001\n\014UpdateSubnet\0223.opi_api"
  ".network.cloud.v1alpha1.UpdateSubnetRequ"
  "est\032&.opi_api.network.cloud.v1alpha1.Sub"
  "net\"=\202\323\344\223\002!2\027/v1/{subnet.id=subnets}:\006su"
  "bnet\332A\023subnet, update_mask\022\235\001\n\013ListSubne"
  "ts\0222.opi_api.network.cloud.v1alpha1.List"
  "SubnetsRequest\0323.opi_api.network.cloud.v"
  "1alpha1.ListSubnetsResponse\"%\202\323\344\223\002\026\022\024/v1"
  "/{parent=subnets}\332A\006parent\022\215\001\n\tGetSubnet"
  "\0220.opi_api.network.cloud.v1alpha1.GetSub"
  "netRequest\032&.opi_api.network.cloud.v1alp"
  "ha1.Subnet\"&\202\323\344\223\002\033\022\031/v1/{id=subnets}/{su"
  "bnet}\332A\002id\022\253\001\n\014CreateTunnel\0223.opi_api.ne"
  "twork.cloud.v1alpha1.CreateTunnelRequest"
  "\032&.opi_api.network.cloud.v1alpha1.Tunnel"
  "\">\202\323\344\223\002\036\"\024/v1/{parent=tunnels}:\006tunnel\332A"
  "\027parent,tunnel,tunnel_id\022\203\001\n\014DeleteTunne"
  "l\0223.opi_api.network.cloud.v1alpha1.Delet"
  "eTunnelRequest\032\026.google.protobuf.Empty\"&"
  "\202\323\344\223\002\033*\031/v1/{id=tunnels}/{tunnel}\332A\002id\022\252"
  "\001\n\014UpdateTunnel\0223.opi_api.network.cloud."
  "v1alpha1.UpdateTunnelRequest\032&.opi_api.n"
  "etwork.cloud.v1alpha1.Tunnel\"=\202\323\344\223\002!2\027/v"
  "1/{tunnel.id=tunnels}:\006tunnel\332A\023tunnel, "
  "update_mask\022\235\001\n\013ListTunnels\0222.opi_api.ne"
  "twork.cloud.v1alpha1.ListTunnelsRequest\032"
  "3.opi_api.network.cloud.v1alpha1.ListTun"
  "nelsResponse\"%\202\323\344\223\002\026\022\024/v1/{parent=tunnel"
  "s}\332A\006parent\022\215\001\n\tGetTunnel\0220.opi_api.netw"
  "ork.cloud.v1alpha1.GetTunnelRequest\032&.op"
  "i_api.network.cloud.v1alpha1.Tunnel\"&\202\323\344"
  "\223\002\033\022\031/v1/{id=tunnels}/{tunnel}\332A\002id\022\226\001\n\t"
  "CreateVpc\0220.opi_api.network.cloud.v1alph"
  "a1.CreateVpcRequest\032#.opi_api.network.cl"
  "oud.v1alpha1.Vpc\"2\202\323\344\223\002\030\"\021/v1/{parent=vp"
  "cs}:\003vpc\332A\021parent,vpc,vpc_id\022w\n\tDeleteVp"
  "c\0220.opi_api.network.cloud.v1alpha1.Delet"
  "eVpcRequest\032\026.google.protobuf.Empty\" \202\323\344"
  "\223\002\025*\023/v1/{id=vpcs}/{vpc}\332A\002id\022\225\001\n\tUpdate"
  "Vpc\0220.opi_api.network.cloud.v1alpha1.Upd"
  "ateVpcRequest\032#.opi_api.network.cloud.v1"
  "alpha1.Vpc\"1\202\323\344\223\002\0302\021/v1/{vpc.id=vpcs}:\003v"
  "pc\332A\020vpc, update_mask\022\221\001\n\010ListVpcs\022/.opi"
  "_api.network.cloud.v1alpha1.ListVpcsRequ"
  "est\0320.opi_api.network.cloud.v1alpha1.Lis"
  "tVpcsResponse\"\"\202\323\344\223\002\023\022\021/v1/{parent=vpcs}"
  "\332A\006parent\022~\n\006GetVpc\022-.opi_api.network.cl"
  "oud.v1alpha1.GetVpcRequest\032#.opi_api.net"
  "work.cloud.v1alpha1.Vpc\" \202\323\344\223\002\025\022\023/v1/{id"
  "=vpcs}/{vpc}\332A\002id\022\262\001\n\rCreateVPCPeer\0224.op"
  "i_api.network.cloud.v1alpha1.CreateVPCPe"
  "erRequest\032\'.opi_api.network.cloud.v1alph"
  "a1.VPCPeer\"B\202\323\344\223\002 \"\025/v1/{parent=vpcpeers"
  "}:\007vpcpeer\332A\031parent,vpcpeer,vpcpeer_id\022\207"
  "\001\n\rDeleteVPCPeer\0224.opi_api.network.cloud"
  ".v1alpha1.DeleteVPCPeerRequest\032\026.google."
  "protobuf.Empty\"(\202\323\344\223\002\035*\033/v1/{id=vpcpeers"
  "}/{vpcpeer}\332A\002id\022\261\001\n\rUpdateVPCPeer\0224.opi"
  "_api.network.cloud.v1alpha1.UpdateVPCPee"
  "rRequest\032\'.opi_api.network.cloud.v1alpha"
  "1.VPCPeer\"A\202\323\344\223\002$2\031/v1/{vpcpeer.id=vpcpe"
  "ers}:\007vpcpeer\332A\024vpcpeer, update_mask\022\241\001\n"
  "\014ListVPCPeers\0223.opi_api.network.cloud.v1"
  "alpha1.ListVPCPeersRequest\0324.opi_api.net"
  "work.cloud.v1alpha1.ListVPCPeersResponse"
  "\"&\202\323\344\223\002\027\022\025/v1/{parent=vpcpeers}\332A\006parent"
  "\022\222\001\n\nGetVPCPeer\0221.opi_api.network.cloud."
  "v1alpha1.GetVPCPeerRequest\032\'.opi_api.net"
  "work.cloud.v1alpha1.VPCPeer\"(\202\323\344\223\002\035\022\033/v1"
  "/{id=vpcpeers}/{vpcpeer}\332A\002id\022\343\001\n\024Create"
  "SecurityPolicy\022;.opi_api.network.cloud.v"
  "1alpha1.CreateSecurityPolicyRequest\032..op"
  "i_api.network.cloud.v1alpha1.SecurityPol"
  "icy\"^\202\323\344\223\002.\"\034/v1/{parent=securitypolicys"
  "}:\016securitypolicy\332A\'parent,securitypolic"
  "y,securitypolicy_id\022\243\001\n\024DeleteSecurityPo"
  "licy\022;.opi_api.network.cloud.v1alpha1.De"
  "leteSecurityPolicyRequest\032\026.google.proto"
  "buf.Empty\"6\202\323\344\223\002+*)/v1/{id=securitypolic"
  "ys}/{securitypolicy}\332A\002id\022\342\001\n\024UpdateSecu"
  "rityPolicy\022;.opi_api.network.cloud.v1alp"
  "ha1.UpdateSecurityPolicyRequest\032..opi_ap"
  "i.network.cloud.v1alpha1.SecurityPolicy\""
  "]\202\323\344\223\00292\'/v1/{securitypolicy.id=security"
  "policys}:\016securitypolicy\332A\033securitypolic"
  "y, update_mask\022\275\001\n\023ListSecurityPolicys\022:"
  ".opi_api.network.cloud.v1alpha1.ListSecu"
  "rityPolicysRequest\032;.opi_api.network.clo"
  "ud.v1alpha1.ListSecurityPolicysResponse\""
  "-\202\323\344\223\002\036\022\034/v1/{parent=securitypolicys}\332A\006"
  "parent\022\265\001\n\021GetSecurityPolicy\0228.opi_api.n"
  "etwork.cloud.v1alpha1.GetSecurityPolicyR"
  "equest\032..opi_api.network.cloud.v1alpha1."
  "SecurityPolicy\"6\202\323\344\223\002+\022)/v1/{id=security"
  "policys}/{securitypolicy}\332A\002id\022\325\001\n\022Creat"
  "eSecurityRule\0229.opi_api.network.cloud.v1"
  "alpha1.CreateSecurityRuleRequest\032,.opi_a"
  "pi.network.cloud.v1alpha1.SecurityRule\"V"
  "\202\323\344\223\002*\"\032/v1/{parent=securityrules}:\014secu"
  "rityrule\332A#parent,securityrule,securityr"
  "ule_id\022\233\001\n\022DeleteSecurityRule\0229.opi_api."
  "network.cloud.v1alpha1.DeleteSecurityRul"
  "eRequest\032\026.google.protobuf.Empty\"2\202\323\344\223\002\'"
  "*%/v1/{id=securityrules}/{securityrule}\332"
  "A\002id\022\324\001\n\022UpdateSecurityRule\0229.opi_api.ne"
  "twork.cloud.v1alpha1.UpdateSecurityRuleR"
  "equest\032,.opi_api.network.cloud.v1alpha1."
  "SecurityRule\"U\202\323\344\223\00232#/v1/{securityrule."
  "id=securityrules}:\014securityrule\332A\031securi"
  "tyrule, update_mask\022\265\001\n\021ListSecurityRule"
  "s\0228.opi_api.network.cloud.v1alpha1.ListS"
  "ecurityRulesRequest\0329.opi_api.network.cl"
  "oud.v1alpha1.ListSecurityRulesResponse\"+"
  "\202\323\344\223\002\034\022\032/v1/{parent=securityrules}\332A\006par"
  "ent\022\253\001\n\017GetSecurityRule\0226.opi_api.networ"
  "k.cloud.v1alpha1.GetSecurityRuleRequest\032"
  ",.opi_api.network.cloud.v1alpha1.Securit"
  "yRule\"2\202\323\344\223\002\'\022%/v1/{id=securityrules}/{s"
  "ecurityrule}\332A\002id\022\352\001\n\025CreateSecurityProf"
  "ile\022<.opi_api.network.cloud.v1alpha1.Cre"
  "ateSecurityProfileRequest\032/.opi_api.netw"
  "ork.cloud.v1alpha1.SecurityProfile\"b\202\323\344\223"
  "\0020\"\035/v1/{parent=securityprofiles}:\017secur"
  "ityprofile\332A)parent,securityprofile,secu"
  "rityprofile_id\022\247\001\n\025DeleteSecurityProfile"
  "\022<.opi_api.network.cloud.v1alpha1.Delete"
  "SecurityProfileRequest\032\026.google.protobuf"
  ".Empty\"8\202\323\344\223\002-*+/v1/{id=securityprofiles"
  "}/{securityprofile}\332A\002id\022\351\001\n\025UpdateSecur"
  "ityProfile\022<.opi_api.network.cloud.v1alp"
  "ha1.UpdateSecurityProfileRequest\032/.opi_a"
  "pi.network.cloud.v1alpha1.SecurityProfil"
  "e\"a\202\323\344\223\002<2)/v1/{securityprofile.id=secur"
  "ityprofiles}:\017securityprofile\332A\034security"
  "profile, update_mask\022\301\001\n\024ListSecurityPro"
  "files\022;.opi_api.network.cloud.v1alpha1.L"
  "istSecurityProfilesRequest\032<.opi_api.net"
  "work.cloud.v1alpha1.ListSecurityProfiles"
  "Response\".\202\323\344\223\002\037\022\035/v1/{parent=securitypr"
  "ofiles}\332A\006parent\022\272\001\n\022GetSecurityProfile\022"
  "9.opi_api.network.cloud.v1alpha1.GetSecu"
  "rityProfileRequest\032/.opi_api.network.clo"
  "ud.v1alpha1.SecurityProfile\"8\202\323\344\223\002-\022+/v1"
  "/{id=securityprofiles}/{securityprofile}"
  "\332A\002idBi\n\036opi_api.network.cloud.v1alpha1B"
  "\010CloudRPCP\001Z;github.com/opiproject/opi-a"
  "pi/network/cloud/v1alpha1/gen/gob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cloudrpc_2eproto_deps[19] = {
  &::descriptor_table_bgp_2eproto,
  &::descriptor_table_device_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_interface_2eproto,
  &::descriptor_table_mapping_2eproto,
  &::descriptor_table_networkpolicy_2eproto,
  &::descriptor_table_nexthop_2eproto,
  &::descriptor_table_port_2eproto,
  &::descriptor_table_route_2eproto,
  &::descriptor_table_subnet_2eproto,
  &::descriptor_table_tunnel_2eproto,
  &::descriptor_table_underlayroute_2eproto,
  &::descriptor_table_vnic_2eproto,
  &::descriptor_table_vpc_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cloudrpc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cloudrpc_2eproto = {
  false, false, 30880, descriptor_table_protodef_cloudrpc_2eproto, "cloudrpc.proto", 
  &descriptor_table_cloudrpc_2eproto_once, descriptor_table_cloudrpc_2eproto_deps, 19, 119,
  schemas, file_default_instances, TableStruct_cloudrpc_2eproto::offsets,
  file_level_metadata_cloudrpc_2eproto, file_level_enum_descriptors_cloudrpc_2eproto, file_level_service_descriptors_cloudrpc_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_cloudrpc_2eproto_getter() {
  return &descriptor_table_cloudrpc_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_cloudrpc_2eproto(&descriptor_table_cloudrpc_2eproto);
namespace opi_api {
namespace network {
namespace cloud {
namespace v1alpha1 {

// ===================================================================

class GetDeviceCapabilitiesRequest::_Internal {
 public:
};

GetDeviceCapabilitiesRequest::GetDeviceCapabilitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetDeviceCapabilitiesRequest)
}
GetDeviceCapabilitiesRequest::GetDeviceCapabilitiesRequest(const GetDeviceCapabilitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetDeviceCapabilitiesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDeviceCapabilitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDeviceCapabilitiesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetDeviceCapabilitiesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[0]);
}

// ===================================================================

class CreateDeviceRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Device& device(const CreateDeviceRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Device&
CreateDeviceRequest::_Internal::device(const CreateDeviceRequest* msg) {
  return *msg->device_;
}
void CreateDeviceRequest::clear_device() {
  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
CreateDeviceRequest::CreateDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
}
CreateDeviceRequest::CreateDeviceRequest(const CreateDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  device_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    device_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_device_id().empty()) {
    device_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_device_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_device()) {
    device_ = new ::opi_api::network::cloud::v1alpha1::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
}

inline void CreateDeviceRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
device_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  device_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
device_ = nullptr;
}

CreateDeviceRequest::~CreateDeviceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_;
}

void CreateDeviceRequest::ArenaDtor(void* object) {
  CreateDeviceRequest* _this = reinterpret_cast< CreateDeviceRequest* >(object);
  (void)_this;
}
void CreateDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  device_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateDeviceRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Device device = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string device_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_device_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateDeviceRequest.device_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDeviceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateDeviceRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Device device = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::device(this), target, stream);
  }

  // string device_id = 3;
  if (!this->_internal_device_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_id().data(), static_cast<int>(this->_internal_device_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateDeviceRequest.device_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_device_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  return target;
}

size_t CreateDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string device_id = 3;
  if (!this->_internal_device_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_id());
  }

  // .opi_api.network.cloud.v1alpha1.Device device = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDeviceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateDeviceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDeviceRequest::GetClassData() const { return &_class_data_; }

void CreateDeviceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateDeviceRequest *>(to)->MergeFrom(
      static_cast<const CreateDeviceRequest &>(from));
}


void CreateDeviceRequest::MergeFrom(const CreateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_device_id().empty()) {
    _internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_has_device()) {
    _internal_mutable_device()->::opi_api::network::cloud::v1alpha1::Device::MergeFrom(from._internal_device());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDeviceRequest::CopyFrom(const CreateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeviceRequest::IsInitialized() const {
  return true;
}

void CreateDeviceRequest::InternalSwap(CreateDeviceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &device_id_, lhs_arena,
      &other->device_id_, rhs_arena
  );
  swap(device_, other->device_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeviceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[1]);
}

// ===================================================================

class DeleteDeviceRequest::_Internal {
 public:
};

DeleteDeviceRequest::DeleteDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
}
DeleteDeviceRequest::DeleteDeviceRequest(const DeleteDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
}

inline void DeleteDeviceRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDeviceRequest::~DeleteDeviceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteDeviceRequest::ArenaDtor(void* object) {
  DeleteDeviceRequest* _this = reinterpret_cast< DeleteDeviceRequest* >(object);
  (void)_this;
}
void DeleteDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteDeviceRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDeviceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteDeviceRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  return target;
}

size_t DeleteDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDeviceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteDeviceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDeviceRequest::GetClassData() const { return &_class_data_; }

void DeleteDeviceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteDeviceRequest *>(to)->MergeFrom(
      static_cast<const DeleteDeviceRequest &>(from));
}


void DeleteDeviceRequest::MergeFrom(const DeleteDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDeviceRequest::CopyFrom(const DeleteDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDeviceRequest::IsInitialized() const {
  return true;
}

void DeleteDeviceRequest::InternalSwap(DeleteDeviceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDeviceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[2]);
}

// ===================================================================

class UpdateDeviceRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Device& device(const UpdateDeviceRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateDeviceRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Device&
UpdateDeviceRequest::_Internal::device(const UpdateDeviceRequest* msg) {
  return *msg->device_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateDeviceRequest::_Internal::update_mask(const UpdateDeviceRequest* msg) {
  return *msg->update_mask_;
}
void UpdateDeviceRequest::clear_device() {
  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
void UpdateDeviceRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateDeviceRequest::UpdateDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
}
UpdateDeviceRequest::UpdateDeviceRequest(const UpdateDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_device()) {
    device_ = new ::opi_api::network::cloud::v1alpha1::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
}

inline void UpdateDeviceRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&device_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&device_)) + sizeof(update_mask_));
}

UpdateDeviceRequest::~UpdateDeviceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete device_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateDeviceRequest::ArenaDtor(void* object) {
  UpdateDeviceRequest* _this = reinterpret_cast< UpdateDeviceRequest* >(object);
  (void)_this;
}
void UpdateDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Device device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_device(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDeviceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Device device = 1;
  if (this->_internal_has_device()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::device(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  return target;
}

size_t UpdateDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Device device = 1;
  if (this->_internal_has_device()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *device_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDeviceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateDeviceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDeviceRequest::GetClassData() const { return &_class_data_; }

void UpdateDeviceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateDeviceRequest *>(to)->MergeFrom(
      static_cast<const UpdateDeviceRequest &>(from));
}


void UpdateDeviceRequest::MergeFrom(const UpdateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_device()) {
    _internal_mutable_device()->::opi_api::network::cloud::v1alpha1::Device::MergeFrom(from._internal_device());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceRequest::CopyFrom(const UpdateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDeviceRequest::IsInitialized() const {
  return true;
}

void UpdateDeviceRequest::InternalSwap(UpdateDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, update_mask_)
      + sizeof(UpdateDeviceRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, device_)>(
          reinterpret_cast<char*>(&device_),
          reinterpret_cast<char*>(&other->device_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDeviceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[3]);
}

// ===================================================================

class ListDevicesRequest::_Internal {
 public:
};

ListDevicesRequest::ListDevicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
}
ListDevicesRequest::ListDevicesRequest(const ListDevicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
}

inline void ListDevicesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListDevicesRequest::~ListDevicesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListDevicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListDevicesRequest::ArenaDtor(void* object) {
  ListDevicesRequest* _this = reinterpret_cast< ListDevicesRequest* >(object);
  (void)_this;
}
void ListDevicesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDevicesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDevicesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListDevicesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListDevicesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListDevicesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListDevicesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListDevicesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  return target;
}

size_t ListDevicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListDevicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListDevicesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListDevicesRequest::GetClassData() const { return &_class_data_; }

void ListDevicesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListDevicesRequest *>(to)->MergeFrom(
      static_cast<const ListDevicesRequest &>(from));
}


void ListDevicesRequest::MergeFrom(const ListDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListDevicesRequest::CopyFrom(const ListDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDevicesRequest::IsInitialized() const {
  return true;
}

void ListDevicesRequest::InternalSwap(ListDevicesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDevicesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[4]);
}

// ===================================================================

class ListDevicesResponse::_Internal {
 public:
};

void ListDevicesResponse::clear_device() {
  device_.Clear();
}
ListDevicesResponse::ListDevicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  device_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
}
ListDevicesResponse::ListDevicesResponse(const ListDevicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      device_(from.device_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
}

inline void ListDevicesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListDevicesResponse::~ListDevicesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListDevicesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListDevicesResponse::ArenaDtor(void* object) {
  ListDevicesResponse* _this = reinterpret_cast< ListDevicesResponse* >(object);
  (void)_this;
}
void ListDevicesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDevicesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDevicesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Device device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_device(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListDevicesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListDevicesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Device device = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_device_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_device(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListDevicesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  return target;
}

size_t ListDevicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Device device = 1;
  total_size += 1UL * this->_internal_device_size();
  for (const auto& msg : this->device_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListDevicesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListDevicesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListDevicesResponse::GetClassData() const { return &_class_data_; }

void ListDevicesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListDevicesResponse *>(to)->MergeFrom(
      static_cast<const ListDevicesResponse &>(from));
}


void ListDevicesResponse::MergeFrom(const ListDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  device_.MergeFrom(from.device_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListDevicesResponse::CopyFrom(const ListDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDevicesResponse::IsInitialized() const {
  return true;
}

void ListDevicesResponse::InternalSwap(ListDevicesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  device_.InternalSwap(&other->device_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDevicesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[5]);
}

// ===================================================================

class GetDeviceRequest::_Internal {
 public:
};

GetDeviceRequest::GetDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
}
GetDeviceRequest::GetDeviceRequest(const GetDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
}

inline void GetDeviceRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDeviceRequest::~GetDeviceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDeviceRequest::ArenaDtor(void* object) {
  GetDeviceRequest* _this = reinterpret_cast< GetDeviceRequest* >(object);
  (void)_this;
}
void GetDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetDeviceRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDeviceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetDeviceRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  return target;
}

size_t GetDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDeviceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDeviceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDeviceRequest::GetClassData() const { return &_class_data_; }

void GetDeviceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDeviceRequest *>(to)->MergeFrom(
      static_cast<const GetDeviceRequest &>(from));
}


void GetDeviceRequest::MergeFrom(const GetDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDeviceRequest::CopyFrom(const GetDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceRequest::IsInitialized() const {
  return true;
}

void GetDeviceRequest::InternalSwap(GetDeviceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDeviceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[6]);
}

// ===================================================================

class UpdatePortRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Port& port(const UpdatePortRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdatePortRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Port&
UpdatePortRequest::_Internal::port(const UpdatePortRequest* msg) {
  return *msg->port_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdatePortRequest::_Internal::update_mask(const UpdatePortRequest* msg) {
  return *msg->update_mask_;
}
void UpdatePortRequest::clear_port() {
  if (GetArenaForAllocation() == nullptr && port_ != nullptr) {
    delete port_;
  }
  port_ = nullptr;
}
void UpdatePortRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdatePortRequest::UpdatePortRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
}
UpdatePortRequest::UpdatePortRequest(const UpdatePortRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_port()) {
    port_ = new ::opi_api::network::cloud::v1alpha1::Port(*from.port_);
  } else {
    port_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
}

inline void UpdatePortRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&port_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&port_)) + sizeof(update_mask_));
}

UpdatePortRequest::~UpdatePortRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdatePortRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete port_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdatePortRequest::ArenaDtor(void* object) {
  UpdatePortRequest* _this = reinterpret_cast< UpdatePortRequest* >(object);
  (void)_this;
}
void UpdatePortRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePortRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdatePortRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && port_ != nullptr) {
    delete port_;
  }
  port_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePortRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Port port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_port(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdatePortRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Port port = 1;
  if (this->_internal_has_port()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::port(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  return target;
}

size_t UpdatePortRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Port port = 1;
  if (this->_internal_has_port()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *port_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdatePortRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdatePortRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdatePortRequest::GetClassData() const { return &_class_data_; }

void UpdatePortRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdatePortRequest *>(to)->MergeFrom(
      static_cast<const UpdatePortRequest &>(from));
}


void UpdatePortRequest::MergeFrom(const UpdatePortRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_port()) {
    _internal_mutable_port()->::opi_api::network::cloud::v1alpha1::Port::MergeFrom(from._internal_port());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePortRequest::CopyFrom(const UpdatePortRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdatePortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePortRequest::IsInitialized() const {
  return true;
}

void UpdatePortRequest::InternalSwap(UpdatePortRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdatePortRequest, update_mask_)
      + sizeof(UpdatePortRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdatePortRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePortRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[7]);
}

// ===================================================================

class ListPortsRequest::_Internal {
 public:
};

ListPortsRequest::ListPortsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListPortsRequest)
}
ListPortsRequest::ListPortsRequest(const ListPortsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListPortsRequest)
}

inline void ListPortsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListPortsRequest::~ListPortsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPortsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListPortsRequest::ArenaDtor(void* object) {
  ListPortsRequest* _this = reinterpret_cast< ListPortsRequest* >(object);
  (void)_this;
}
void ListPortsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPortsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPortsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPortsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListPortsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListPortsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListPortsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListPortsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListPortsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  return target;
}

size_t ListPortsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPortsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPortsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPortsRequest::GetClassData() const { return &_class_data_; }

void ListPortsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPortsRequest *>(to)->MergeFrom(
      static_cast<const ListPortsRequest &>(from));
}


void ListPortsRequest::MergeFrom(const ListPortsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPortsRequest::CopyFrom(const ListPortsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListPortsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPortsRequest::IsInitialized() const {
  return true;
}

void ListPortsRequest::InternalSwap(ListPortsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPortsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[8]);
}

// ===================================================================

class ListPortsResponse::_Internal {
 public:
};

void ListPortsResponse::clear_port() {
  port_.Clear();
}
ListPortsResponse::ListPortsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  port_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListPortsResponse)
}
ListPortsResponse::ListPortsResponse(const ListPortsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      port_(from.port_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListPortsResponse)
}

inline void ListPortsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListPortsResponse::~ListPortsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPortsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListPortsResponse::ArenaDtor(void* object) {
  ListPortsResponse* _this = reinterpret_cast< ListPortsResponse* >(object);
  (void)_this;
}
void ListPortsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPortsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPortsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  port_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPortsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Port port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_port(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListPortsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListPortsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Port port = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_port_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_port(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListPortsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  return target;
}

size_t ListPortsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Port port = 1;
  total_size += 1UL * this->_internal_port_size();
  for (const auto& msg : this->port_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPortsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPortsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPortsResponse::GetClassData() const { return &_class_data_; }

void ListPortsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPortsResponse *>(to)->MergeFrom(
      static_cast<const ListPortsResponse &>(from));
}


void ListPortsResponse::MergeFrom(const ListPortsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  port_.MergeFrom(from.port_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPortsResponse::CopyFrom(const ListPortsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListPortsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPortsResponse::IsInitialized() const {
  return true;
}

void ListPortsResponse::InternalSwap(ListPortsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  port_.InternalSwap(&other->port_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPortsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[9]);
}

// ===================================================================

class GetPortRequest::_Internal {
 public:
};

GetPortRequest::GetPortRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetPortRequest)
}
GetPortRequest::GetPortRequest(const GetPortRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetPortRequest)
}

inline void GetPortRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPortRequest::~GetPortRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetPortRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPortRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPortRequest::ArenaDtor(void* object) {
  GetPortRequest* _this = reinterpret_cast< GetPortRequest* >(object);
  (void)_this;
}
void GetPortRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPortRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPortRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetPortRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPortRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetPortRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPortRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetPortRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetPortRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetPortRequest)
  return target;
}

size_t GetPortRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetPortRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPortRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPortRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPortRequest::GetClassData() const { return &_class_data_; }

void GetPortRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPortRequest *>(to)->MergeFrom(
      static_cast<const GetPortRequest &>(from));
}


void GetPortRequest::MergeFrom(const GetPortRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetPortRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPortRequest::CopyFrom(const GetPortRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetPortRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPortRequest::IsInitialized() const {
  return true;
}

void GetPortRequest::InternalSwap(GetPortRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPortRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[10]);
}

// ===================================================================

class CreateVnicRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Vnic& vnic(const CreateVnicRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Vnic&
CreateVnicRequest::_Internal::vnic(const CreateVnicRequest* msg) {
  return *msg->vnic_;
}
void CreateVnicRequest::clear_vnic() {
  if (GetArenaForAllocation() == nullptr && vnic_ != nullptr) {
    delete vnic_;
  }
  vnic_ = nullptr;
}
CreateVnicRequest::CreateVnicRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
}
CreateVnicRequest::CreateVnicRequest(const CreateVnicRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  vnic_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    vnic_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vnic_id().empty()) {
    vnic_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vnic_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_vnic()) {
    vnic_ = new ::opi_api::network::cloud::v1alpha1::Vnic(*from.vnic_);
  } else {
    vnic_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
}

inline void CreateVnicRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
vnic_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  vnic_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
vnic_ = nullptr;
}

CreateVnicRequest::~CreateVnicRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateVnicRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vnic_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vnic_;
}

void CreateVnicRequest::ArenaDtor(void* object) {
  CreateVnicRequest* _this = reinterpret_cast< CreateVnicRequest* >(object);
  (void)_this;
}
void CreateVnicRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVnicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVnicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  vnic_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && vnic_ != nullptr) {
    delete vnic_;
  }
  vnic_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVnicRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateVnicRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Vnic vnic = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vnic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string vnic_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_vnic_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateVnicRequest.vnic_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateVnicRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateVnicRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Vnic vnic = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_vnic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vnic(this), target, stream);
  }

  // string vnic_id = 3;
  if (!this->_internal_vnic_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vnic_id().data(), static_cast<int>(this->_internal_vnic_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateVnicRequest.vnic_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_vnic_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  return target;
}

size_t CreateVnicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string vnic_id = 3;
  if (!this->_internal_vnic_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vnic_id());
  }

  // .opi_api.network.cloud.v1alpha1.Vnic vnic = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_vnic()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vnic_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateVnicRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateVnicRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateVnicRequest::GetClassData() const { return &_class_data_; }

void CreateVnicRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateVnicRequest *>(to)->MergeFrom(
      static_cast<const CreateVnicRequest &>(from));
}


void CreateVnicRequest::MergeFrom(const CreateVnicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_vnic_id().empty()) {
    _internal_set_vnic_id(from._internal_vnic_id());
  }
  if (from._internal_has_vnic()) {
    _internal_mutable_vnic()->::opi_api::network::cloud::v1alpha1::Vnic::MergeFrom(from._internal_vnic());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVnicRequest::CopyFrom(const CreateVnicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateVnicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVnicRequest::IsInitialized() const {
  return true;
}

void CreateVnicRequest::InternalSwap(CreateVnicRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vnic_id_, lhs_arena,
      &other->vnic_id_, rhs_arena
  );
  swap(vnic_, other->vnic_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVnicRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[11]);
}

// ===================================================================

class DeleteVnicRequest::_Internal {
 public:
};

DeleteVnicRequest::DeleteVnicRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
}
DeleteVnicRequest::DeleteVnicRequest(const DeleteVnicRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
}

inline void DeleteVnicRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteVnicRequest::~DeleteVnicRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteVnicRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteVnicRequest::ArenaDtor(void* object) {
  DeleteVnicRequest* _this = reinterpret_cast< DeleteVnicRequest* >(object);
  (void)_this;
}
void DeleteVnicRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVnicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVnicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVnicRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteVnicRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteVnicRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteVnicRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  return target;
}

size_t DeleteVnicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteVnicRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteVnicRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteVnicRequest::GetClassData() const { return &_class_data_; }

void DeleteVnicRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteVnicRequest *>(to)->MergeFrom(
      static_cast<const DeleteVnicRequest &>(from));
}


void DeleteVnicRequest::MergeFrom(const DeleteVnicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVnicRequest::CopyFrom(const DeleteVnicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteVnicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVnicRequest::IsInitialized() const {
  return true;
}

void DeleteVnicRequest::InternalSwap(DeleteVnicRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVnicRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[12]);
}

// ===================================================================

class UpdateVnicRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Vnic& vnic(const UpdateVnicRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateVnicRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Vnic&
UpdateVnicRequest::_Internal::vnic(const UpdateVnicRequest* msg) {
  return *msg->vnic_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateVnicRequest::_Internal::update_mask(const UpdateVnicRequest* msg) {
  return *msg->update_mask_;
}
void UpdateVnicRequest::clear_vnic() {
  if (GetArenaForAllocation() == nullptr && vnic_ != nullptr) {
    delete vnic_;
  }
  vnic_ = nullptr;
}
void UpdateVnicRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateVnicRequest::UpdateVnicRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
}
UpdateVnicRequest::UpdateVnicRequest(const UpdateVnicRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_vnic()) {
    vnic_ = new ::opi_api::network::cloud::v1alpha1::Vnic(*from.vnic_);
  } else {
    vnic_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
}

inline void UpdateVnicRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&vnic_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&vnic_)) + sizeof(update_mask_));
}

UpdateVnicRequest::~UpdateVnicRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateVnicRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete vnic_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateVnicRequest::ArenaDtor(void* object) {
  UpdateVnicRequest* _this = reinterpret_cast< UpdateVnicRequest* >(object);
  (void)_this;
}
void UpdateVnicRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateVnicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateVnicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && vnic_ != nullptr) {
    delete vnic_;
  }
  vnic_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVnicRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Vnic vnic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_vnic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateVnicRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Vnic vnic = 1;
  if (this->_internal_has_vnic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::vnic(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  return target;
}

size_t UpdateVnicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Vnic vnic = 1;
  if (this->_internal_has_vnic()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vnic_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateVnicRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateVnicRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateVnicRequest::GetClassData() const { return &_class_data_; }

void UpdateVnicRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateVnicRequest *>(to)->MergeFrom(
      static_cast<const UpdateVnicRequest &>(from));
}


void UpdateVnicRequest::MergeFrom(const UpdateVnicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_vnic()) {
    _internal_mutable_vnic()->::opi_api::network::cloud::v1alpha1::Vnic::MergeFrom(from._internal_vnic());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateVnicRequest::CopyFrom(const UpdateVnicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateVnicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVnicRequest::IsInitialized() const {
  return true;
}

void UpdateVnicRequest::InternalSwap(UpdateVnicRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateVnicRequest, update_mask_)
      + sizeof(UpdateVnicRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateVnicRequest, vnic_)>(
          reinterpret_cast<char*>(&vnic_),
          reinterpret_cast<char*>(&other->vnic_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVnicRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[13]);
}

// ===================================================================

class ListVnicsRequest::_Internal {
 public:
};

ListVnicsRequest::ListVnicsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
}
ListVnicsRequest::ListVnicsRequest(const ListVnicsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
}

inline void ListVnicsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListVnicsRequest::~ListVnicsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListVnicsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVnicsRequest::ArenaDtor(void* object) {
  ListVnicsRequest* _this = reinterpret_cast< ListVnicsRequest* >(object);
  (void)_this;
}
void ListVnicsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVnicsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVnicsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVnicsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVnicsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVnicsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVnicsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVnicsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVnicsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  return target;
}

size_t ListVnicsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVnicsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListVnicsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVnicsRequest::GetClassData() const { return &_class_data_; }

void ListVnicsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListVnicsRequest *>(to)->MergeFrom(
      static_cast<const ListVnicsRequest &>(from));
}


void ListVnicsRequest::MergeFrom(const ListVnicsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVnicsRequest::CopyFrom(const ListVnicsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListVnicsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVnicsRequest::IsInitialized() const {
  return true;
}

void ListVnicsRequest::InternalSwap(ListVnicsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVnicsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[14]);
}

// ===================================================================

class ListVnicsResponse::_Internal {
 public:
};

void ListVnicsResponse::clear_vnic() {
  vnic_.Clear();
}
ListVnicsResponse::ListVnicsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vnic_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
}
ListVnicsResponse::ListVnicsResponse(const ListVnicsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vnic_(from.vnic_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
}

inline void ListVnicsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVnicsResponse::~ListVnicsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListVnicsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVnicsResponse::ArenaDtor(void* object) {
  ListVnicsResponse* _this = reinterpret_cast< ListVnicsResponse* >(object);
  (void)_this;
}
void ListVnicsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVnicsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVnicsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vnic_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVnicsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Vnic vnic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vnic(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVnicsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVnicsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Vnic vnic = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vnic_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_vnic(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVnicsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  return target;
}

size_t ListVnicsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Vnic vnic = 1;
  total_size += 1UL * this->_internal_vnic_size();
  for (const auto& msg : this->vnic_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVnicsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListVnicsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVnicsResponse::GetClassData() const { return &_class_data_; }

void ListVnicsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListVnicsResponse *>(to)->MergeFrom(
      static_cast<const ListVnicsResponse &>(from));
}


void ListVnicsResponse::MergeFrom(const ListVnicsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vnic_.MergeFrom(from.vnic_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVnicsResponse::CopyFrom(const ListVnicsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListVnicsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVnicsResponse::IsInitialized() const {
  return true;
}

void ListVnicsResponse::InternalSwap(ListVnicsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vnic_.InternalSwap(&other->vnic_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVnicsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[15]);
}

// ===================================================================

class GetVnicRequest::_Internal {
 public:
};

GetVnicRequest::GetVnicRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetVnicRequest)
}
GetVnicRequest::GetVnicRequest(const GetVnicRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetVnicRequest)
}

inline void GetVnicRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVnicRequest::~GetVnicRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVnicRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetVnicRequest::ArenaDtor(void* object) {
  GetVnicRequest* _this = reinterpret_cast< GetVnicRequest* >(object);
  (void)_this;
}
void GetVnicRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVnicRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVnicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVnicRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetVnicRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVnicRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetVnicRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  return target;
}

size_t GetVnicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVnicRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVnicRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVnicRequest::GetClassData() const { return &_class_data_; }

void GetVnicRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVnicRequest *>(to)->MergeFrom(
      static_cast<const GetVnicRequest &>(from));
}


void GetVnicRequest::MergeFrom(const GetVnicRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVnicRequest::CopyFrom(const GetVnicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetVnicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVnicRequest::IsInitialized() const {
  return true;
}

void GetVnicRequest::InternalSwap(GetVnicRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVnicRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[16]);
}

// ===================================================================

class CreateInterfaceRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Interface& interface(const CreateInterfaceRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Interface&
CreateInterfaceRequest::_Internal::interface(const CreateInterfaceRequest* msg) {
  return *msg->interface_;
}
void CreateInterfaceRequest::clear_interface() {
  if (GetArenaForAllocation() == nullptr && interface_ != nullptr) {
    delete interface_;
  }
  interface_ = nullptr;
}
CreateInterfaceRequest::CreateInterfaceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
}
CreateInterfaceRequest::CreateInterfaceRequest(const CreateInterfaceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  interface_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    interface_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interface_id().empty()) {
    interface_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_interface_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_interface()) {
    interface_ = new ::opi_api::network::cloud::v1alpha1::Interface(*from.interface_);
  } else {
    interface_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
}

inline void CreateInterfaceRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
interface_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  interface_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
interface_ = nullptr;
}

CreateInterfaceRequest::~CreateInterfaceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateInterfaceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  interface_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void CreateInterfaceRequest::ArenaDtor(void* object) {
  CreateInterfaceRequest* _this = reinterpret_cast< CreateInterfaceRequest* >(object);
  (void)_this;
}
void CreateInterfaceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInterfaceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  interface_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && interface_ != nullptr) {
    delete interface_;
  }
  interface_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInterfaceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateInterfaceRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Interface interface = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_interface(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string interface_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_interface_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateInterfaceRequest.interface_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateInterfaceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateInterfaceRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Interface interface = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_interface()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::interface(this), target, stream);
  }

  // string interface_id = 3;
  if (!this->_internal_interface_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interface_id().data(), static_cast<int>(this->_internal_interface_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateInterfaceRequest.interface_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_interface_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  return target;
}

size_t CreateInterfaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string interface_id = 3;
  if (!this->_internal_interface_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interface_id());
  }

  // .opi_api.network.cloud.v1alpha1.Interface interface = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_interface()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interface_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateInterfaceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateInterfaceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateInterfaceRequest::GetClassData() const { return &_class_data_; }

void CreateInterfaceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateInterfaceRequest *>(to)->MergeFrom(
      static_cast<const CreateInterfaceRequest &>(from));
}


void CreateInterfaceRequest::MergeFrom(const CreateInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_interface_id().empty()) {
    _internal_set_interface_id(from._internal_interface_id());
  }
  if (from._internal_has_interface()) {
    _internal_mutable_interface()->::opi_api::network::cloud::v1alpha1::Interface::MergeFrom(from._internal_interface());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInterfaceRequest::CopyFrom(const CreateInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInterfaceRequest::IsInitialized() const {
  return true;
}

void CreateInterfaceRequest::InternalSwap(CreateInterfaceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &interface_id_, lhs_arena,
      &other->interface_id_, rhs_arena
  );
  swap(interface_, other->interface_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInterfaceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[17]);
}

// ===================================================================

class DeleteInterfaceRequest::_Internal {
 public:
};

DeleteInterfaceRequest::DeleteInterfaceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
}
DeleteInterfaceRequest::DeleteInterfaceRequest(const DeleteInterfaceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
}

inline void DeleteInterfaceRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteInterfaceRequest::~DeleteInterfaceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteInterfaceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteInterfaceRequest::ArenaDtor(void* object) {
  DeleteInterfaceRequest* _this = reinterpret_cast< DeleteInterfaceRequest* >(object);
  (void)_this;
}
void DeleteInterfaceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteInterfaceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteInterfaceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteInterfaceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  return target;
}

size_t DeleteInterfaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteInterfaceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteInterfaceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteInterfaceRequest::GetClassData() const { return &_class_data_; }

void DeleteInterfaceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteInterfaceRequest *>(to)->MergeFrom(
      static_cast<const DeleteInterfaceRequest &>(from));
}


void DeleteInterfaceRequest::MergeFrom(const DeleteInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteInterfaceRequest::CopyFrom(const DeleteInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInterfaceRequest::IsInitialized() const {
  return true;
}

void DeleteInterfaceRequest::InternalSwap(DeleteInterfaceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteInterfaceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[18]);
}

// ===================================================================

class UpdateInterfaceRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Interface& interface(const UpdateInterfaceRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateInterfaceRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Interface&
UpdateInterfaceRequest::_Internal::interface(const UpdateInterfaceRequest* msg) {
  return *msg->interface_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateInterfaceRequest::_Internal::update_mask(const UpdateInterfaceRequest* msg) {
  return *msg->update_mask_;
}
void UpdateInterfaceRequest::clear_interface() {
  if (GetArenaForAllocation() == nullptr && interface_ != nullptr) {
    delete interface_;
  }
  interface_ = nullptr;
}
void UpdateInterfaceRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateInterfaceRequest::UpdateInterfaceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
}
UpdateInterfaceRequest::UpdateInterfaceRequest(const UpdateInterfaceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_interface()) {
    interface_ = new ::opi_api::network::cloud::v1alpha1::Interface(*from.interface_);
  } else {
    interface_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
}

inline void UpdateInterfaceRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&interface_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&interface_)) + sizeof(update_mask_));
}

UpdateInterfaceRequest::~UpdateInterfaceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateInterfaceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete interface_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateInterfaceRequest::ArenaDtor(void* object) {
  UpdateInterfaceRequest* _this = reinterpret_cast< UpdateInterfaceRequest* >(object);
  (void)_this;
}
void UpdateInterfaceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateInterfaceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && interface_ != nullptr) {
    delete interface_;
  }
  interface_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateInterfaceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Interface interface = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_interface(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateInterfaceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Interface interface = 1;
  if (this->_internal_has_interface()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::interface(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  return target;
}

size_t UpdateInterfaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Interface interface = 1;
  if (this->_internal_has_interface()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interface_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateInterfaceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateInterfaceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateInterfaceRequest::GetClassData() const { return &_class_data_; }

void UpdateInterfaceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateInterfaceRequest *>(to)->MergeFrom(
      static_cast<const UpdateInterfaceRequest &>(from));
}


void UpdateInterfaceRequest::MergeFrom(const UpdateInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_interface()) {
    _internal_mutable_interface()->::opi_api::network::cloud::v1alpha1::Interface::MergeFrom(from._internal_interface());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateInterfaceRequest::CopyFrom(const UpdateInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInterfaceRequest::IsInitialized() const {
  return true;
}

void UpdateInterfaceRequest::InternalSwap(UpdateInterfaceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, update_mask_)
      + sizeof(UpdateInterfaceRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, interface_)>(
          reinterpret_cast<char*>(&interface_),
          reinterpret_cast<char*>(&other->interface_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInterfaceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[19]);
}

// ===================================================================

class ListInterfacesRequest::_Internal {
 public:
};

ListInterfacesRequest::ListInterfacesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
}
ListInterfacesRequest::ListInterfacesRequest(const ListInterfacesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
}

inline void ListInterfacesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListInterfacesRequest::~ListInterfacesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListInterfacesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListInterfacesRequest::ArenaDtor(void* object) {
  ListInterfacesRequest* _this = reinterpret_cast< ListInterfacesRequest* >(object);
  (void)_this;
}
void ListInterfacesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListInterfacesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListInterfacesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListInterfacesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListInterfacesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListInterfacesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListInterfacesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListInterfacesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListInterfacesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  return target;
}

size_t ListInterfacesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListInterfacesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListInterfacesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListInterfacesRequest::GetClassData() const { return &_class_data_; }

void ListInterfacesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListInterfacesRequest *>(to)->MergeFrom(
      static_cast<const ListInterfacesRequest &>(from));
}


void ListInterfacesRequest::MergeFrom(const ListInterfacesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListInterfacesRequest::CopyFrom(const ListInterfacesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListInterfacesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInterfacesRequest::IsInitialized() const {
  return true;
}

void ListInterfacesRequest::InternalSwap(ListInterfacesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListInterfacesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[20]);
}

// ===================================================================

class ListInterfacesResponse::_Internal {
 public:
};

void ListInterfacesResponse::clear_interface() {
  interface_.Clear();
}
ListInterfacesResponse::ListInterfacesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  interface_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
}
ListInterfacesResponse::ListInterfacesResponse(const ListInterfacesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      interface_(from.interface_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
}

inline void ListInterfacesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListInterfacesResponse::~ListInterfacesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListInterfacesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListInterfacesResponse::ArenaDtor(void* object) {
  ListInterfacesResponse* _this = reinterpret_cast< ListInterfacesResponse* >(object);
  (void)_this;
}
void ListInterfacesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListInterfacesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListInterfacesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListInterfacesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Interface interface = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_interface(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListInterfacesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListInterfacesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Interface interface = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_interface_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_interface(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListInterfacesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  return target;
}

size_t ListInterfacesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Interface interface = 1;
  total_size += 1UL * this->_internal_interface_size();
  for (const auto& msg : this->interface_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListInterfacesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListInterfacesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListInterfacesResponse::GetClassData() const { return &_class_data_; }

void ListInterfacesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListInterfacesResponse *>(to)->MergeFrom(
      static_cast<const ListInterfacesResponse &>(from));
}


void ListInterfacesResponse::MergeFrom(const ListInterfacesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListInterfacesResponse::CopyFrom(const ListInterfacesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListInterfacesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListInterfacesResponse::IsInitialized() const {
  return true;
}

void ListInterfacesResponse::InternalSwap(ListInterfacesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  interface_.InternalSwap(&other->interface_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListInterfacesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[21]);
}

// ===================================================================

class GetInterfaceRequest::_Internal {
 public:
};

GetInterfaceRequest::GetInterfaceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
}
GetInterfaceRequest::GetInterfaceRequest(const GetInterfaceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
}

inline void GetInterfaceRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetInterfaceRequest::~GetInterfaceRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInterfaceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetInterfaceRequest::ArenaDtor(void* object) {
  GetInterfaceRequest* _this = reinterpret_cast< GetInterfaceRequest* >(object);
  (void)_this;
}
void GetInterfaceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInterfaceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInterfaceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetInterfaceRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInterfaceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetInterfaceRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  return target;
}

size_t GetInterfaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInterfaceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInterfaceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInterfaceRequest::GetClassData() const { return &_class_data_; }

void GetInterfaceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInterfaceRequest *>(to)->MergeFrom(
      static_cast<const GetInterfaceRequest &>(from));
}


void GetInterfaceRequest::MergeFrom(const GetInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInterfaceRequest::CopyFrom(const GetInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInterfaceRequest::IsInitialized() const {
  return true;
}

void GetInterfaceRequest::InternalSwap(GetInterfaceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInterfaceRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[22]);
}

// ===================================================================

class CreateRouteTableRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::RouteTable& routetable(const CreateRouteTableRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::RouteTable&
CreateRouteTableRequest::_Internal::routetable(const CreateRouteTableRequest* msg) {
  return *msg->routetable_;
}
void CreateRouteTableRequest::clear_routetable() {
  if (GetArenaForAllocation() == nullptr && routetable_ != nullptr) {
    delete routetable_;
  }
  routetable_ = nullptr;
}
CreateRouteTableRequest::CreateRouteTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
}
CreateRouteTableRequest::CreateRouteTableRequest(const CreateRouteTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  routetable_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    routetable_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_routetable_id().empty()) {
    routetable_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_routetable_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_routetable()) {
    routetable_ = new ::opi_api::network::cloud::v1alpha1::RouteTable(*from.routetable_);
  } else {
    routetable_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
}

inline void CreateRouteTableRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
routetable_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  routetable_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
routetable_ = nullptr;
}

CreateRouteTableRequest::~CreateRouteTableRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateRouteTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  routetable_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routetable_;
}

void CreateRouteTableRequest::ArenaDtor(void* object) {
  CreateRouteTableRequest* _this = reinterpret_cast< CreateRouteTableRequest* >(object);
  (void)_this;
}
void CreateRouteTableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRouteTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRouteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  routetable_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && routetable_ != nullptr) {
    delete routetable_;
  }
  routetable_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRouteTableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateRouteTableRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.RouteTable routetable = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_routetable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string routetable_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_routetable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateRouteTableRequest.routetable_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRouteTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateRouteTableRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.RouteTable routetable = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_routetable()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::routetable(this), target, stream);
  }

  // string routetable_id = 3;
  if (!this->_internal_routetable_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_routetable_id().data(), static_cast<int>(this->_internal_routetable_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateRouteTableRequest.routetable_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_routetable_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  return target;
}

size_t CreateRouteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string routetable_id = 3;
  if (!this->_internal_routetable_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_routetable_id());
  }

  // .opi_api.network.cloud.v1alpha1.RouteTable routetable = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_routetable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *routetable_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRouteTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRouteTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRouteTableRequest::GetClassData() const { return &_class_data_; }

void CreateRouteTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRouteTableRequest *>(to)->MergeFrom(
      static_cast<const CreateRouteTableRequest &>(from));
}


void CreateRouteTableRequest::MergeFrom(const CreateRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_routetable_id().empty()) {
    _internal_set_routetable_id(from._internal_routetable_id());
  }
  if (from._internal_has_routetable()) {
    _internal_mutable_routetable()->::opi_api::network::cloud::v1alpha1::RouteTable::MergeFrom(from._internal_routetable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRouteTableRequest::CopyFrom(const CreateRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateRouteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRouteTableRequest::IsInitialized() const {
  return true;
}

void CreateRouteTableRequest::InternalSwap(CreateRouteTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &routetable_id_, lhs_arena,
      &other->routetable_id_, rhs_arena
  );
  swap(routetable_, other->routetable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRouteTableRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[23]);
}

// ===================================================================

class DeleteRouteTableRequest::_Internal {
 public:
};

DeleteRouteTableRequest::DeleteRouteTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
}
DeleteRouteTableRequest::DeleteRouteTableRequest(const DeleteRouteTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
}

inline void DeleteRouteTableRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRouteTableRequest::~DeleteRouteTableRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRouteTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRouteTableRequest::ArenaDtor(void* object) {
  DeleteRouteTableRequest* _this = reinterpret_cast< DeleteRouteTableRequest* >(object);
  (void)_this;
}
void DeleteRouteTableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRouteTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRouteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRouteTableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRouteTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  return target;
}

size_t DeleteRouteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRouteTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRouteTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRouteTableRequest::GetClassData() const { return &_class_data_; }

void DeleteRouteTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRouteTableRequest *>(to)->MergeFrom(
      static_cast<const DeleteRouteTableRequest &>(from));
}


void DeleteRouteTableRequest::MergeFrom(const DeleteRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRouteTableRequest::CopyFrom(const DeleteRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteRouteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRouteTableRequest::IsInitialized() const {
  return true;
}

void DeleteRouteTableRequest::InternalSwap(DeleteRouteTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRouteTableRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[24]);
}

// ===================================================================

class UpdateRouteTableRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::RouteTable& routetable(const UpdateRouteTableRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateRouteTableRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::RouteTable&
UpdateRouteTableRequest::_Internal::routetable(const UpdateRouteTableRequest* msg) {
  return *msg->routetable_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateRouteTableRequest::_Internal::update_mask(const UpdateRouteTableRequest* msg) {
  return *msg->update_mask_;
}
void UpdateRouteTableRequest::clear_routetable() {
  if (GetArenaForAllocation() == nullptr && routetable_ != nullptr) {
    delete routetable_;
  }
  routetable_ = nullptr;
}
void UpdateRouteTableRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateRouteTableRequest::UpdateRouteTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
}
UpdateRouteTableRequest::UpdateRouteTableRequest(const UpdateRouteTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_routetable()) {
    routetable_ = new ::opi_api::network::cloud::v1alpha1::RouteTable(*from.routetable_);
  } else {
    routetable_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
}

inline void UpdateRouteTableRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&routetable_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&routetable_)) + sizeof(update_mask_));
}

UpdateRouteTableRequest::~UpdateRouteTableRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateRouteTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete routetable_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateRouteTableRequest::ArenaDtor(void* object) {
  UpdateRouteTableRequest* _this = reinterpret_cast< UpdateRouteTableRequest* >(object);
  (void)_this;
}
void UpdateRouteTableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRouteTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRouteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && routetable_ != nullptr) {
    delete routetable_;
  }
  routetable_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRouteTableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.RouteTable routetable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_routetable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRouteTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.RouteTable routetable = 1;
  if (this->_internal_has_routetable()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::routetable(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  return target;
}

size_t UpdateRouteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.RouteTable routetable = 1;
  if (this->_internal_has_routetable()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *routetable_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRouteTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRouteTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRouteTableRequest::GetClassData() const { return &_class_data_; }

void UpdateRouteTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRouteTableRequest *>(to)->MergeFrom(
      static_cast<const UpdateRouteTableRequest &>(from));
}


void UpdateRouteTableRequest::MergeFrom(const UpdateRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_routetable()) {
    _internal_mutable_routetable()->::opi_api::network::cloud::v1alpha1::RouteTable::MergeFrom(from._internal_routetable());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRouteTableRequest::CopyFrom(const UpdateRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateRouteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRouteTableRequest::IsInitialized() const {
  return true;
}

void UpdateRouteTableRequest::InternalSwap(UpdateRouteTableRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateRouteTableRequest, update_mask_)
      + sizeof(UpdateRouteTableRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateRouteTableRequest, routetable_)>(
          reinterpret_cast<char*>(&routetable_),
          reinterpret_cast<char*>(&other->routetable_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRouteTableRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[25]);
}

// ===================================================================

class ListRouteTablesRequest::_Internal {
 public:
};

ListRouteTablesRequest::ListRouteTablesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
}
ListRouteTablesRequest::ListRouteTablesRequest(const ListRouteTablesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
}

inline void ListRouteTablesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListRouteTablesRequest::~ListRouteTablesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRouteTablesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRouteTablesRequest::ArenaDtor(void* object) {
  ListRouteTablesRequest* _this = reinterpret_cast< ListRouteTablesRequest* >(object);
  (void)_this;
}
void ListRouteTablesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRouteTablesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRouteTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRouteTablesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListRouteTablesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListRouteTablesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRouteTablesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListRouteTablesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListRouteTablesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  return target;
}

size_t ListRouteTablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRouteTablesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRouteTablesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRouteTablesRequest::GetClassData() const { return &_class_data_; }

void ListRouteTablesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRouteTablesRequest *>(to)->MergeFrom(
      static_cast<const ListRouteTablesRequest &>(from));
}


void ListRouteTablesRequest::MergeFrom(const ListRouteTablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRouteTablesRequest::CopyFrom(const ListRouteTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListRouteTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRouteTablesRequest::IsInitialized() const {
  return true;
}

void ListRouteTablesRequest::InternalSwap(ListRouteTablesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRouteTablesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[26]);
}

// ===================================================================

class ListRouteTablesResponse::_Internal {
 public:
};

void ListRouteTablesResponse::clear_routetable() {
  routetable_.Clear();
}
ListRouteTablesResponse::ListRouteTablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  routetable_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
}
ListRouteTablesResponse::ListRouteTablesResponse(const ListRouteTablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      routetable_(from.routetable_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
}

inline void ListRouteTablesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRouteTablesResponse::~ListRouteTablesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRouteTablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRouteTablesResponse::ArenaDtor(void* object) {
  ListRouteTablesResponse* _this = reinterpret_cast< ListRouteTablesResponse* >(object);
  (void)_this;
}
void ListRouteTablesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRouteTablesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRouteTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routetable_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRouteTablesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.RouteTable routetable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_routetable(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListRouteTablesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRouteTablesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.RouteTable routetable = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_routetable_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_routetable(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListRouteTablesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  return target;
}

size_t ListRouteTablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.RouteTable routetable = 1;
  total_size += 1UL * this->_internal_routetable_size();
  for (const auto& msg : this->routetable_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRouteTablesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRouteTablesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRouteTablesResponse::GetClassData() const { return &_class_data_; }

void ListRouteTablesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRouteTablesResponse *>(to)->MergeFrom(
      static_cast<const ListRouteTablesResponse &>(from));
}


void ListRouteTablesResponse::MergeFrom(const ListRouteTablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  routetable_.MergeFrom(from.routetable_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRouteTablesResponse::CopyFrom(const ListRouteTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListRouteTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRouteTablesResponse::IsInitialized() const {
  return true;
}

void ListRouteTablesResponse::InternalSwap(ListRouteTablesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  routetable_.InternalSwap(&other->routetable_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRouteTablesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[27]);
}

// ===================================================================

class GetRouteTableRequest::_Internal {
 public:
};

GetRouteTableRequest::GetRouteTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
}
GetRouteTableRequest::GetRouteTableRequest(const GetRouteTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
}

inline void GetRouteTableRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRouteTableRequest::~GetRouteTableRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetRouteTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRouteTableRequest::ArenaDtor(void* object) {
  GetRouteTableRequest* _this = reinterpret_cast< GetRouteTableRequest* >(object);
  (void)_this;
}
void GetRouteTableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRouteTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRouteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRouteTableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetRouteTableRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRouteTableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetRouteTableRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  return target;
}

size_t GetRouteTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRouteTableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRouteTableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRouteTableRequest::GetClassData() const { return &_class_data_; }

void GetRouteTableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRouteTableRequest *>(to)->MergeFrom(
      static_cast<const GetRouteTableRequest &>(from));
}


void GetRouteTableRequest::MergeFrom(const GetRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRouteTableRequest::CopyFrom(const GetRouteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetRouteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRouteTableRequest::IsInitialized() const {
  return true;
}

void GetRouteTableRequest::InternalSwap(GetRouteTableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRouteTableRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[28]);
}

// ===================================================================

class CreateRouteRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Route& route(const CreateRouteRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Route&
CreateRouteRequest::_Internal::route(const CreateRouteRequest* msg) {
  return *msg->route_;
}
void CreateRouteRequest::clear_route() {
  if (GetArenaForAllocation() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
CreateRouteRequest::CreateRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
}
CreateRouteRequest::CreateRouteRequest(const CreateRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  route_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    route_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_route_id().empty()) {
    route_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_route_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_route()) {
    route_ = new ::opi_api::network::cloud::v1alpha1::Route(*from.route_);
  } else {
    route_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
}

inline void CreateRouteRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
route_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  route_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
route_ = nullptr;
}

CreateRouteRequest::~CreateRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  route_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_;
}

void CreateRouteRequest::ArenaDtor(void* object) {
  CreateRouteRequest* _this = reinterpret_cast< CreateRouteRequest* >(object);
  (void)_this;
}
void CreateRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  route_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateRouteRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Route route = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_route(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string route_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_route_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateRouteRequest.route_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateRouteRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Route route = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_route()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::route(this), target, stream);
  }

  // string route_id = 3;
  if (!this->_internal_route_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_route_id().data(), static_cast<int>(this->_internal_route_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateRouteRequest.route_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_route_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  return target;
}

size_t CreateRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string route_id = 3;
  if (!this->_internal_route_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_route_id());
  }

  // .opi_api.network.cloud.v1alpha1.Route route = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_route()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *route_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRouteRequest::GetClassData() const { return &_class_data_; }

void CreateRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRouteRequest *>(to)->MergeFrom(
      static_cast<const CreateRouteRequest &>(from));
}


void CreateRouteRequest::MergeFrom(const CreateRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_route_id().empty()) {
    _internal_set_route_id(from._internal_route_id());
  }
  if (from._internal_has_route()) {
    _internal_mutable_route()->::opi_api::network::cloud::v1alpha1::Route::MergeFrom(from._internal_route());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRouteRequest::CopyFrom(const CreateRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRouteRequest::IsInitialized() const {
  return true;
}

void CreateRouteRequest::InternalSwap(CreateRouteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &route_id_, lhs_arena,
      &other->route_id_, rhs_arena
  );
  swap(route_, other->route_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[29]);
}

// ===================================================================

class DeleteRouteRequest::_Internal {
 public:
};

DeleteRouteRequest::DeleteRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
}
DeleteRouteRequest::DeleteRouteRequest(const DeleteRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
}

inline void DeleteRouteRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRouteRequest::~DeleteRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRouteRequest::ArenaDtor(void* object) {
  DeleteRouteRequest* _this = reinterpret_cast< DeleteRouteRequest* >(object);
  (void)_this;
}
void DeleteRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteRouteRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteRouteRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  return target;
}

size_t DeleteRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRouteRequest::GetClassData() const { return &_class_data_; }

void DeleteRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRouteRequest *>(to)->MergeFrom(
      static_cast<const DeleteRouteRequest &>(from));
}


void DeleteRouteRequest::MergeFrom(const DeleteRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRouteRequest::CopyFrom(const DeleteRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRouteRequest::IsInitialized() const {
  return true;
}

void DeleteRouteRequest::InternalSwap(DeleteRouteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[30]);
}

// ===================================================================

class UpdateRouteRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Route& route(const UpdateRouteRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateRouteRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Route&
UpdateRouteRequest::_Internal::route(const UpdateRouteRequest* msg) {
  return *msg->route_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateRouteRequest::_Internal::update_mask(const UpdateRouteRequest* msg) {
  return *msg->update_mask_;
}
void UpdateRouteRequest::clear_route() {
  if (GetArenaForAllocation() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
void UpdateRouteRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateRouteRequest::UpdateRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
}
UpdateRouteRequest::UpdateRouteRequest(const UpdateRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_route()) {
    route_ = new ::opi_api::network::cloud::v1alpha1::Route(*from.route_);
  } else {
    route_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
}

inline void UpdateRouteRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&route_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&route_)) + sizeof(update_mask_));
}

UpdateRouteRequest::~UpdateRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete route_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateRouteRequest::ArenaDtor(void* object) {
  UpdateRouteRequest* _this = reinterpret_cast< UpdateRouteRequest* >(object);
  (void)_this;
}
void UpdateRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Route route = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_route(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Route route = 1;
  if (this->_internal_has_route()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::route(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  return target;
}

size_t UpdateRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Route route = 1;
  if (this->_internal_has_route()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRouteRequest::GetClassData() const { return &_class_data_; }

void UpdateRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRouteRequest *>(to)->MergeFrom(
      static_cast<const UpdateRouteRequest &>(from));
}


void UpdateRouteRequest::MergeFrom(const UpdateRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_route()) {
    _internal_mutable_route()->::opi_api::network::cloud::v1alpha1::Route::MergeFrom(from._internal_route());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRouteRequest::CopyFrom(const UpdateRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRouteRequest::IsInitialized() const {
  return true;
}

void UpdateRouteRequest::InternalSwap(UpdateRouteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateRouteRequest, update_mask_)
      + sizeof(UpdateRouteRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateRouteRequest, route_)>(
          reinterpret_cast<char*>(&route_),
          reinterpret_cast<char*>(&other->route_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[31]);
}

// ===================================================================

class ListRoutesRequest::_Internal {
 public:
};

ListRoutesRequest::ListRoutesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
}
ListRoutesRequest::ListRoutesRequest(const ListRoutesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
}

inline void ListRoutesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListRoutesRequest::~ListRoutesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRoutesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRoutesRequest::ArenaDtor(void* object) {
  ListRoutesRequest* _this = reinterpret_cast< ListRoutesRequest* >(object);
  (void)_this;
}
void ListRoutesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRoutesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRoutesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRoutesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListRoutesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListRoutesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRoutesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListRoutesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListRoutesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  return target;
}

size_t ListRoutesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRoutesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRoutesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRoutesRequest::GetClassData() const { return &_class_data_; }

void ListRoutesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRoutesRequest *>(to)->MergeFrom(
      static_cast<const ListRoutesRequest &>(from));
}


void ListRoutesRequest::MergeFrom(const ListRoutesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRoutesRequest::CopyFrom(const ListRoutesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListRoutesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRoutesRequest::IsInitialized() const {
  return true;
}

void ListRoutesRequest::InternalSwap(ListRoutesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRoutesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[32]);
}

// ===================================================================

class ListRoutesResponse::_Internal {
 public:
};

void ListRoutesResponse::clear_route() {
  route_.Clear();
}
ListRoutesResponse::ListRoutesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  route_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
}
ListRoutesResponse::ListRoutesResponse(const ListRoutesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      route_(from.route_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
}

inline void ListRoutesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRoutesResponse::~ListRoutesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRoutesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRoutesResponse::ArenaDtor(void* object) {
  ListRoutesResponse* _this = reinterpret_cast< ListRoutesResponse* >(object);
  (void)_this;
}
void ListRoutesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRoutesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRoutesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRoutesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Route route = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_route(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListRoutesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRoutesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Route route = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_route_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_route(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListRoutesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  return target;
}

size_t ListRoutesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Route route = 1;
  total_size += 1UL * this->_internal_route_size();
  for (const auto& msg : this->route_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRoutesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRoutesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRoutesResponse::GetClassData() const { return &_class_data_; }

void ListRoutesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRoutesResponse *>(to)->MergeFrom(
      static_cast<const ListRoutesResponse &>(from));
}


void ListRoutesResponse::MergeFrom(const ListRoutesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  route_.MergeFrom(from.route_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRoutesResponse::CopyFrom(const ListRoutesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListRoutesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRoutesResponse::IsInitialized() const {
  return true;
}

void ListRoutesResponse::InternalSwap(ListRoutesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  route_.InternalSwap(&other->route_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRoutesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[33]);
}

// ===================================================================

class GetRouteRequest::_Internal {
 public:
};

GetRouteRequest::GetRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetRouteRequest)
}
GetRouteRequest::GetRouteRequest(const GetRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetRouteRequest)
}

inline void GetRouteRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRouteRequest::~GetRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRouteRequest::ArenaDtor(void* object) {
  GetRouteRequest* _this = reinterpret_cast< GetRouteRequest* >(object);
  (void)_this;
}
void GetRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetRouteRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetRouteRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  return target;
}

size_t GetRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRouteRequest::GetClassData() const { return &_class_data_; }

void GetRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRouteRequest *>(to)->MergeFrom(
      static_cast<const GetRouteRequest &>(from));
}


void GetRouteRequest::MergeFrom(const GetRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRouteRequest::CopyFrom(const GetRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRouteRequest::IsInitialized() const {
  return true;
}

void GetRouteRequest::InternalSwap(GetRouteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[34]);
}

// ===================================================================

class CreateUnderlayRouteRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::UnderlayRoute& underlayroute(const CreateUnderlayRouteRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::UnderlayRoute&
CreateUnderlayRouteRequest::_Internal::underlayroute(const CreateUnderlayRouteRequest* msg) {
  return *msg->underlayroute_;
}
void CreateUnderlayRouteRequest::clear_underlayroute() {
  if (GetArenaForAllocation() == nullptr && underlayroute_ != nullptr) {
    delete underlayroute_;
  }
  underlayroute_ = nullptr;
}
CreateUnderlayRouteRequest::CreateUnderlayRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
}
CreateUnderlayRouteRequest::CreateUnderlayRouteRequest(const CreateUnderlayRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  underlayroute_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    underlayroute_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_underlayroute_id().empty()) {
    underlayroute_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_underlayroute_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_underlayroute()) {
    underlayroute_ = new ::opi_api::network::cloud::v1alpha1::UnderlayRoute(*from.underlayroute_);
  } else {
    underlayroute_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
}

inline void CreateUnderlayRouteRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
underlayroute_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  underlayroute_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
underlayroute_ = nullptr;
}

CreateUnderlayRouteRequest::~CreateUnderlayRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateUnderlayRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  underlayroute_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete underlayroute_;
}

void CreateUnderlayRouteRequest::ArenaDtor(void* object) {
  CreateUnderlayRouteRequest* _this = reinterpret_cast< CreateUnderlayRouteRequest* >(object);
  (void)_this;
}
void CreateUnderlayRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateUnderlayRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateUnderlayRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  underlayroute_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && underlayroute_ != nullptr) {
    delete underlayroute_;
  }
  underlayroute_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateUnderlayRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_underlayroute(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string underlayroute_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_underlayroute_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest.underlayroute_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateUnderlayRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_underlayroute()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::underlayroute(this), target, stream);
  }

  // string underlayroute_id = 3;
  if (!this->_internal_underlayroute_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_underlayroute_id().data(), static_cast<int>(this->_internal_underlayroute_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest.underlayroute_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_underlayroute_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  return target;
}

size_t CreateUnderlayRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string underlayroute_id = 3;
  if (!this->_internal_underlayroute_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_underlayroute_id());
  }

  // .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_underlayroute()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *underlayroute_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateUnderlayRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateUnderlayRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateUnderlayRouteRequest::GetClassData() const { return &_class_data_; }

void CreateUnderlayRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateUnderlayRouteRequest *>(to)->MergeFrom(
      static_cast<const CreateUnderlayRouteRequest &>(from));
}


void CreateUnderlayRouteRequest::MergeFrom(const CreateUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_underlayroute_id().empty()) {
    _internal_set_underlayroute_id(from._internal_underlayroute_id());
  }
  if (from._internal_has_underlayroute()) {
    _internal_mutable_underlayroute()->::opi_api::network::cloud::v1alpha1::UnderlayRoute::MergeFrom(from._internal_underlayroute());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUnderlayRouteRequest::CopyFrom(const CreateUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateUnderlayRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUnderlayRouteRequest::IsInitialized() const {
  return true;
}

void CreateUnderlayRouteRequest::InternalSwap(CreateUnderlayRouteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &underlayroute_id_, lhs_arena,
      &other->underlayroute_id_, rhs_arena
  );
  swap(underlayroute_, other->underlayroute_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateUnderlayRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[35]);
}

// ===================================================================

class DeleteUnderlayRouteRequest::_Internal {
 public:
};

DeleteUnderlayRouteRequest::DeleteUnderlayRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
}
DeleteUnderlayRouteRequest::DeleteUnderlayRouteRequest(const DeleteUnderlayRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
}

inline void DeleteUnderlayRouteRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteUnderlayRouteRequest::~DeleteUnderlayRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteUnderlayRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteUnderlayRouteRequest::ArenaDtor(void* object) {
  DeleteUnderlayRouteRequest* _this = reinterpret_cast< DeleteUnderlayRouteRequest* >(object);
  (void)_this;
}
void DeleteUnderlayRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteUnderlayRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteUnderlayRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUnderlayRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteUnderlayRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  return target;
}

size_t DeleteUnderlayRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUnderlayRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteUnderlayRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUnderlayRouteRequest::GetClassData() const { return &_class_data_; }

void DeleteUnderlayRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteUnderlayRouteRequest *>(to)->MergeFrom(
      static_cast<const DeleteUnderlayRouteRequest &>(from));
}


void DeleteUnderlayRouteRequest::MergeFrom(const DeleteUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUnderlayRouteRequest::CopyFrom(const DeleteUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteUnderlayRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUnderlayRouteRequest::IsInitialized() const {
  return true;
}

void DeleteUnderlayRouteRequest::InternalSwap(DeleteUnderlayRouteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUnderlayRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[36]);
}

// ===================================================================

class UpdateUnderlayRouteRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::UnderlayRoute& underlayroute(const UpdateUnderlayRouteRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateUnderlayRouteRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::UnderlayRoute&
UpdateUnderlayRouteRequest::_Internal::underlayroute(const UpdateUnderlayRouteRequest* msg) {
  return *msg->underlayroute_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateUnderlayRouteRequest::_Internal::update_mask(const UpdateUnderlayRouteRequest* msg) {
  return *msg->update_mask_;
}
void UpdateUnderlayRouteRequest::clear_underlayroute() {
  if (GetArenaForAllocation() == nullptr && underlayroute_ != nullptr) {
    delete underlayroute_;
  }
  underlayroute_ = nullptr;
}
void UpdateUnderlayRouteRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateUnderlayRouteRequest::UpdateUnderlayRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
}
UpdateUnderlayRouteRequest::UpdateUnderlayRouteRequest(const UpdateUnderlayRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_underlayroute()) {
    underlayroute_ = new ::opi_api::network::cloud::v1alpha1::UnderlayRoute(*from.underlayroute_);
  } else {
    underlayroute_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
}

inline void UpdateUnderlayRouteRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&underlayroute_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&underlayroute_)) + sizeof(update_mask_));
}

UpdateUnderlayRouteRequest::~UpdateUnderlayRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateUnderlayRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete underlayroute_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateUnderlayRouteRequest::ArenaDtor(void* object) {
  UpdateUnderlayRouteRequest* _this = reinterpret_cast< UpdateUnderlayRouteRequest* >(object);
  (void)_this;
}
void UpdateUnderlayRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateUnderlayRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateUnderlayRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && underlayroute_ != nullptr) {
    delete underlayroute_;
  }
  underlayroute_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateUnderlayRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_underlayroute(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateUnderlayRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 1;
  if (this->_internal_has_underlayroute()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::underlayroute(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  return target;
}

size_t UpdateUnderlayRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 1;
  if (this->_internal_has_underlayroute()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *underlayroute_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateUnderlayRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateUnderlayRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateUnderlayRouteRequest::GetClassData() const { return &_class_data_; }

void UpdateUnderlayRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateUnderlayRouteRequest *>(to)->MergeFrom(
      static_cast<const UpdateUnderlayRouteRequest &>(from));
}


void UpdateUnderlayRouteRequest::MergeFrom(const UpdateUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_underlayroute()) {
    _internal_mutable_underlayroute()->::opi_api::network::cloud::v1alpha1::UnderlayRoute::MergeFrom(from._internal_underlayroute());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUnderlayRouteRequest::CopyFrom(const UpdateUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateUnderlayRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUnderlayRouteRequest::IsInitialized() const {
  return true;
}

void UpdateUnderlayRouteRequest::InternalSwap(UpdateUnderlayRouteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateUnderlayRouteRequest, update_mask_)
      + sizeof(UpdateUnderlayRouteRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateUnderlayRouteRequest, underlayroute_)>(
          reinterpret_cast<char*>(&underlayroute_),
          reinterpret_cast<char*>(&other->underlayroute_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateUnderlayRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[37]);
}

// ===================================================================

class ListUnderlayRoutesRequest::_Internal {
 public:
};

ListUnderlayRoutesRequest::ListUnderlayRoutesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
}
ListUnderlayRoutesRequest::ListUnderlayRoutesRequest(const ListUnderlayRoutesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
}

inline void ListUnderlayRoutesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListUnderlayRoutesRequest::~ListUnderlayRoutesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListUnderlayRoutesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListUnderlayRoutesRequest::ArenaDtor(void* object) {
  ListUnderlayRoutesRequest* _this = reinterpret_cast< ListUnderlayRoutesRequest* >(object);
  (void)_this;
}
void ListUnderlayRoutesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListUnderlayRoutesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListUnderlayRoutesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListUnderlayRoutesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListUnderlayRoutesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  return target;
}

size_t ListUnderlayRoutesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListUnderlayRoutesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListUnderlayRoutesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListUnderlayRoutesRequest::GetClassData() const { return &_class_data_; }

void ListUnderlayRoutesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListUnderlayRoutesRequest *>(to)->MergeFrom(
      static_cast<const ListUnderlayRoutesRequest &>(from));
}


void ListUnderlayRoutesRequest::MergeFrom(const ListUnderlayRoutesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListUnderlayRoutesRequest::CopyFrom(const ListUnderlayRoutesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUnderlayRoutesRequest::IsInitialized() const {
  return true;
}

void ListUnderlayRoutesRequest::InternalSwap(ListUnderlayRoutesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListUnderlayRoutesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[38]);
}

// ===================================================================

class ListUnderlayRoutesResponse::_Internal {
 public:
};

void ListUnderlayRoutesResponse::clear_underlayroute() {
  underlayroute_.Clear();
}
ListUnderlayRoutesResponse::ListUnderlayRoutesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  underlayroute_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
}
ListUnderlayRoutesResponse::ListUnderlayRoutesResponse(const ListUnderlayRoutesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      underlayroute_(from.underlayroute_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
}

inline void ListUnderlayRoutesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListUnderlayRoutesResponse::~ListUnderlayRoutesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListUnderlayRoutesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListUnderlayRoutesResponse::ArenaDtor(void* object) {
  ListUnderlayRoutesResponse* _this = reinterpret_cast< ListUnderlayRoutesResponse* >(object);
  (void)_this;
}
void ListUnderlayRoutesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListUnderlayRoutesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListUnderlayRoutesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  underlayroute_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListUnderlayRoutesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_underlayroute(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListUnderlayRoutesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_underlayroute_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_underlayroute(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  return target;
}

size_t ListUnderlayRoutesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.UnderlayRoute underlayroute = 1;
  total_size += 1UL * this->_internal_underlayroute_size();
  for (const auto& msg : this->underlayroute_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListUnderlayRoutesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListUnderlayRoutesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListUnderlayRoutesResponse::GetClassData() const { return &_class_data_; }

void ListUnderlayRoutesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListUnderlayRoutesResponse *>(to)->MergeFrom(
      static_cast<const ListUnderlayRoutesResponse &>(from));
}


void ListUnderlayRoutesResponse::MergeFrom(const ListUnderlayRoutesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  underlayroute_.MergeFrom(from.underlayroute_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListUnderlayRoutesResponse::CopyFrom(const ListUnderlayRoutesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListUnderlayRoutesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUnderlayRoutesResponse::IsInitialized() const {
  return true;
}

void ListUnderlayRoutesResponse::InternalSwap(ListUnderlayRoutesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  underlayroute_.InternalSwap(&other->underlayroute_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListUnderlayRoutesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[39]);
}

// ===================================================================

class GetUnderlayRouteRequest::_Internal {
 public:
};

GetUnderlayRouteRequest::GetUnderlayRouteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
}
GetUnderlayRouteRequest::GetUnderlayRouteRequest(const GetUnderlayRouteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
}

inline void GetUnderlayRouteRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUnderlayRouteRequest::~GetUnderlayRouteRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetUnderlayRouteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetUnderlayRouteRequest::ArenaDtor(void* object) {
  GetUnderlayRouteRequest* _this = reinterpret_cast< GetUnderlayRouteRequest* >(object);
  (void)_this;
}
void GetUnderlayRouteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetUnderlayRouteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUnderlayRouteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUnderlayRouteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUnderlayRouteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  return target;
}

size_t GetUnderlayRouteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUnderlayRouteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUnderlayRouteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUnderlayRouteRequest::GetClassData() const { return &_class_data_; }

void GetUnderlayRouteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUnderlayRouteRequest *>(to)->MergeFrom(
      static_cast<const GetUnderlayRouteRequest &>(from));
}


void GetUnderlayRouteRequest::MergeFrom(const GetUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUnderlayRouteRequest::CopyFrom(const GetUnderlayRouteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetUnderlayRouteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUnderlayRouteRequest::IsInitialized() const {
  return true;
}

void GetUnderlayRouteRequest::InternalSwap(GetUnderlayRouteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUnderlayRouteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[40]);
}

// ===================================================================

class CreateBgpRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Bgp& bgp(const CreateBgpRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Bgp&
CreateBgpRequest::_Internal::bgp(const CreateBgpRequest* msg) {
  return *msg->bgp_;
}
void CreateBgpRequest::clear_bgp() {
  if (GetArenaForAllocation() == nullptr && bgp_ != nullptr) {
    delete bgp_;
  }
  bgp_ = nullptr;
}
CreateBgpRequest::CreateBgpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
}
CreateBgpRequest::CreateBgpRequest(const CreateBgpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  bgp_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bgp_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bgp_id().empty()) {
    bgp_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bgp_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_bgp()) {
    bgp_ = new ::opi_api::network::cloud::v1alpha1::Bgp(*from.bgp_);
  } else {
    bgp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
}

inline void CreateBgpRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bgp_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bgp_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bgp_ = nullptr;
}

CreateBgpRequest::~CreateBgpRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateBgpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bgp_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bgp_;
}

void CreateBgpRequest::ArenaDtor(void* object) {
  CreateBgpRequest* _this = reinterpret_cast< CreateBgpRequest* >(object);
  (void)_this;
}
void CreateBgpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateBgpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateBgpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  bgp_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && bgp_ != nullptr) {
    delete bgp_;
  }
  bgp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateBgpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateBgpRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Bgp bgp = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bgp_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_bgp_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateBgpRequest.bgp_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateBgpRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateBgpRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Bgp bgp = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_bgp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::bgp(this), target, stream);
  }

  // string bgp_id = 3;
  if (!this->_internal_bgp_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bgp_id().data(), static_cast<int>(this->_internal_bgp_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateBgpRequest.bgp_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bgp_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  return target;
}

size_t CreateBgpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string bgp_id = 3;
  if (!this->_internal_bgp_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bgp_id());
  }

  // .opi_api.network.cloud.v1alpha1.Bgp bgp = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_bgp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgp_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateBgpRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateBgpRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateBgpRequest::GetClassData() const { return &_class_data_; }

void CreateBgpRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateBgpRequest *>(to)->MergeFrom(
      static_cast<const CreateBgpRequest &>(from));
}


void CreateBgpRequest::MergeFrom(const CreateBgpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_bgp_id().empty()) {
    _internal_set_bgp_id(from._internal_bgp_id());
  }
  if (from._internal_has_bgp()) {
    _internal_mutable_bgp()->::opi_api::network::cloud::v1alpha1::Bgp::MergeFrom(from._internal_bgp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBgpRequest::CopyFrom(const CreateBgpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateBgpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBgpRequest::IsInitialized() const {
  return true;
}

void CreateBgpRequest::InternalSwap(CreateBgpRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bgp_id_, lhs_arena,
      &other->bgp_id_, rhs_arena
  );
  swap(bgp_, other->bgp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateBgpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[41]);
}

// ===================================================================

class DeleteBgpRequest::_Internal {
 public:
};

DeleteBgpRequest::DeleteBgpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
}
DeleteBgpRequest::DeleteBgpRequest(const DeleteBgpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
}

inline void DeleteBgpRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteBgpRequest::~DeleteBgpRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteBgpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteBgpRequest::ArenaDtor(void* object) {
  DeleteBgpRequest* _this = reinterpret_cast< DeleteBgpRequest* >(object);
  (void)_this;
}
void DeleteBgpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteBgpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteBgpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteBgpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteBgpRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteBgpRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteBgpRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  return target;
}

size_t DeleteBgpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteBgpRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteBgpRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteBgpRequest::GetClassData() const { return &_class_data_; }

void DeleteBgpRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteBgpRequest *>(to)->MergeFrom(
      static_cast<const DeleteBgpRequest &>(from));
}


void DeleteBgpRequest::MergeFrom(const DeleteBgpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteBgpRequest::CopyFrom(const DeleteBgpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteBgpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBgpRequest::IsInitialized() const {
  return true;
}

void DeleteBgpRequest::InternalSwap(DeleteBgpRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteBgpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[42]);
}

// ===================================================================

class UpdateBgpRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Bgp& bgp(const UpdateBgpRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateBgpRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Bgp&
UpdateBgpRequest::_Internal::bgp(const UpdateBgpRequest* msg) {
  return *msg->bgp_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateBgpRequest::_Internal::update_mask(const UpdateBgpRequest* msg) {
  return *msg->update_mask_;
}
void UpdateBgpRequest::clear_bgp() {
  if (GetArenaForAllocation() == nullptr && bgp_ != nullptr) {
    delete bgp_;
  }
  bgp_ = nullptr;
}
void UpdateBgpRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateBgpRequest::UpdateBgpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
}
UpdateBgpRequest::UpdateBgpRequest(const UpdateBgpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bgp()) {
    bgp_ = new ::opi_api::network::cloud::v1alpha1::Bgp(*from.bgp_);
  } else {
    bgp_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
}

inline void UpdateBgpRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bgp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&bgp_)) + sizeof(update_mask_));
}

UpdateBgpRequest::~UpdateBgpRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateBgpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete bgp_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateBgpRequest::ArenaDtor(void* object) {
  UpdateBgpRequest* _this = reinterpret_cast< UpdateBgpRequest* >(object);
  (void)_this;
}
void UpdateBgpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateBgpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateBgpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && bgp_ != nullptr) {
    delete bgp_;
  }
  bgp_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBgpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Bgp bgp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateBgpRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Bgp bgp = 1;
  if (this->_internal_has_bgp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bgp(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  return target;
}

size_t UpdateBgpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Bgp bgp = 1;
  if (this->_internal_has_bgp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgp_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBgpRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateBgpRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBgpRequest::GetClassData() const { return &_class_data_; }

void UpdateBgpRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateBgpRequest *>(to)->MergeFrom(
      static_cast<const UpdateBgpRequest &>(from));
}


void UpdateBgpRequest::MergeFrom(const UpdateBgpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bgp()) {
    _internal_mutable_bgp()->::opi_api::network::cloud::v1alpha1::Bgp::MergeFrom(from._internal_bgp());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBgpRequest::CopyFrom(const UpdateBgpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateBgpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBgpRequest::IsInitialized() const {
  return true;
}

void UpdateBgpRequest::InternalSwap(UpdateBgpRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateBgpRequest, update_mask_)
      + sizeof(UpdateBgpRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateBgpRequest, bgp_)>(
          reinterpret_cast<char*>(&bgp_),
          reinterpret_cast<char*>(&other->bgp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBgpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[43]);
}

// ===================================================================

class ListBgpsRequest::_Internal {
 public:
};

ListBgpsRequest::ListBgpsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
}
ListBgpsRequest::ListBgpsRequest(const ListBgpsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
}

inline void ListBgpsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListBgpsRequest::~ListBgpsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListBgpsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBgpsRequest::ArenaDtor(void* object) {
  ListBgpsRequest* _this = reinterpret_cast< ListBgpsRequest* >(object);
  (void)_this;
}
void ListBgpsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBgpsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListBgpsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBgpsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBgpsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBgpsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBgpsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBgpsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBgpsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  return target;
}

size_t ListBgpsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBgpsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListBgpsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBgpsRequest::GetClassData() const { return &_class_data_; }

void ListBgpsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListBgpsRequest *>(to)->MergeFrom(
      static_cast<const ListBgpsRequest &>(from));
}


void ListBgpsRequest::MergeFrom(const ListBgpsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBgpsRequest::CopyFrom(const ListBgpsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListBgpsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBgpsRequest::IsInitialized() const {
  return true;
}

void ListBgpsRequest::InternalSwap(ListBgpsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBgpsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[44]);
}

// ===================================================================

class ListBgpsResponse::_Internal {
 public:
};

void ListBgpsResponse::clear_bgp() {
  bgp_.Clear();
}
ListBgpsResponse::ListBgpsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bgp_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
}
ListBgpsResponse::ListBgpsResponse(const ListBgpsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bgp_(from.bgp_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
}

inline void ListBgpsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListBgpsResponse::~ListBgpsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListBgpsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBgpsResponse::ArenaDtor(void* object) {
  ListBgpsResponse* _this = reinterpret_cast< ListBgpsResponse* >(object);
  (void)_this;
}
void ListBgpsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBgpsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListBgpsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bgp_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBgpsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Bgp bgp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bgp(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBgpsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBgpsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Bgp bgp = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bgp_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_bgp(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBgpsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  return target;
}

size_t ListBgpsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Bgp bgp = 1;
  total_size += 1UL * this->_internal_bgp_size();
  for (const auto& msg : this->bgp_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBgpsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListBgpsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBgpsResponse::GetClassData() const { return &_class_data_; }

void ListBgpsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListBgpsResponse *>(to)->MergeFrom(
      static_cast<const ListBgpsResponse &>(from));
}


void ListBgpsResponse::MergeFrom(const ListBgpsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bgp_.MergeFrom(from.bgp_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBgpsResponse::CopyFrom(const ListBgpsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListBgpsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBgpsResponse::IsInitialized() const {
  return true;
}

void ListBgpsResponse::InternalSwap(ListBgpsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bgp_.InternalSwap(&other->bgp_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBgpsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[45]);
}

// ===================================================================

class GetBgpRequest::_Internal {
 public:
};

GetBgpRequest::GetBgpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetBgpRequest)
}
GetBgpRequest::GetBgpRequest(const GetBgpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetBgpRequest)
}

inline void GetBgpRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBgpRequest::~GetBgpRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBgpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBgpRequest::ArenaDtor(void* object) {
  GetBgpRequest* _this = reinterpret_cast< GetBgpRequest* >(object);
  (void)_this;
}
void GetBgpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBgpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBgpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBgpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetBgpRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBgpRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetBgpRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  return target;
}

size_t GetBgpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBgpRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBgpRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBgpRequest::GetClassData() const { return &_class_data_; }

void GetBgpRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBgpRequest *>(to)->MergeFrom(
      static_cast<const GetBgpRequest &>(from));
}


void GetBgpRequest::MergeFrom(const GetBgpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBgpRequest::CopyFrom(const GetBgpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetBgpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBgpRequest::IsInitialized() const {
  return true;
}

void GetBgpRequest::InternalSwap(GetBgpRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBgpRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[46]);
}

// ===================================================================

class CreateBGPPeerRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::BGPPeer& bgppeer(const CreateBGPPeerRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::BGPPeer&
CreateBGPPeerRequest::_Internal::bgppeer(const CreateBGPPeerRequest* msg) {
  return *msg->bgppeer_;
}
void CreateBGPPeerRequest::clear_bgppeer() {
  if (GetArenaForAllocation() == nullptr && bgppeer_ != nullptr) {
    delete bgppeer_;
  }
  bgppeer_ = nullptr;
}
CreateBGPPeerRequest::CreateBGPPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
}
CreateBGPPeerRequest::CreateBGPPeerRequest(const CreateBGPPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  bgppeer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bgppeer_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bgppeer_id().empty()) {
    bgppeer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bgppeer_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_bgppeer()) {
    bgppeer_ = new ::opi_api::network::cloud::v1alpha1::BGPPeer(*from.bgppeer_);
  } else {
    bgppeer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
}

inline void CreateBGPPeerRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bgppeer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bgppeer_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bgppeer_ = nullptr;
}

CreateBGPPeerRequest::~CreateBGPPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateBGPPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bgppeer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bgppeer_;
}

void CreateBGPPeerRequest::ArenaDtor(void* object) {
  CreateBGPPeerRequest* _this = reinterpret_cast< CreateBGPPeerRequest* >(object);
  (void)_this;
}
void CreateBGPPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateBGPPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateBGPPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  bgppeer_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && bgppeer_ != nullptr) {
    delete bgppeer_;
  }
  bgppeer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateBGPPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgppeer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bgppeer_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_bgppeer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest.bgppeer_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateBGPPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_bgppeer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::bgppeer(this), target, stream);
  }

  // string bgppeer_id = 3;
  if (!this->_internal_bgppeer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bgppeer_id().data(), static_cast<int>(this->_internal_bgppeer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest.bgppeer_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bgppeer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  return target;
}

size_t CreateBGPPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string bgppeer_id = 3;
  if (!this->_internal_bgppeer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bgppeer_id());
  }

  // .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_bgppeer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgppeer_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateBGPPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateBGPPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateBGPPeerRequest::GetClassData() const { return &_class_data_; }

void CreateBGPPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateBGPPeerRequest *>(to)->MergeFrom(
      static_cast<const CreateBGPPeerRequest &>(from));
}


void CreateBGPPeerRequest::MergeFrom(const CreateBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_bgppeer_id().empty()) {
    _internal_set_bgppeer_id(from._internal_bgppeer_id());
  }
  if (from._internal_has_bgppeer()) {
    _internal_mutable_bgppeer()->::opi_api::network::cloud::v1alpha1::BGPPeer::MergeFrom(from._internal_bgppeer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBGPPeerRequest::CopyFrom(const CreateBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBGPPeerRequest::IsInitialized() const {
  return true;
}

void CreateBGPPeerRequest::InternalSwap(CreateBGPPeerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bgppeer_id_, lhs_arena,
      &other->bgppeer_id_, rhs_arena
  );
  swap(bgppeer_, other->bgppeer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateBGPPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[47]);
}

// ===================================================================

class DeleteBGPPeerRequest::_Internal {
 public:
};

DeleteBGPPeerRequest::DeleteBGPPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
}
DeleteBGPPeerRequest::DeleteBGPPeerRequest(const DeleteBGPPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
}

inline void DeleteBGPPeerRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteBGPPeerRequest::~DeleteBGPPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteBGPPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteBGPPeerRequest::ArenaDtor(void* object) {
  DeleteBGPPeerRequest* _this = reinterpret_cast< DeleteBGPPeerRequest* >(object);
  (void)_this;
}
void DeleteBGPPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteBGPPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteBGPPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteBGPPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteBGPPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  return target;
}

size_t DeleteBGPPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteBGPPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteBGPPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteBGPPeerRequest::GetClassData() const { return &_class_data_; }

void DeleteBGPPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteBGPPeerRequest *>(to)->MergeFrom(
      static_cast<const DeleteBGPPeerRequest &>(from));
}


void DeleteBGPPeerRequest::MergeFrom(const DeleteBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteBGPPeerRequest::CopyFrom(const DeleteBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBGPPeerRequest::IsInitialized() const {
  return true;
}

void DeleteBGPPeerRequest::InternalSwap(DeleteBGPPeerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteBGPPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[48]);
}

// ===================================================================

class UpdateBGPPeerRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::BGPPeer& bgppeer(const UpdateBGPPeerRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateBGPPeerRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::BGPPeer&
UpdateBGPPeerRequest::_Internal::bgppeer(const UpdateBGPPeerRequest* msg) {
  return *msg->bgppeer_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateBGPPeerRequest::_Internal::update_mask(const UpdateBGPPeerRequest* msg) {
  return *msg->update_mask_;
}
void UpdateBGPPeerRequest::clear_bgppeer() {
  if (GetArenaForAllocation() == nullptr && bgppeer_ != nullptr) {
    delete bgppeer_;
  }
  bgppeer_ = nullptr;
}
void UpdateBGPPeerRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateBGPPeerRequest::UpdateBGPPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
}
UpdateBGPPeerRequest::UpdateBGPPeerRequest(const UpdateBGPPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bgppeer()) {
    bgppeer_ = new ::opi_api::network::cloud::v1alpha1::BGPPeer(*from.bgppeer_);
  } else {
    bgppeer_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
}

inline void UpdateBGPPeerRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bgppeer_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&bgppeer_)) + sizeof(update_mask_));
}

UpdateBGPPeerRequest::~UpdateBGPPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateBGPPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete bgppeer_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateBGPPeerRequest::ArenaDtor(void* object) {
  UpdateBGPPeerRequest* _this = reinterpret_cast< UpdateBGPPeerRequest* >(object);
  (void)_this;
}
void UpdateBGPPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateBGPPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateBGPPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && bgppeer_ != nullptr) {
    delete bgppeer_;
  }
  bgppeer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBGPPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgppeer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateBGPPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 1;
  if (this->_internal_has_bgppeer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bgppeer(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  return target;
}

size_t UpdateBGPPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 1;
  if (this->_internal_has_bgppeer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgppeer_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBGPPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateBGPPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBGPPeerRequest::GetClassData() const { return &_class_data_; }

void UpdateBGPPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateBGPPeerRequest *>(to)->MergeFrom(
      static_cast<const UpdateBGPPeerRequest &>(from));
}


void UpdateBGPPeerRequest::MergeFrom(const UpdateBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bgppeer()) {
    _internal_mutable_bgppeer()->::opi_api::network::cloud::v1alpha1::BGPPeer::MergeFrom(from._internal_bgppeer());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBGPPeerRequest::CopyFrom(const UpdateBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBGPPeerRequest::IsInitialized() const {
  return true;
}

void UpdateBGPPeerRequest::InternalSwap(UpdateBGPPeerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateBGPPeerRequest, update_mask_)
      + sizeof(UpdateBGPPeerRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateBGPPeerRequest, bgppeer_)>(
          reinterpret_cast<char*>(&bgppeer_),
          reinterpret_cast<char*>(&other->bgppeer_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBGPPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[49]);
}

// ===================================================================

class ListBGPPeersRequest::_Internal {
 public:
};

ListBGPPeersRequest::ListBGPPeersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
}
ListBGPPeersRequest::ListBGPPeersRequest(const ListBGPPeersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
}

inline void ListBGPPeersRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListBGPPeersRequest::~ListBGPPeersRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListBGPPeersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBGPPeersRequest::ArenaDtor(void* object) {
  ListBGPPeersRequest* _this = reinterpret_cast< ListBGPPeersRequest* >(object);
  (void)_this;
}
void ListBGPPeersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBGPPeersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListBGPPeersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBGPPeersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBGPPeersRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBGPPeersRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBGPPeersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBGPPeersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBGPPeersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  return target;
}

size_t ListBGPPeersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBGPPeersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListBGPPeersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBGPPeersRequest::GetClassData() const { return &_class_data_; }

void ListBGPPeersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListBGPPeersRequest *>(to)->MergeFrom(
      static_cast<const ListBGPPeersRequest &>(from));
}


void ListBGPPeersRequest::MergeFrom(const ListBGPPeersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBGPPeersRequest::CopyFrom(const ListBGPPeersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBGPPeersRequest::IsInitialized() const {
  return true;
}

void ListBGPPeersRequest::InternalSwap(ListBGPPeersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBGPPeersRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[50]);
}

// ===================================================================

class ListBGPPeersResponse::_Internal {
 public:
};

void ListBGPPeersResponse::clear_bgppeer() {
  bgppeer_.Clear();
}
ListBGPPeersResponse::ListBGPPeersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bgppeer_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
}
ListBGPPeersResponse::ListBGPPeersResponse(const ListBGPPeersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bgppeer_(from.bgppeer_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
}

inline void ListBGPPeersResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListBGPPeersResponse::~ListBGPPeersResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListBGPPeersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBGPPeersResponse::ArenaDtor(void* object) {
  ListBGPPeersResponse* _this = reinterpret_cast< ListBGPPeersResponse* >(object);
  (void)_this;
}
void ListBGPPeersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBGPPeersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListBGPPeersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bgppeer_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBGPPeersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bgppeer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBGPPeersResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBGPPeersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bgppeer_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_bgppeer(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBGPPeersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  return target;
}

size_t ListBGPPeersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.BGPPeer bgppeer = 1;
  total_size += 1UL * this->_internal_bgppeer_size();
  for (const auto& msg : this->bgppeer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBGPPeersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListBGPPeersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBGPPeersResponse::GetClassData() const { return &_class_data_; }

void ListBGPPeersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListBGPPeersResponse *>(to)->MergeFrom(
      static_cast<const ListBGPPeersResponse &>(from));
}


void ListBGPPeersResponse::MergeFrom(const ListBGPPeersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bgppeer_.MergeFrom(from.bgppeer_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBGPPeersResponse::CopyFrom(const ListBGPPeersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBGPPeersResponse::IsInitialized() const {
  return true;
}

void ListBGPPeersResponse::InternalSwap(ListBGPPeersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bgppeer_.InternalSwap(&other->bgppeer_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBGPPeersResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[51]);
}

// ===================================================================

class GetBGPPeerRequest::_Internal {
 public:
};

GetBGPPeerRequest::GetBGPPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
}
GetBGPPeerRequest::GetBGPPeerRequest(const GetBGPPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
}

inline void GetBGPPeerRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBGPPeerRequest::~GetBGPPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBGPPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBGPPeerRequest::ArenaDtor(void* object) {
  GetBGPPeerRequest* _this = reinterpret_cast< GetBGPPeerRequest* >(object);
  (void)_this;
}
void GetBGPPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBGPPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBGPPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBGPPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetBGPPeerRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBGPPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetBGPPeerRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  return target;
}

size_t GetBGPPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBGPPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBGPPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBGPPeerRequest::GetClassData() const { return &_class_data_; }

void GetBGPPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBGPPeerRequest *>(to)->MergeFrom(
      static_cast<const GetBGPPeerRequest &>(from));
}


void GetBGPPeerRequest::MergeFrom(const GetBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBGPPeerRequest::CopyFrom(const GetBGPPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetBGPPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBGPPeerRequest::IsInitialized() const {
  return true;
}

void GetBGPPeerRequest::InternalSwap(GetBGPPeerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBGPPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[52]);
}

// ===================================================================

class CreateBGPPeerAfRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::BGPPeerAf& bgppeeraf(const CreateBGPPeerAfRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::BGPPeerAf&
CreateBGPPeerAfRequest::_Internal::bgppeeraf(const CreateBGPPeerAfRequest* msg) {
  return *msg->bgppeeraf_;
}
void CreateBGPPeerAfRequest::clear_bgppeeraf() {
  if (GetArenaForAllocation() == nullptr && bgppeeraf_ != nullptr) {
    delete bgppeeraf_;
  }
  bgppeeraf_ = nullptr;
}
CreateBGPPeerAfRequest::CreateBGPPeerAfRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
}
CreateBGPPeerAfRequest::CreateBGPPeerAfRequest(const CreateBGPPeerAfRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  bgppeeraf_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    bgppeeraf_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bgppeeraf_id().empty()) {
    bgppeeraf_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bgppeeraf_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_bgppeeraf()) {
    bgppeeraf_ = new ::opi_api::network::cloud::v1alpha1::BGPPeerAf(*from.bgppeeraf_);
  } else {
    bgppeeraf_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
}

inline void CreateBGPPeerAfRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bgppeeraf_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  bgppeeraf_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bgppeeraf_ = nullptr;
}

CreateBGPPeerAfRequest::~CreateBGPPeerAfRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateBGPPeerAfRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bgppeeraf_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bgppeeraf_;
}

void CreateBGPPeerAfRequest::ArenaDtor(void* object) {
  CreateBGPPeerAfRequest* _this = reinterpret_cast< CreateBGPPeerAfRequest* >(object);
  (void)_this;
}
void CreateBGPPeerAfRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateBGPPeerAfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateBGPPeerAfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  bgppeeraf_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && bgppeeraf_ != nullptr) {
    delete bgppeeraf_;
  }
  bgppeeraf_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateBGPPeerAfRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgppeeraf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string bgppeeraf_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_bgppeeraf_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest.bgppeeraf_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateBGPPeerAfRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_bgppeeraf()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::bgppeeraf(this), target, stream);
  }

  // string bgppeeraf_id = 3;
  if (!this->_internal_bgppeeraf_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bgppeeraf_id().data(), static_cast<int>(this->_internal_bgppeeraf_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest.bgppeeraf_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bgppeeraf_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  return target;
}

size_t CreateBGPPeerAfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string bgppeeraf_id = 3;
  if (!this->_internal_bgppeeraf_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bgppeeraf_id());
  }

  // .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_bgppeeraf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgppeeraf_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateBGPPeerAfRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateBGPPeerAfRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateBGPPeerAfRequest::GetClassData() const { return &_class_data_; }

void CreateBGPPeerAfRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateBGPPeerAfRequest *>(to)->MergeFrom(
      static_cast<const CreateBGPPeerAfRequest &>(from));
}


void CreateBGPPeerAfRequest::MergeFrom(const CreateBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_bgppeeraf_id().empty()) {
    _internal_set_bgppeeraf_id(from._internal_bgppeeraf_id());
  }
  if (from._internal_has_bgppeeraf()) {
    _internal_mutable_bgppeeraf()->::opi_api::network::cloud::v1alpha1::BGPPeerAf::MergeFrom(from._internal_bgppeeraf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBGPPeerAfRequest::CopyFrom(const CreateBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateBGPPeerAfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBGPPeerAfRequest::IsInitialized() const {
  return true;
}

void CreateBGPPeerAfRequest::InternalSwap(CreateBGPPeerAfRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &bgppeeraf_id_, lhs_arena,
      &other->bgppeeraf_id_, rhs_arena
  );
  swap(bgppeeraf_, other->bgppeeraf_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateBGPPeerAfRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[53]);
}

// ===================================================================

class DeleteBGPPeerAfRequest::_Internal {
 public:
};

DeleteBGPPeerAfRequest::DeleteBGPPeerAfRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
}
DeleteBGPPeerAfRequest::DeleteBGPPeerAfRequest(const DeleteBGPPeerAfRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
}

inline void DeleteBGPPeerAfRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteBGPPeerAfRequest::~DeleteBGPPeerAfRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteBGPPeerAfRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteBGPPeerAfRequest::ArenaDtor(void* object) {
  DeleteBGPPeerAfRequest* _this = reinterpret_cast< DeleteBGPPeerAfRequest* >(object);
  (void)_this;
}
void DeleteBGPPeerAfRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteBGPPeerAfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteBGPPeerAfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteBGPPeerAfRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteBGPPeerAfRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  return target;
}

size_t DeleteBGPPeerAfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteBGPPeerAfRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteBGPPeerAfRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteBGPPeerAfRequest::GetClassData() const { return &_class_data_; }

void DeleteBGPPeerAfRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteBGPPeerAfRequest *>(to)->MergeFrom(
      static_cast<const DeleteBGPPeerAfRequest &>(from));
}


void DeleteBGPPeerAfRequest::MergeFrom(const DeleteBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteBGPPeerAfRequest::CopyFrom(const DeleteBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteBGPPeerAfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBGPPeerAfRequest::IsInitialized() const {
  return true;
}

void DeleteBGPPeerAfRequest::InternalSwap(DeleteBGPPeerAfRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteBGPPeerAfRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[54]);
}

// ===================================================================

class UpdateBGPPeerAfRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::BGPPeerAf& bgppeeraf(const UpdateBGPPeerAfRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateBGPPeerAfRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::BGPPeerAf&
UpdateBGPPeerAfRequest::_Internal::bgppeeraf(const UpdateBGPPeerAfRequest* msg) {
  return *msg->bgppeeraf_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateBGPPeerAfRequest::_Internal::update_mask(const UpdateBGPPeerAfRequest* msg) {
  return *msg->update_mask_;
}
void UpdateBGPPeerAfRequest::clear_bgppeeraf() {
  if (GetArenaForAllocation() == nullptr && bgppeeraf_ != nullptr) {
    delete bgppeeraf_;
  }
  bgppeeraf_ = nullptr;
}
void UpdateBGPPeerAfRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateBGPPeerAfRequest::UpdateBGPPeerAfRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
}
UpdateBGPPeerAfRequest::UpdateBGPPeerAfRequest(const UpdateBGPPeerAfRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bgppeeraf()) {
    bgppeeraf_ = new ::opi_api::network::cloud::v1alpha1::BGPPeerAf(*from.bgppeeraf_);
  } else {
    bgppeeraf_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
}

inline void UpdateBGPPeerAfRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bgppeeraf_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&bgppeeraf_)) + sizeof(update_mask_));
}

UpdateBGPPeerAfRequest::~UpdateBGPPeerAfRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateBGPPeerAfRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete bgppeeraf_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateBGPPeerAfRequest::ArenaDtor(void* object) {
  UpdateBGPPeerAfRequest* _this = reinterpret_cast< UpdateBGPPeerAfRequest* >(object);
  (void)_this;
}
void UpdateBGPPeerAfRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateBGPPeerAfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateBGPPeerAfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && bgppeeraf_ != nullptr) {
    delete bgppeeraf_;
  }
  bgppeeraf_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBGPPeerAfRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgppeeraf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateBGPPeerAfRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 1;
  if (this->_internal_has_bgppeeraf()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bgppeeraf(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  return target;
}

size_t UpdateBGPPeerAfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 1;
  if (this->_internal_has_bgppeeraf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgppeeraf_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBGPPeerAfRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateBGPPeerAfRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBGPPeerAfRequest::GetClassData() const { return &_class_data_; }

void UpdateBGPPeerAfRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateBGPPeerAfRequest *>(to)->MergeFrom(
      static_cast<const UpdateBGPPeerAfRequest &>(from));
}


void UpdateBGPPeerAfRequest::MergeFrom(const UpdateBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bgppeeraf()) {
    _internal_mutable_bgppeeraf()->::opi_api::network::cloud::v1alpha1::BGPPeerAf::MergeFrom(from._internal_bgppeeraf());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBGPPeerAfRequest::CopyFrom(const UpdateBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateBGPPeerAfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBGPPeerAfRequest::IsInitialized() const {
  return true;
}

void UpdateBGPPeerAfRequest::InternalSwap(UpdateBGPPeerAfRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateBGPPeerAfRequest, update_mask_)
      + sizeof(UpdateBGPPeerAfRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateBGPPeerAfRequest, bgppeeraf_)>(
          reinterpret_cast<char*>(&bgppeeraf_),
          reinterpret_cast<char*>(&other->bgppeeraf_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBGPPeerAfRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[55]);
}

// ===================================================================

class ListBGPPeerAfsRequest::_Internal {
 public:
};

ListBGPPeerAfsRequest::ListBGPPeerAfsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
}
ListBGPPeerAfsRequest::ListBGPPeerAfsRequest(const ListBGPPeerAfsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
}

inline void ListBGPPeerAfsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListBGPPeerAfsRequest::~ListBGPPeerAfsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListBGPPeerAfsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBGPPeerAfsRequest::ArenaDtor(void* object) {
  ListBGPPeerAfsRequest* _this = reinterpret_cast< ListBGPPeerAfsRequest* >(object);
  (void)_this;
}
void ListBGPPeerAfsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBGPPeerAfsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListBGPPeerAfsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBGPPeerAfsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBGPPeerAfsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  return target;
}

size_t ListBGPPeerAfsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBGPPeerAfsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListBGPPeerAfsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBGPPeerAfsRequest::GetClassData() const { return &_class_data_; }

void ListBGPPeerAfsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListBGPPeerAfsRequest *>(to)->MergeFrom(
      static_cast<const ListBGPPeerAfsRequest &>(from));
}


void ListBGPPeerAfsRequest::MergeFrom(const ListBGPPeerAfsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBGPPeerAfsRequest::CopyFrom(const ListBGPPeerAfsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBGPPeerAfsRequest::IsInitialized() const {
  return true;
}

void ListBGPPeerAfsRequest::InternalSwap(ListBGPPeerAfsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBGPPeerAfsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[56]);
}

// ===================================================================

class ListBGPPeerAfsResponse::_Internal {
 public:
};

void ListBGPPeerAfsResponse::clear_bgppeeraf() {
  bgppeeraf_.Clear();
}
ListBGPPeerAfsResponse::ListBGPPeerAfsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bgppeeraf_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
}
ListBGPPeerAfsResponse::ListBGPPeerAfsResponse(const ListBGPPeerAfsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bgppeeraf_(from.bgppeeraf_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
}

inline void ListBGPPeerAfsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListBGPPeerAfsResponse::~ListBGPPeerAfsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListBGPPeerAfsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBGPPeerAfsResponse::ArenaDtor(void* object) {
  ListBGPPeerAfsResponse* _this = reinterpret_cast< ListBGPPeerAfsResponse* >(object);
  (void)_this;
}
void ListBGPPeerAfsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBGPPeerAfsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListBGPPeerAfsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bgppeeraf_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBGPPeerAfsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bgppeeraf(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBGPPeerAfsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bgppeeraf_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_bgppeeraf(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  return target;
}

size_t ListBGPPeerAfsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.BGPPeerAf bgppeeraf = 1;
  total_size += 1UL * this->_internal_bgppeeraf_size();
  for (const auto& msg : this->bgppeeraf_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBGPPeerAfsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListBGPPeerAfsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBGPPeerAfsResponse::GetClassData() const { return &_class_data_; }

void ListBGPPeerAfsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListBGPPeerAfsResponse *>(to)->MergeFrom(
      static_cast<const ListBGPPeerAfsResponse &>(from));
}


void ListBGPPeerAfsResponse::MergeFrom(const ListBGPPeerAfsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bgppeeraf_.MergeFrom(from.bgppeeraf_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBGPPeerAfsResponse::CopyFrom(const ListBGPPeerAfsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListBGPPeerAfsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBGPPeerAfsResponse::IsInitialized() const {
  return true;
}

void ListBGPPeerAfsResponse::InternalSwap(ListBGPPeerAfsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bgppeeraf_.InternalSwap(&other->bgppeeraf_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBGPPeerAfsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[57]);
}

// ===================================================================

class GetBGPPeerAfRequest::_Internal {
 public:
};

GetBGPPeerAfRequest::GetBGPPeerAfRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
}
GetBGPPeerAfRequest::GetBGPPeerAfRequest(const GetBGPPeerAfRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
}

inline void GetBGPPeerAfRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBGPPeerAfRequest::~GetBGPPeerAfRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetBGPPeerAfRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetBGPPeerAfRequest::ArenaDtor(void* object) {
  GetBGPPeerAfRequest* _this = reinterpret_cast< GetBGPPeerAfRequest* >(object);
  (void)_this;
}
void GetBGPPeerAfRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetBGPPeerAfRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBGPPeerAfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBGPPeerAfRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBGPPeerAfRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  return target;
}

size_t GetBGPPeerAfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBGPPeerAfRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBGPPeerAfRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBGPPeerAfRequest::GetClassData() const { return &_class_data_; }

void GetBGPPeerAfRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBGPPeerAfRequest *>(to)->MergeFrom(
      static_cast<const GetBGPPeerAfRequest &>(from));
}


void GetBGPPeerAfRequest::MergeFrom(const GetBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBGPPeerAfRequest::CopyFrom(const GetBGPPeerAfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetBGPPeerAfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBGPPeerAfRequest::IsInitialized() const {
  return true;
}

void GetBGPPeerAfRequest::InternalSwap(GetBGPPeerAfRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBGPPeerAfRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[58]);
}

// ===================================================================

class CreateMappingRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Mapping& mapping(const CreateMappingRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Mapping&
CreateMappingRequest::_Internal::mapping(const CreateMappingRequest* msg) {
  return *msg->mapping_;
}
void CreateMappingRequest::clear_mapping() {
  if (GetArenaForAllocation() == nullptr && mapping_ != nullptr) {
    delete mapping_;
  }
  mapping_ = nullptr;
}
CreateMappingRequest::CreateMappingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
}
CreateMappingRequest::CreateMappingRequest(const CreateMappingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  mapping_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mapping_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapping_id().empty()) {
    mapping_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mapping_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_mapping()) {
    mapping_ = new ::opi_api::network::cloud::v1alpha1::Mapping(*from.mapping_);
  } else {
    mapping_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
}

inline void CreateMappingRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mapping_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mapping_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mapping_ = nullptr;
}

CreateMappingRequest::~CreateMappingRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateMappingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mapping_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mapping_;
}

void CreateMappingRequest::ArenaDtor(void* object) {
  CreateMappingRequest* _this = reinterpret_cast< CreateMappingRequest* >(object);
  (void)_this;
}
void CreateMappingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateMappingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateMappingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  mapping_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && mapping_ != nullptr) {
    delete mapping_;
  }
  mapping_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateMappingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateMappingRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Mapping mapping = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mapping(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapping_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_mapping_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateMappingRequest.mapping_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateMappingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateMappingRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Mapping mapping = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_mapping()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mapping(this), target, stream);
  }

  // string mapping_id = 3;
  if (!this->_internal_mapping_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapping_id().data(), static_cast<int>(this->_internal_mapping_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateMappingRequest.mapping_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mapping_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  return target;
}

size_t CreateMappingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string mapping_id = 3;
  if (!this->_internal_mapping_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapping_id());
  }

  // .opi_api.network.cloud.v1alpha1.Mapping mapping = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_mapping()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mapping_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateMappingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateMappingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateMappingRequest::GetClassData() const { return &_class_data_; }

void CreateMappingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateMappingRequest *>(to)->MergeFrom(
      static_cast<const CreateMappingRequest &>(from));
}


void CreateMappingRequest::MergeFrom(const CreateMappingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_mapping_id().empty()) {
    _internal_set_mapping_id(from._internal_mapping_id());
  }
  if (from._internal_has_mapping()) {
    _internal_mutable_mapping()->::opi_api::network::cloud::v1alpha1::Mapping::MergeFrom(from._internal_mapping());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateMappingRequest::CopyFrom(const CreateMappingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateMappingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMappingRequest::IsInitialized() const {
  return true;
}

void CreateMappingRequest::InternalSwap(CreateMappingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mapping_id_, lhs_arena,
      &other->mapping_id_, rhs_arena
  );
  swap(mapping_, other->mapping_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateMappingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[59]);
}

// ===================================================================

class DeleteMappingRequest::_Internal {
 public:
};

DeleteMappingRequest::DeleteMappingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
}
DeleteMappingRequest::DeleteMappingRequest(const DeleteMappingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
}

inline void DeleteMappingRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteMappingRequest::~DeleteMappingRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteMappingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteMappingRequest::ArenaDtor(void* object) {
  DeleteMappingRequest* _this = reinterpret_cast< DeleteMappingRequest* >(object);
  (void)_this;
}
void DeleteMappingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteMappingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteMappingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMappingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteMappingRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteMappingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteMappingRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  return target;
}

size_t DeleteMappingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteMappingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteMappingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteMappingRequest::GetClassData() const { return &_class_data_; }

void DeleteMappingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteMappingRequest *>(to)->MergeFrom(
      static_cast<const DeleteMappingRequest &>(from));
}


void DeleteMappingRequest::MergeFrom(const DeleteMappingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMappingRequest::CopyFrom(const DeleteMappingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteMappingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMappingRequest::IsInitialized() const {
  return true;
}

void DeleteMappingRequest::InternalSwap(DeleteMappingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMappingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[60]);
}

// ===================================================================

class UpdateMappingRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Mapping& mapping(const UpdateMappingRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateMappingRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Mapping&
UpdateMappingRequest::_Internal::mapping(const UpdateMappingRequest* msg) {
  return *msg->mapping_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateMappingRequest::_Internal::update_mask(const UpdateMappingRequest* msg) {
  return *msg->update_mask_;
}
void UpdateMappingRequest::clear_mapping() {
  if (GetArenaForAllocation() == nullptr && mapping_ != nullptr) {
    delete mapping_;
  }
  mapping_ = nullptr;
}
void UpdateMappingRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateMappingRequest::UpdateMappingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
}
UpdateMappingRequest::UpdateMappingRequest(const UpdateMappingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mapping()) {
    mapping_ = new ::opi_api::network::cloud::v1alpha1::Mapping(*from.mapping_);
  } else {
    mapping_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
}

inline void UpdateMappingRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mapping_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&mapping_)) + sizeof(update_mask_));
}

UpdateMappingRequest::~UpdateMappingRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateMappingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete mapping_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateMappingRequest::ArenaDtor(void* object) {
  UpdateMappingRequest* _this = reinterpret_cast< UpdateMappingRequest* >(object);
  (void)_this;
}
void UpdateMappingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateMappingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateMappingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && mapping_ != nullptr) {
    delete mapping_;
  }
  mapping_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateMappingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Mapping mapping = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mapping(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateMappingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Mapping mapping = 1;
  if (this->_internal_has_mapping()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mapping(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  return target;
}

size_t UpdateMappingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Mapping mapping = 1;
  if (this->_internal_has_mapping()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mapping_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateMappingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateMappingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateMappingRequest::GetClassData() const { return &_class_data_; }

void UpdateMappingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateMappingRequest *>(to)->MergeFrom(
      static_cast<const UpdateMappingRequest &>(from));
}


void UpdateMappingRequest::MergeFrom(const UpdateMappingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mapping()) {
    _internal_mutable_mapping()->::opi_api::network::cloud::v1alpha1::Mapping::MergeFrom(from._internal_mapping());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateMappingRequest::CopyFrom(const UpdateMappingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateMappingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMappingRequest::IsInitialized() const {
  return true;
}

void UpdateMappingRequest::InternalSwap(UpdateMappingRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateMappingRequest, update_mask_)
      + sizeof(UpdateMappingRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateMappingRequest, mapping_)>(
          reinterpret_cast<char*>(&mapping_),
          reinterpret_cast<char*>(&other->mapping_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateMappingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[61]);
}

// ===================================================================

class ListMappingsRequest::_Internal {
 public:
};

ListMappingsRequest::ListMappingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
}
ListMappingsRequest::ListMappingsRequest(const ListMappingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
}

inline void ListMappingsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListMappingsRequest::~ListMappingsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListMappingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListMappingsRequest::ArenaDtor(void* object) {
  ListMappingsRequest* _this = reinterpret_cast< ListMappingsRequest* >(object);
  (void)_this;
}
void ListMappingsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMappingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListMappingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMappingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListMappingsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListMappingsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListMappingsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListMappingsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListMappingsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  return target;
}

size_t ListMappingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListMappingsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListMappingsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListMappingsRequest::GetClassData() const { return &_class_data_; }

void ListMappingsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListMappingsRequest *>(to)->MergeFrom(
      static_cast<const ListMappingsRequest &>(from));
}


void ListMappingsRequest::MergeFrom(const ListMappingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListMappingsRequest::CopyFrom(const ListMappingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListMappingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMappingsRequest::IsInitialized() const {
  return true;
}

void ListMappingsRequest::InternalSwap(ListMappingsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMappingsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[62]);
}

// ===================================================================

class ListMappingsResponse::_Internal {
 public:
};

void ListMappingsResponse::clear_mapping() {
  mapping_.Clear();
}
ListMappingsResponse::ListMappingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  mapping_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
}
ListMappingsResponse::ListMappingsResponse(const ListMappingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mapping_(from.mapping_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
}

inline void ListMappingsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListMappingsResponse::~ListMappingsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListMappingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListMappingsResponse::ArenaDtor(void* object) {
  ListMappingsResponse* _this = reinterpret_cast< ListMappingsResponse* >(object);
  (void)_this;
}
void ListMappingsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMappingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListMappingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mapping_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMappingsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Mapping mapping = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mapping(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListMappingsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListMappingsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Mapping mapping = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mapping_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_mapping(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListMappingsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  return target;
}

size_t ListMappingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Mapping mapping = 1;
  total_size += 1UL * this->_internal_mapping_size();
  for (const auto& msg : this->mapping_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListMappingsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListMappingsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListMappingsResponse::GetClassData() const { return &_class_data_; }

void ListMappingsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListMappingsResponse *>(to)->MergeFrom(
      static_cast<const ListMappingsResponse &>(from));
}


void ListMappingsResponse::MergeFrom(const ListMappingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  mapping_.MergeFrom(from.mapping_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListMappingsResponse::CopyFrom(const ListMappingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListMappingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMappingsResponse::IsInitialized() const {
  return true;
}

void ListMappingsResponse::InternalSwap(ListMappingsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  mapping_.InternalSwap(&other->mapping_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMappingsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[63]);
}

// ===================================================================

class GetMappingRequest::_Internal {
 public:
};

GetMappingRequest::GetMappingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetMappingRequest)
}
GetMappingRequest::GetMappingRequest(const GetMappingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetMappingRequest)
}

inline void GetMappingRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetMappingRequest::~GetMappingRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMappingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetMappingRequest::ArenaDtor(void* object) {
  GetMappingRequest* _this = reinterpret_cast< GetMappingRequest* >(object);
  (void)_this;
}
void GetMappingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMappingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMappingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMappingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetMappingRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMappingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetMappingRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  return target;
}

size_t GetMappingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMappingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMappingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMappingRequest::GetClassData() const { return &_class_data_; }

void GetMappingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMappingRequest *>(to)->MergeFrom(
      static_cast<const GetMappingRequest &>(from));
}


void GetMappingRequest::MergeFrom(const GetMappingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMappingRequest::CopyFrom(const GetMappingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetMappingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMappingRequest::IsInitialized() const {
  return true;
}

void GetMappingRequest::InternalSwap(GetMappingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMappingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[64]);
}

// ===================================================================

class CreateNextHopRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::NextHop& nexthop(const CreateNextHopRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::NextHop&
CreateNextHopRequest::_Internal::nexthop(const CreateNextHopRequest* msg) {
  return *msg->nexthop_;
}
void CreateNextHopRequest::clear_nexthop() {
  if (GetArenaForAllocation() == nullptr && nexthop_ != nullptr) {
    delete nexthop_;
  }
  nexthop_ = nullptr;
}
CreateNextHopRequest::CreateNextHopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
}
CreateNextHopRequest::CreateNextHopRequest(const CreateNextHopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  nexthop_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    nexthop_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nexthop_id().empty()) {
    nexthop_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nexthop_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_nexthop()) {
    nexthop_ = new ::opi_api::network::cloud::v1alpha1::NextHop(*from.nexthop_);
  } else {
    nexthop_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
}

inline void CreateNextHopRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
nexthop_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  nexthop_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
nexthop_ = nullptr;
}

CreateNextHopRequest::~CreateNextHopRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateNextHopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nexthop_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nexthop_;
}

void CreateNextHopRequest::ArenaDtor(void* object) {
  CreateNextHopRequest* _this = reinterpret_cast< CreateNextHopRequest* >(object);
  (void)_this;
}
void CreateNextHopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNextHopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNextHopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  nexthop_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && nexthop_ != nullptr) {
    delete nexthop_;
  }
  nexthop_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNextHopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateNextHopRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.NextHop nexthop = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nexthop(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nexthop_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_nexthop_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateNextHopRequest.nexthop_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateNextHopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateNextHopRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.NextHop nexthop = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_nexthop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::nexthop(this), target, stream);
  }

  // string nexthop_id = 3;
  if (!this->_internal_nexthop_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nexthop_id().data(), static_cast<int>(this->_internal_nexthop_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateNextHopRequest.nexthop_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_nexthop_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  return target;
}

size_t CreateNextHopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string nexthop_id = 3;
  if (!this->_internal_nexthop_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nexthop_id());
  }

  // .opi_api.network.cloud.v1alpha1.NextHop nexthop = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_nexthop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nexthop_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateNextHopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateNextHopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateNextHopRequest::GetClassData() const { return &_class_data_; }

void CreateNextHopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateNextHopRequest *>(to)->MergeFrom(
      static_cast<const CreateNextHopRequest &>(from));
}


void CreateNextHopRequest::MergeFrom(const CreateNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_nexthop_id().empty()) {
    _internal_set_nexthop_id(from._internal_nexthop_id());
  }
  if (from._internal_has_nexthop()) {
    _internal_mutable_nexthop()->::opi_api::network::cloud::v1alpha1::NextHop::MergeFrom(from._internal_nexthop());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateNextHopRequest::CopyFrom(const CreateNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateNextHopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNextHopRequest::IsInitialized() const {
  return true;
}

void CreateNextHopRequest::InternalSwap(CreateNextHopRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nexthop_id_, lhs_arena,
      &other->nexthop_id_, rhs_arena
  );
  swap(nexthop_, other->nexthop_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNextHopRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[65]);
}

// ===================================================================

class DeleteNextHopRequest::_Internal {
 public:
};

DeleteNextHopRequest::DeleteNextHopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
}
DeleteNextHopRequest::DeleteNextHopRequest(const DeleteNextHopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
}

inline void DeleteNextHopRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteNextHopRequest::~DeleteNextHopRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteNextHopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteNextHopRequest::ArenaDtor(void* object) {
  DeleteNextHopRequest* _this = reinterpret_cast< DeleteNextHopRequest* >(object);
  (void)_this;
}
void DeleteNextHopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNextHopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteNextHopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNextHopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteNextHopRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteNextHopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteNextHopRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  return target;
}

size_t DeleteNextHopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteNextHopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteNextHopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteNextHopRequest::GetClassData() const { return &_class_data_; }

void DeleteNextHopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteNextHopRequest *>(to)->MergeFrom(
      static_cast<const DeleteNextHopRequest &>(from));
}


void DeleteNextHopRequest::MergeFrom(const DeleteNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteNextHopRequest::CopyFrom(const DeleteNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteNextHopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNextHopRequest::IsInitialized() const {
  return true;
}

void DeleteNextHopRequest::InternalSwap(DeleteNextHopRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNextHopRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[66]);
}

// ===================================================================

class UpdateNextHopRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::NextHop& nexthop(const UpdateNextHopRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateNextHopRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::NextHop&
UpdateNextHopRequest::_Internal::nexthop(const UpdateNextHopRequest* msg) {
  return *msg->nexthop_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateNextHopRequest::_Internal::update_mask(const UpdateNextHopRequest* msg) {
  return *msg->update_mask_;
}
void UpdateNextHopRequest::clear_nexthop() {
  if (GetArenaForAllocation() == nullptr && nexthop_ != nullptr) {
    delete nexthop_;
  }
  nexthop_ = nullptr;
}
void UpdateNextHopRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateNextHopRequest::UpdateNextHopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
}
UpdateNextHopRequest::UpdateNextHopRequest(const UpdateNextHopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nexthop()) {
    nexthop_ = new ::opi_api::network::cloud::v1alpha1::NextHop(*from.nexthop_);
  } else {
    nexthop_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
}

inline void UpdateNextHopRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&nexthop_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&nexthop_)) + sizeof(update_mask_));
}

UpdateNextHopRequest::~UpdateNextHopRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateNextHopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete nexthop_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateNextHopRequest::ArenaDtor(void* object) {
  UpdateNextHopRequest* _this = reinterpret_cast< UpdateNextHopRequest* >(object);
  (void)_this;
}
void UpdateNextHopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateNextHopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateNextHopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && nexthop_ != nullptr) {
    delete nexthop_;
  }
  nexthop_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateNextHopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.NextHop nexthop = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nexthop(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateNextHopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.NextHop nexthop = 1;
  if (this->_internal_has_nexthop()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::nexthop(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  return target;
}

size_t UpdateNextHopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.NextHop nexthop = 1;
  if (this->_internal_has_nexthop()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nexthop_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateNextHopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateNextHopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateNextHopRequest::GetClassData() const { return &_class_data_; }

void UpdateNextHopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateNextHopRequest *>(to)->MergeFrom(
      static_cast<const UpdateNextHopRequest &>(from));
}


void UpdateNextHopRequest::MergeFrom(const UpdateNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_nexthop()) {
    _internal_mutable_nexthop()->::opi_api::network::cloud::v1alpha1::NextHop::MergeFrom(from._internal_nexthop());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNextHopRequest::CopyFrom(const UpdateNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateNextHopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNextHopRequest::IsInitialized() const {
  return true;
}

void UpdateNextHopRequest::InternalSwap(UpdateNextHopRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateNextHopRequest, update_mask_)
      + sizeof(UpdateNextHopRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateNextHopRequest, nexthop_)>(
          reinterpret_cast<char*>(&nexthop_),
          reinterpret_cast<char*>(&other->nexthop_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateNextHopRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[67]);
}

// ===================================================================

class ListNextHopsRequest::_Internal {
 public:
};

ListNextHopsRequest::ListNextHopsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
}
ListNextHopsRequest::ListNextHopsRequest(const ListNextHopsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
}

inline void ListNextHopsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListNextHopsRequest::~ListNextHopsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListNextHopsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNextHopsRequest::ArenaDtor(void* object) {
  ListNextHopsRequest* _this = reinterpret_cast< ListNextHopsRequest* >(object);
  (void)_this;
}
void ListNextHopsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNextHopsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNextHopsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNextHopsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListNextHopsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListNextHopsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNextHopsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListNextHopsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListNextHopsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  return target;
}

size_t ListNextHopsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNextHopsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListNextHopsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNextHopsRequest::GetClassData() const { return &_class_data_; }

void ListNextHopsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListNextHopsRequest *>(to)->MergeFrom(
      static_cast<const ListNextHopsRequest &>(from));
}


void ListNextHopsRequest::MergeFrom(const ListNextHopsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNextHopsRequest::CopyFrom(const ListNextHopsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListNextHopsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNextHopsRequest::IsInitialized() const {
  return true;
}

void ListNextHopsRequest::InternalSwap(ListNextHopsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNextHopsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[68]);
}

// ===================================================================

class ListNextHopsResponse::_Internal {
 public:
};

void ListNextHopsResponse::clear_nexthop() {
  nexthop_.Clear();
}
ListNextHopsResponse::ListNextHopsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  nexthop_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
}
ListNextHopsResponse::ListNextHopsResponse(const ListNextHopsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      nexthop_(from.nexthop_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
}

inline void ListNextHopsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListNextHopsResponse::~ListNextHopsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListNextHopsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNextHopsResponse::ArenaDtor(void* object) {
  ListNextHopsResponse* _this = reinterpret_cast< ListNextHopsResponse* >(object);
  (void)_this;
}
void ListNextHopsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNextHopsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNextHopsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nexthop_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNextHopsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.NextHop nexthop = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nexthop(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListNextHopsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNextHopsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.NextHop nexthop = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_nexthop_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_nexthop(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListNextHopsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  return target;
}

size_t ListNextHopsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.NextHop nexthop = 1;
  total_size += 1UL * this->_internal_nexthop_size();
  for (const auto& msg : this->nexthop_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNextHopsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListNextHopsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNextHopsResponse::GetClassData() const { return &_class_data_; }

void ListNextHopsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListNextHopsResponse *>(to)->MergeFrom(
      static_cast<const ListNextHopsResponse &>(from));
}


void ListNextHopsResponse::MergeFrom(const ListNextHopsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  nexthop_.MergeFrom(from.nexthop_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNextHopsResponse::CopyFrom(const ListNextHopsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListNextHopsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNextHopsResponse::IsInitialized() const {
  return true;
}

void ListNextHopsResponse::InternalSwap(ListNextHopsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  nexthop_.InternalSwap(&other->nexthop_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNextHopsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[69]);
}

// ===================================================================

class GetNextHopRequest::_Internal {
 public:
};

GetNextHopRequest::GetNextHopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
}
GetNextHopRequest::GetNextHopRequest(const GetNextHopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
}

inline void GetNextHopRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetNextHopRequest::~GetNextHopRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetNextHopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetNextHopRequest::ArenaDtor(void* object) {
  GetNextHopRequest* _this = reinterpret_cast< GetNextHopRequest* >(object);
  (void)_this;
}
void GetNextHopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNextHopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNextHopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNextHopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetNextHopRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNextHopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetNextHopRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  return target;
}

size_t GetNextHopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNextHopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetNextHopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNextHopRequest::GetClassData() const { return &_class_data_; }

void GetNextHopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetNextHopRequest *>(to)->MergeFrom(
      static_cast<const GetNextHopRequest &>(from));
}


void GetNextHopRequest::MergeFrom(const GetNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNextHopRequest::CopyFrom(const GetNextHopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetNextHopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextHopRequest::IsInitialized() const {
  return true;
}

void GetNextHopRequest::InternalSwap(GetNextHopRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNextHopRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[70]);
}

// ===================================================================

class CreateNextHopGroupRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::NextHopGroup& nexthopgroup(const CreateNextHopGroupRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::NextHopGroup&
CreateNextHopGroupRequest::_Internal::nexthopgroup(const CreateNextHopGroupRequest* msg) {
  return *msg->nexthopgroup_;
}
void CreateNextHopGroupRequest::clear_nexthopgroup() {
  if (GetArenaForAllocation() == nullptr && nexthopgroup_ != nullptr) {
    delete nexthopgroup_;
  }
  nexthopgroup_ = nullptr;
}
CreateNextHopGroupRequest::CreateNextHopGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
}
CreateNextHopGroupRequest::CreateNextHopGroupRequest(const CreateNextHopGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  nexthopgroup_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    nexthopgroup_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nexthopgroup_id().empty()) {
    nexthopgroup_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nexthopgroup_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_nexthopgroup()) {
    nexthopgroup_ = new ::opi_api::network::cloud::v1alpha1::NextHopGroup(*from.nexthopgroup_);
  } else {
    nexthopgroup_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
}

inline void CreateNextHopGroupRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
nexthopgroup_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  nexthopgroup_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
nexthopgroup_ = nullptr;
}

CreateNextHopGroupRequest::~CreateNextHopGroupRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateNextHopGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nexthopgroup_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nexthopgroup_;
}

void CreateNextHopGroupRequest::ArenaDtor(void* object) {
  CreateNextHopGroupRequest* _this = reinterpret_cast< CreateNextHopGroupRequest* >(object);
  (void)_this;
}
void CreateNextHopGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateNextHopGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateNextHopGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  nexthopgroup_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && nexthopgroup_ != nullptr) {
    delete nexthopgroup_;
  }
  nexthopgroup_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateNextHopGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nexthopgroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nexthopgroup_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_nexthopgroup_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest.nexthopgroup_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateNextHopGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_nexthopgroup()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::nexthopgroup(this), target, stream);
  }

  // string nexthopgroup_id = 3;
  if (!this->_internal_nexthopgroup_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nexthopgroup_id().data(), static_cast<int>(this->_internal_nexthopgroup_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest.nexthopgroup_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_nexthopgroup_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  return target;
}

size_t CreateNextHopGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string nexthopgroup_id = 3;
  if (!this->_internal_nexthopgroup_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nexthopgroup_id());
  }

  // .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_nexthopgroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nexthopgroup_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateNextHopGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateNextHopGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateNextHopGroupRequest::GetClassData() const { return &_class_data_; }

void CreateNextHopGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateNextHopGroupRequest *>(to)->MergeFrom(
      static_cast<const CreateNextHopGroupRequest &>(from));
}


void CreateNextHopGroupRequest::MergeFrom(const CreateNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_nexthopgroup_id().empty()) {
    _internal_set_nexthopgroup_id(from._internal_nexthopgroup_id());
  }
  if (from._internal_has_nexthopgroup()) {
    _internal_mutable_nexthopgroup()->::opi_api::network::cloud::v1alpha1::NextHopGroup::MergeFrom(from._internal_nexthopgroup());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateNextHopGroupRequest::CopyFrom(const CreateNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateNextHopGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNextHopGroupRequest::IsInitialized() const {
  return true;
}

void CreateNextHopGroupRequest::InternalSwap(CreateNextHopGroupRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nexthopgroup_id_, lhs_arena,
      &other->nexthopgroup_id_, rhs_arena
  );
  swap(nexthopgroup_, other->nexthopgroup_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateNextHopGroupRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[71]);
}

// ===================================================================

class DeleteNextHopGroupRequest::_Internal {
 public:
};

DeleteNextHopGroupRequest::DeleteNextHopGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
}
DeleteNextHopGroupRequest::DeleteNextHopGroupRequest(const DeleteNextHopGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
}

inline void DeleteNextHopGroupRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteNextHopGroupRequest::~DeleteNextHopGroupRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteNextHopGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteNextHopGroupRequest::ArenaDtor(void* object) {
  DeleteNextHopGroupRequest* _this = reinterpret_cast< DeleteNextHopGroupRequest* >(object);
  (void)_this;
}
void DeleteNextHopGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteNextHopGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteNextHopGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNextHopGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteNextHopGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  return target;
}

size_t DeleteNextHopGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteNextHopGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteNextHopGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteNextHopGroupRequest::GetClassData() const { return &_class_data_; }

void DeleteNextHopGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteNextHopGroupRequest *>(to)->MergeFrom(
      static_cast<const DeleteNextHopGroupRequest &>(from));
}


void DeleteNextHopGroupRequest::MergeFrom(const DeleteNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteNextHopGroupRequest::CopyFrom(const DeleteNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteNextHopGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNextHopGroupRequest::IsInitialized() const {
  return true;
}

void DeleteNextHopGroupRequest::InternalSwap(DeleteNextHopGroupRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNextHopGroupRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[72]);
}

// ===================================================================

class UpdateNextHopGroupRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::NextHopGroup& nexthopgroup(const UpdateNextHopGroupRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateNextHopGroupRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::NextHopGroup&
UpdateNextHopGroupRequest::_Internal::nexthopgroup(const UpdateNextHopGroupRequest* msg) {
  return *msg->nexthopgroup_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateNextHopGroupRequest::_Internal::update_mask(const UpdateNextHopGroupRequest* msg) {
  return *msg->update_mask_;
}
void UpdateNextHopGroupRequest::clear_nexthopgroup() {
  if (GetArenaForAllocation() == nullptr && nexthopgroup_ != nullptr) {
    delete nexthopgroup_;
  }
  nexthopgroup_ = nullptr;
}
void UpdateNextHopGroupRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateNextHopGroupRequest::UpdateNextHopGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
}
UpdateNextHopGroupRequest::UpdateNextHopGroupRequest(const UpdateNextHopGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nexthopgroup()) {
    nexthopgroup_ = new ::opi_api::network::cloud::v1alpha1::NextHopGroup(*from.nexthopgroup_);
  } else {
    nexthopgroup_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
}

inline void UpdateNextHopGroupRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&nexthopgroup_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&nexthopgroup_)) + sizeof(update_mask_));
}

UpdateNextHopGroupRequest::~UpdateNextHopGroupRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateNextHopGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete nexthopgroup_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateNextHopGroupRequest::ArenaDtor(void* object) {
  UpdateNextHopGroupRequest* _this = reinterpret_cast< UpdateNextHopGroupRequest* >(object);
  (void)_this;
}
void UpdateNextHopGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateNextHopGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateNextHopGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && nexthopgroup_ != nullptr) {
    delete nexthopgroup_;
  }
  nexthopgroup_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateNextHopGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nexthopgroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateNextHopGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 1;
  if (this->_internal_has_nexthopgroup()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::nexthopgroup(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  return target;
}

size_t UpdateNextHopGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 1;
  if (this->_internal_has_nexthopgroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nexthopgroup_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateNextHopGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateNextHopGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateNextHopGroupRequest::GetClassData() const { return &_class_data_; }

void UpdateNextHopGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateNextHopGroupRequest *>(to)->MergeFrom(
      static_cast<const UpdateNextHopGroupRequest &>(from));
}


void UpdateNextHopGroupRequest::MergeFrom(const UpdateNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_nexthopgroup()) {
    _internal_mutable_nexthopgroup()->::opi_api::network::cloud::v1alpha1::NextHopGroup::MergeFrom(from._internal_nexthopgroup());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNextHopGroupRequest::CopyFrom(const UpdateNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateNextHopGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNextHopGroupRequest::IsInitialized() const {
  return true;
}

void UpdateNextHopGroupRequest::InternalSwap(UpdateNextHopGroupRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateNextHopGroupRequest, update_mask_)
      + sizeof(UpdateNextHopGroupRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateNextHopGroupRequest, nexthopgroup_)>(
          reinterpret_cast<char*>(&nexthopgroup_),
          reinterpret_cast<char*>(&other->nexthopgroup_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateNextHopGroupRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[73]);
}

// ===================================================================

class ListNextHopGroupsRequest::_Internal {
 public:
};

ListNextHopGroupsRequest::ListNextHopGroupsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
}
ListNextHopGroupsRequest::ListNextHopGroupsRequest(const ListNextHopGroupsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
}

inline void ListNextHopGroupsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListNextHopGroupsRequest::~ListNextHopGroupsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListNextHopGroupsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNextHopGroupsRequest::ArenaDtor(void* object) {
  ListNextHopGroupsRequest* _this = reinterpret_cast< ListNextHopGroupsRequest* >(object);
  (void)_this;
}
void ListNextHopGroupsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNextHopGroupsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNextHopGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNextHopGroupsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNextHopGroupsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  return target;
}

size_t ListNextHopGroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNextHopGroupsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListNextHopGroupsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNextHopGroupsRequest::GetClassData() const { return &_class_data_; }

void ListNextHopGroupsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListNextHopGroupsRequest *>(to)->MergeFrom(
      static_cast<const ListNextHopGroupsRequest &>(from));
}


void ListNextHopGroupsRequest::MergeFrom(const ListNextHopGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNextHopGroupsRequest::CopyFrom(const ListNextHopGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNextHopGroupsRequest::IsInitialized() const {
  return true;
}

void ListNextHopGroupsRequest::InternalSwap(ListNextHopGroupsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNextHopGroupsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[74]);
}

// ===================================================================

class ListNextHopGroupsResponse::_Internal {
 public:
};

void ListNextHopGroupsResponse::clear_nexthopgroup() {
  nexthopgroup_.Clear();
}
ListNextHopGroupsResponse::ListNextHopGroupsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  nexthopgroup_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
}
ListNextHopGroupsResponse::ListNextHopGroupsResponse(const ListNextHopGroupsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      nexthopgroup_(from.nexthopgroup_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
}

inline void ListNextHopGroupsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListNextHopGroupsResponse::~ListNextHopGroupsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListNextHopGroupsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNextHopGroupsResponse::ArenaDtor(void* object) {
  ListNextHopGroupsResponse* _this = reinterpret_cast< ListNextHopGroupsResponse* >(object);
  (void)_this;
}
void ListNextHopGroupsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNextHopGroupsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNextHopGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nexthopgroup_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNextHopGroupsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nexthopgroup(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListNextHopGroupsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_nexthopgroup_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_nexthopgroup(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  return target;
}

size_t ListNextHopGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.NextHopGroup nexthopgroup = 1;
  total_size += 1UL * this->_internal_nexthopgroup_size();
  for (const auto& msg : this->nexthopgroup_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListNextHopGroupsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListNextHopGroupsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListNextHopGroupsResponse::GetClassData() const { return &_class_data_; }

void ListNextHopGroupsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListNextHopGroupsResponse *>(to)->MergeFrom(
      static_cast<const ListNextHopGroupsResponse &>(from));
}


void ListNextHopGroupsResponse::MergeFrom(const ListNextHopGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  nexthopgroup_.MergeFrom(from.nexthopgroup_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListNextHopGroupsResponse::CopyFrom(const ListNextHopGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListNextHopGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNextHopGroupsResponse::IsInitialized() const {
  return true;
}

void ListNextHopGroupsResponse::InternalSwap(ListNextHopGroupsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  nexthopgroup_.InternalSwap(&other->nexthopgroup_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNextHopGroupsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[75]);
}

// ===================================================================

class GetNextHopGroupRequest::_Internal {
 public:
};

GetNextHopGroupRequest::GetNextHopGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
}
GetNextHopGroupRequest::GetNextHopGroupRequest(const GetNextHopGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
}

inline void GetNextHopGroupRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetNextHopGroupRequest::~GetNextHopGroupRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetNextHopGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetNextHopGroupRequest::ArenaDtor(void* object) {
  GetNextHopGroupRequest* _this = reinterpret_cast< GetNextHopGroupRequest* >(object);
  (void)_this;
}
void GetNextHopGroupRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetNextHopGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetNextHopGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNextHopGroupRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNextHopGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  return target;
}

size_t GetNextHopGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNextHopGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetNextHopGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNextHopGroupRequest::GetClassData() const { return &_class_data_; }

void GetNextHopGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetNextHopGroupRequest *>(to)->MergeFrom(
      static_cast<const GetNextHopGroupRequest &>(from));
}


void GetNextHopGroupRequest::MergeFrom(const GetNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNextHopGroupRequest::CopyFrom(const GetNextHopGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetNextHopGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNextHopGroupRequest::IsInitialized() const {
  return true;
}

void GetNextHopGroupRequest::InternalSwap(GetNextHopGroupRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNextHopGroupRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[76]);
}

// ===================================================================

class CreateSubnetRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Subnet& subnet(const CreateSubnetRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Subnet&
CreateSubnetRequest::_Internal::subnet(const CreateSubnetRequest* msg) {
  return *msg->subnet_;
}
void CreateSubnetRequest::clear_subnet() {
  if (GetArenaForAllocation() == nullptr && subnet_ != nullptr) {
    delete subnet_;
  }
  subnet_ = nullptr;
}
CreateSubnetRequest::CreateSubnetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
}
CreateSubnetRequest::CreateSubnetRequest(const CreateSubnetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  subnet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subnet_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subnet_id().empty()) {
    subnet_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnet_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_subnet()) {
    subnet_ = new ::opi_api::network::cloud::v1alpha1::Subnet(*from.subnet_);
  } else {
    subnet_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
}

inline void CreateSubnetRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subnet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subnet_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subnet_ = nullptr;
}

CreateSubnetRequest::~CreateSubnetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSubnetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subnet_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete subnet_;
}

void CreateSubnetRequest::ArenaDtor(void* object) {
  CreateSubnetRequest* _this = reinterpret_cast< CreateSubnetRequest* >(object);
  (void)_this;
}
void CreateSubnetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSubnetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSubnetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  subnet_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && subnet_ != nullptr) {
    delete subnet_;
  }
  subnet_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSubnetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSubnetRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Subnet subnet = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_subnet(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string subnet_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_subnet_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSubnetRequest.subnet_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSubnetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSubnetRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Subnet subnet = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_subnet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::subnet(this), target, stream);
  }

  // string subnet_id = 3;
  if (!this->_internal_subnet_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnet_id().data(), static_cast<int>(this->_internal_subnet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSubnetRequest.subnet_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_subnet_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  return target;
}

size_t CreateSubnetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string subnet_id = 3;
  if (!this->_internal_subnet_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnet_id());
  }

  // .opi_api.network.cloud.v1alpha1.Subnet subnet = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_subnet()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *subnet_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSubnetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSubnetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSubnetRequest::GetClassData() const { return &_class_data_; }

void CreateSubnetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateSubnetRequest *>(to)->MergeFrom(
      static_cast<const CreateSubnetRequest &>(from));
}


void CreateSubnetRequest::MergeFrom(const CreateSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_subnet_id().empty()) {
    _internal_set_subnet_id(from._internal_subnet_id());
  }
  if (from._internal_has_subnet()) {
    _internal_mutable_subnet()->::opi_api::network::cloud::v1alpha1::Subnet::MergeFrom(from._internal_subnet());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSubnetRequest::CopyFrom(const CreateSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateSubnetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSubnetRequest::IsInitialized() const {
  return true;
}

void CreateSubnetRequest::InternalSwap(CreateSubnetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &subnet_id_, lhs_arena,
      &other->subnet_id_, rhs_arena
  );
  swap(subnet_, other->subnet_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSubnetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[77]);
}

// ===================================================================

class DeleteSubnetRequest::_Internal {
 public:
};

DeleteSubnetRequest::DeleteSubnetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
}
DeleteSubnetRequest::DeleteSubnetRequest(const DeleteSubnetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
}

inline void DeleteSubnetRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSubnetRequest::~DeleteSubnetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteSubnetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteSubnetRequest::ArenaDtor(void* object) {
  DeleteSubnetRequest* _this = reinterpret_cast< DeleteSubnetRequest* >(object);
  (void)_this;
}
void DeleteSubnetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSubnetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSubnetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSubnetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteSubnetRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSubnetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteSubnetRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  return target;
}

size_t DeleteSubnetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSubnetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteSubnetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSubnetRequest::GetClassData() const { return &_class_data_; }

void DeleteSubnetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteSubnetRequest *>(to)->MergeFrom(
      static_cast<const DeleteSubnetRequest &>(from));
}


void DeleteSubnetRequest::MergeFrom(const DeleteSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSubnetRequest::CopyFrom(const DeleteSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteSubnetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubnetRequest::IsInitialized() const {
  return true;
}

void DeleteSubnetRequest::InternalSwap(DeleteSubnetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSubnetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[78]);
}

// ===================================================================

class UpdateSubnetRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Subnet& subnet(const UpdateSubnetRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateSubnetRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Subnet&
UpdateSubnetRequest::_Internal::subnet(const UpdateSubnetRequest* msg) {
  return *msg->subnet_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateSubnetRequest::_Internal::update_mask(const UpdateSubnetRequest* msg) {
  return *msg->update_mask_;
}
void UpdateSubnetRequest::clear_subnet() {
  if (GetArenaForAllocation() == nullptr && subnet_ != nullptr) {
    delete subnet_;
  }
  subnet_ = nullptr;
}
void UpdateSubnetRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateSubnetRequest::UpdateSubnetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
}
UpdateSubnetRequest::UpdateSubnetRequest(const UpdateSubnetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_subnet()) {
    subnet_ = new ::opi_api::network::cloud::v1alpha1::Subnet(*from.subnet_);
  } else {
    subnet_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
}

inline void UpdateSubnetRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&subnet_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&subnet_)) + sizeof(update_mask_));
}

UpdateSubnetRequest::~UpdateSubnetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateSubnetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete subnet_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateSubnetRequest::ArenaDtor(void* object) {
  UpdateSubnetRequest* _this = reinterpret_cast< UpdateSubnetRequest* >(object);
  (void)_this;
}
void UpdateSubnetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSubnetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSubnetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && subnet_ != nullptr) {
    delete subnet_;
  }
  subnet_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSubnetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Subnet subnet = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subnet(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSubnetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Subnet subnet = 1;
  if (this->_internal_has_subnet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::subnet(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  return target;
}

size_t UpdateSubnetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Subnet subnet = 1;
  if (this->_internal_has_subnet()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *subnet_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSubnetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateSubnetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSubnetRequest::GetClassData() const { return &_class_data_; }

void UpdateSubnetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateSubnetRequest *>(to)->MergeFrom(
      static_cast<const UpdateSubnetRequest &>(from));
}


void UpdateSubnetRequest::MergeFrom(const UpdateSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_subnet()) {
    _internal_mutable_subnet()->::opi_api::network::cloud::v1alpha1::Subnet::MergeFrom(from._internal_subnet());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSubnetRequest::CopyFrom(const UpdateSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateSubnetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSubnetRequest::IsInitialized() const {
  return true;
}

void UpdateSubnetRequest::InternalSwap(UpdateSubnetRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSubnetRequest, update_mask_)
      + sizeof(UpdateSubnetRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateSubnetRequest, subnet_)>(
          reinterpret_cast<char*>(&subnet_),
          reinterpret_cast<char*>(&other->subnet_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSubnetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[79]);
}

// ===================================================================

class ListSubnetsRequest::_Internal {
 public:
};

ListSubnetsRequest::ListSubnetsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
}
ListSubnetsRequest::ListSubnetsRequest(const ListSubnetsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
}

inline void ListSubnetsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListSubnetsRequest::~ListSubnetsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSubnetsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSubnetsRequest::ArenaDtor(void* object) {
  ListSubnetsRequest* _this = reinterpret_cast< ListSubnetsRequest* >(object);
  (void)_this;
}
void ListSubnetsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSubnetsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSubnetsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSubnetsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSubnetsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSubnetsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSubnetsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSubnetsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSubnetsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  return target;
}

size_t ListSubnetsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSubnetsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSubnetsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSubnetsRequest::GetClassData() const { return &_class_data_; }

void ListSubnetsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSubnetsRequest *>(to)->MergeFrom(
      static_cast<const ListSubnetsRequest &>(from));
}


void ListSubnetsRequest::MergeFrom(const ListSubnetsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSubnetsRequest::CopyFrom(const ListSubnetsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSubnetsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubnetsRequest::IsInitialized() const {
  return true;
}

void ListSubnetsRequest::InternalSwap(ListSubnetsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSubnetsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[80]);
}

// ===================================================================

class ListSubnetsResponse::_Internal {
 public:
};

void ListSubnetsResponse::clear_subnet() {
  subnet_.Clear();
}
ListSubnetsResponse::ListSubnetsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  subnet_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
}
ListSubnetsResponse::ListSubnetsResponse(const ListSubnetsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subnet_(from.subnet_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
}

inline void ListSubnetsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListSubnetsResponse::~ListSubnetsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSubnetsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSubnetsResponse::ArenaDtor(void* object) {
  ListSubnetsResponse* _this = reinterpret_cast< ListSubnetsResponse* >(object);
  (void)_this;
}
void ListSubnetsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSubnetsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSubnetsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnet_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSubnetsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Subnet subnet = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subnet(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSubnetsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSubnetsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Subnet subnet = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subnet_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_subnet(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSubnetsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  return target;
}

size_t ListSubnetsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Subnet subnet = 1;
  total_size += 1UL * this->_internal_subnet_size();
  for (const auto& msg : this->subnet_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSubnetsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSubnetsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSubnetsResponse::GetClassData() const { return &_class_data_; }

void ListSubnetsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSubnetsResponse *>(to)->MergeFrom(
      static_cast<const ListSubnetsResponse &>(from));
}


void ListSubnetsResponse::MergeFrom(const ListSubnetsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  subnet_.MergeFrom(from.subnet_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSubnetsResponse::CopyFrom(const ListSubnetsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSubnetsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubnetsResponse::IsInitialized() const {
  return true;
}

void ListSubnetsResponse::InternalSwap(ListSubnetsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  subnet_.InternalSwap(&other->subnet_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSubnetsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[81]);
}

// ===================================================================

class GetSubnetRequest::_Internal {
 public:
};

GetSubnetRequest::GetSubnetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
}
GetSubnetRequest::GetSubnetRequest(const GetSubnetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
}

inline void GetSubnetRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSubnetRequest::~GetSubnetRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSubnetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSubnetRequest::ArenaDtor(void* object) {
  GetSubnetRequest* _this = reinterpret_cast< GetSubnetRequest* >(object);
  (void)_this;
}
void GetSubnetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSubnetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSubnetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSubnetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetSubnetRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSubnetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetSubnetRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  return target;
}

size_t GetSubnetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSubnetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSubnetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSubnetRequest::GetClassData() const { return &_class_data_; }

void GetSubnetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSubnetRequest *>(to)->MergeFrom(
      static_cast<const GetSubnetRequest &>(from));
}


void GetSubnetRequest::MergeFrom(const GetSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubnetRequest::CopyFrom(const GetSubnetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetSubnetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSubnetRequest::IsInitialized() const {
  return true;
}

void GetSubnetRequest::InternalSwap(GetSubnetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSubnetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[82]);
}

// ===================================================================

class CreateTunnelRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Tunnel& tunnel(const CreateTunnelRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Tunnel&
CreateTunnelRequest::_Internal::tunnel(const CreateTunnelRequest* msg) {
  return *msg->tunnel_;
}
void CreateTunnelRequest::clear_tunnel() {
  if (GetArenaForAllocation() == nullptr && tunnel_ != nullptr) {
    delete tunnel_;
  }
  tunnel_ = nullptr;
}
CreateTunnelRequest::CreateTunnelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
}
CreateTunnelRequest::CreateTunnelRequest(const CreateTunnelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  tunnel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tunnel_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tunnel_id().empty()) {
    tunnel_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tunnel_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_tunnel()) {
    tunnel_ = new ::opi_api::network::cloud::v1alpha1::Tunnel(*from.tunnel_);
  } else {
    tunnel_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
}

inline void CreateTunnelRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tunnel_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tunnel_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tunnel_ = nullptr;
}

CreateTunnelRequest::~CreateTunnelRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateTunnelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tunnel_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tunnel_;
}

void CreateTunnelRequest::ArenaDtor(void* object) {
  CreateTunnelRequest* _this = reinterpret_cast< CreateTunnelRequest* >(object);
  (void)_this;
}
void CreateTunnelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTunnelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateTunnelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  tunnel_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && tunnel_ != nullptr) {
    delete tunnel_;
  }
  tunnel_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTunnelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateTunnelRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_tunnel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tunnel_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_tunnel_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateTunnelRequest.tunnel_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateTunnelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateTunnelRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_tunnel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::tunnel(this), target, stream);
  }

  // string tunnel_id = 3;
  if (!this->_internal_tunnel_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tunnel_id().data(), static_cast<int>(this->_internal_tunnel_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateTunnelRequest.tunnel_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tunnel_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  return target;
}

size_t CreateTunnelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string tunnel_id = 3;
  if (!this->_internal_tunnel_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tunnel_id());
  }

  // .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_tunnel()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tunnel_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateTunnelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateTunnelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateTunnelRequest::GetClassData() const { return &_class_data_; }

void CreateTunnelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateTunnelRequest *>(to)->MergeFrom(
      static_cast<const CreateTunnelRequest &>(from));
}


void CreateTunnelRequest::MergeFrom(const CreateTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_tunnel_id().empty()) {
    _internal_set_tunnel_id(from._internal_tunnel_id());
  }
  if (from._internal_has_tunnel()) {
    _internal_mutable_tunnel()->::opi_api::network::cloud::v1alpha1::Tunnel::MergeFrom(from._internal_tunnel());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTunnelRequest::CopyFrom(const CreateTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateTunnelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTunnelRequest::IsInitialized() const {
  return true;
}

void CreateTunnelRequest::InternalSwap(CreateTunnelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tunnel_id_, lhs_arena,
      &other->tunnel_id_, rhs_arena
  );
  swap(tunnel_, other->tunnel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTunnelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[83]);
}

// ===================================================================

class DeleteTunnelRequest::_Internal {
 public:
};

DeleteTunnelRequest::DeleteTunnelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
}
DeleteTunnelRequest::DeleteTunnelRequest(const DeleteTunnelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
}

inline void DeleteTunnelRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteTunnelRequest::~DeleteTunnelRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteTunnelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteTunnelRequest::ArenaDtor(void* object) {
  DeleteTunnelRequest* _this = reinterpret_cast< DeleteTunnelRequest* >(object);
  (void)_this;
}
void DeleteTunnelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteTunnelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteTunnelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteTunnelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteTunnelRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteTunnelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteTunnelRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  return target;
}

size_t DeleteTunnelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteTunnelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteTunnelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteTunnelRequest::GetClassData() const { return &_class_data_; }

void DeleteTunnelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteTunnelRequest *>(to)->MergeFrom(
      static_cast<const DeleteTunnelRequest &>(from));
}


void DeleteTunnelRequest::MergeFrom(const DeleteTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteTunnelRequest::CopyFrom(const DeleteTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteTunnelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteTunnelRequest::IsInitialized() const {
  return true;
}

void DeleteTunnelRequest::InternalSwap(DeleteTunnelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteTunnelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[84]);
}

// ===================================================================

class UpdateTunnelRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Tunnel& tunnel(const UpdateTunnelRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateTunnelRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Tunnel&
UpdateTunnelRequest::_Internal::tunnel(const UpdateTunnelRequest* msg) {
  return *msg->tunnel_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateTunnelRequest::_Internal::update_mask(const UpdateTunnelRequest* msg) {
  return *msg->update_mask_;
}
void UpdateTunnelRequest::clear_tunnel() {
  if (GetArenaForAllocation() == nullptr && tunnel_ != nullptr) {
    delete tunnel_;
  }
  tunnel_ = nullptr;
}
void UpdateTunnelRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateTunnelRequest::UpdateTunnelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
}
UpdateTunnelRequest::UpdateTunnelRequest(const UpdateTunnelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tunnel()) {
    tunnel_ = new ::opi_api::network::cloud::v1alpha1::Tunnel(*from.tunnel_);
  } else {
    tunnel_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
}

inline void UpdateTunnelRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&tunnel_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&tunnel_)) + sizeof(update_mask_));
}

UpdateTunnelRequest::~UpdateTunnelRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateTunnelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete tunnel_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateTunnelRequest::ArenaDtor(void* object) {
  UpdateTunnelRequest* _this = reinterpret_cast< UpdateTunnelRequest* >(object);
  (void)_this;
}
void UpdateTunnelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateTunnelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateTunnelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && tunnel_ != nullptr) {
    delete tunnel_;
  }
  tunnel_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateTunnelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tunnel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateTunnelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 1;
  if (this->_internal_has_tunnel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tunnel(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  return target;
}

size_t UpdateTunnelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 1;
  if (this->_internal_has_tunnel()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tunnel_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateTunnelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateTunnelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateTunnelRequest::GetClassData() const { return &_class_data_; }

void UpdateTunnelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateTunnelRequest *>(to)->MergeFrom(
      static_cast<const UpdateTunnelRequest &>(from));
}


void UpdateTunnelRequest::MergeFrom(const UpdateTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_tunnel()) {
    _internal_mutable_tunnel()->::opi_api::network::cloud::v1alpha1::Tunnel::MergeFrom(from._internal_tunnel());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTunnelRequest::CopyFrom(const UpdateTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateTunnelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateTunnelRequest::IsInitialized() const {
  return true;
}

void UpdateTunnelRequest::InternalSwap(UpdateTunnelRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateTunnelRequest, update_mask_)
      + sizeof(UpdateTunnelRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateTunnelRequest, tunnel_)>(
          reinterpret_cast<char*>(&tunnel_),
          reinterpret_cast<char*>(&other->tunnel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateTunnelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[85]);
}

// ===================================================================

class ListTunnelsRequest::_Internal {
 public:
};

ListTunnelsRequest::ListTunnelsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
}
ListTunnelsRequest::ListTunnelsRequest(const ListTunnelsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
}

inline void ListTunnelsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListTunnelsRequest::~ListTunnelsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListTunnelsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListTunnelsRequest::ArenaDtor(void* object) {
  ListTunnelsRequest* _this = reinterpret_cast< ListTunnelsRequest* >(object);
  (void)_this;
}
void ListTunnelsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTunnelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTunnelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTunnelsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListTunnelsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListTunnelsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListTunnelsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListTunnelsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListTunnelsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  return target;
}

size_t ListTunnelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTunnelsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListTunnelsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTunnelsRequest::GetClassData() const { return &_class_data_; }

void ListTunnelsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListTunnelsRequest *>(to)->MergeFrom(
      static_cast<const ListTunnelsRequest &>(from));
}


void ListTunnelsRequest::MergeFrom(const ListTunnelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListTunnelsRequest::CopyFrom(const ListTunnelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListTunnelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTunnelsRequest::IsInitialized() const {
  return true;
}

void ListTunnelsRequest::InternalSwap(ListTunnelsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTunnelsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[86]);
}

// ===================================================================

class ListTunnelsResponse::_Internal {
 public:
};

void ListTunnelsResponse::clear_tunnel() {
  tunnel_.Clear();
}
ListTunnelsResponse::ListTunnelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tunnel_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
}
ListTunnelsResponse::ListTunnelsResponse(const ListTunnelsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tunnel_(from.tunnel_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
}

inline void ListTunnelsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListTunnelsResponse::~ListTunnelsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListTunnelsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListTunnelsResponse::ArenaDtor(void* object) {
  ListTunnelsResponse* _this = reinterpret_cast< ListTunnelsResponse* >(object);
  (void)_this;
}
void ListTunnelsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTunnelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTunnelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tunnel_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTunnelsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tunnel(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListTunnelsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListTunnelsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tunnel_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tunnel(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListTunnelsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  return target;
}

size_t ListTunnelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Tunnel tunnel = 1;
  total_size += 1UL * this->_internal_tunnel_size();
  for (const auto& msg : this->tunnel_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTunnelsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListTunnelsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTunnelsResponse::GetClassData() const { return &_class_data_; }

void ListTunnelsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListTunnelsResponse *>(to)->MergeFrom(
      static_cast<const ListTunnelsResponse &>(from));
}


void ListTunnelsResponse::MergeFrom(const ListTunnelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tunnel_.MergeFrom(from.tunnel_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListTunnelsResponse::CopyFrom(const ListTunnelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListTunnelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTunnelsResponse::IsInitialized() const {
  return true;
}

void ListTunnelsResponse::InternalSwap(ListTunnelsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tunnel_.InternalSwap(&other->tunnel_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTunnelsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[87]);
}

// ===================================================================

class GetTunnelRequest::_Internal {
 public:
};

GetTunnelRequest::GetTunnelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
}
GetTunnelRequest::GetTunnelRequest(const GetTunnelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
}

inline void GetTunnelRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTunnelRequest::~GetTunnelRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetTunnelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTunnelRequest::ArenaDtor(void* object) {
  GetTunnelRequest* _this = reinterpret_cast< GetTunnelRequest* >(object);
  (void)_this;
}
void GetTunnelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTunnelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTunnelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTunnelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetTunnelRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTunnelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetTunnelRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  return target;
}

size_t GetTunnelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTunnelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetTunnelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTunnelRequest::GetClassData() const { return &_class_data_; }

void GetTunnelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetTunnelRequest *>(to)->MergeFrom(
      static_cast<const GetTunnelRequest &>(from));
}


void GetTunnelRequest::MergeFrom(const GetTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTunnelRequest::CopyFrom(const GetTunnelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetTunnelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTunnelRequest::IsInitialized() const {
  return true;
}

void GetTunnelRequest::InternalSwap(GetTunnelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTunnelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[88]);
}

// ===================================================================

class CreateVpcRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Vpc& vpc(const CreateVpcRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Vpc&
CreateVpcRequest::_Internal::vpc(const CreateVpcRequest* msg) {
  return *msg->vpc_;
}
void CreateVpcRequest::clear_vpc() {
  if (GetArenaForAllocation() == nullptr && vpc_ != nullptr) {
    delete vpc_;
  }
  vpc_ = nullptr;
}
CreateVpcRequest::CreateVpcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
}
CreateVpcRequest::CreateVpcRequest(const CreateVpcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  vpc_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    vpc_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vpc_id().empty()) {
    vpc_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vpc_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_vpc()) {
    vpc_ = new ::opi_api::network::cloud::v1alpha1::Vpc(*from.vpc_);
  } else {
    vpc_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
}

inline void CreateVpcRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
vpc_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  vpc_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
vpc_ = nullptr;
}

CreateVpcRequest::~CreateVpcRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateVpcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vpc_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vpc_;
}

void CreateVpcRequest::ArenaDtor(void* object) {
  CreateVpcRequest* _this = reinterpret_cast< CreateVpcRequest* >(object);
  (void)_this;
}
void CreateVpcRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVpcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  vpc_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && vpc_ != nullptr) {
    delete vpc_;
  }
  vpc_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVpcRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateVpcRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.Vpc vpc = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vpc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string vpc_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_vpc_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateVpcRequest.vpc_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateVpcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateVpcRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.Vpc vpc = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_vpc()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vpc(this), target, stream);
  }

  // string vpc_id = 3;
  if (!this->_internal_vpc_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vpc_id().data(), static_cast<int>(this->_internal_vpc_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateVpcRequest.vpc_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_vpc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  return target;
}

size_t CreateVpcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string vpc_id = 3;
  if (!this->_internal_vpc_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vpc_id());
  }

  // .opi_api.network.cloud.v1alpha1.Vpc vpc = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_vpc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vpc_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateVpcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateVpcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateVpcRequest::GetClassData() const { return &_class_data_; }

void CreateVpcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateVpcRequest *>(to)->MergeFrom(
      static_cast<const CreateVpcRequest &>(from));
}


void CreateVpcRequest::MergeFrom(const CreateVpcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_vpc_id().empty()) {
    _internal_set_vpc_id(from._internal_vpc_id());
  }
  if (from._internal_has_vpc()) {
    _internal_mutable_vpc()->::opi_api::network::cloud::v1alpha1::Vpc::MergeFrom(from._internal_vpc());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVpcRequest::CopyFrom(const CreateVpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateVpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVpcRequest::IsInitialized() const {
  return true;
}

void CreateVpcRequest::InternalSwap(CreateVpcRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vpc_id_, lhs_arena,
      &other->vpc_id_, rhs_arena
  );
  swap(vpc_, other->vpc_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVpcRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[89]);
}

// ===================================================================

class DeleteVpcRequest::_Internal {
 public:
};

DeleteVpcRequest::DeleteVpcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
}
DeleteVpcRequest::DeleteVpcRequest(const DeleteVpcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
}

inline void DeleteVpcRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteVpcRequest::~DeleteVpcRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteVpcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteVpcRequest::ArenaDtor(void* object) {
  DeleteVpcRequest* _this = reinterpret_cast< DeleteVpcRequest* >(object);
  (void)_this;
}
void DeleteVpcRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVpcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVpcRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteVpcRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteVpcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteVpcRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  return target;
}

size_t DeleteVpcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteVpcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteVpcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteVpcRequest::GetClassData() const { return &_class_data_; }

void DeleteVpcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteVpcRequest *>(to)->MergeFrom(
      static_cast<const DeleteVpcRequest &>(from));
}


void DeleteVpcRequest::MergeFrom(const DeleteVpcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVpcRequest::CopyFrom(const DeleteVpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteVpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVpcRequest::IsInitialized() const {
  return true;
}

void DeleteVpcRequest::InternalSwap(DeleteVpcRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVpcRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[90]);
}

// ===================================================================

class UpdateVpcRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::Vpc& vpc(const UpdateVpcRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateVpcRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::Vpc&
UpdateVpcRequest::_Internal::vpc(const UpdateVpcRequest* msg) {
  return *msg->vpc_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateVpcRequest::_Internal::update_mask(const UpdateVpcRequest* msg) {
  return *msg->update_mask_;
}
void UpdateVpcRequest::clear_vpc() {
  if (GetArenaForAllocation() == nullptr && vpc_ != nullptr) {
    delete vpc_;
  }
  vpc_ = nullptr;
}
void UpdateVpcRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateVpcRequest::UpdateVpcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
}
UpdateVpcRequest::UpdateVpcRequest(const UpdateVpcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_vpc()) {
    vpc_ = new ::opi_api::network::cloud::v1alpha1::Vpc(*from.vpc_);
  } else {
    vpc_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
}

inline void UpdateVpcRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&vpc_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&vpc_)) + sizeof(update_mask_));
}

UpdateVpcRequest::~UpdateVpcRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateVpcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete vpc_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateVpcRequest::ArenaDtor(void* object) {
  UpdateVpcRequest* _this = reinterpret_cast< UpdateVpcRequest* >(object);
  (void)_this;
}
void UpdateVpcRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateVpcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateVpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && vpc_ != nullptr) {
    delete vpc_;
  }
  vpc_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVpcRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.Vpc vpc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_vpc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateVpcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Vpc vpc = 1;
  if (this->_internal_has_vpc()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::vpc(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  return target;
}

size_t UpdateVpcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.Vpc vpc = 1;
  if (this->_internal_has_vpc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vpc_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateVpcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateVpcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateVpcRequest::GetClassData() const { return &_class_data_; }

void UpdateVpcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateVpcRequest *>(to)->MergeFrom(
      static_cast<const UpdateVpcRequest &>(from));
}


void UpdateVpcRequest::MergeFrom(const UpdateVpcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_vpc()) {
    _internal_mutable_vpc()->::opi_api::network::cloud::v1alpha1::Vpc::MergeFrom(from._internal_vpc());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateVpcRequest::CopyFrom(const UpdateVpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateVpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVpcRequest::IsInitialized() const {
  return true;
}

void UpdateVpcRequest::InternalSwap(UpdateVpcRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateVpcRequest, update_mask_)
      + sizeof(UpdateVpcRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateVpcRequest, vpc_)>(
          reinterpret_cast<char*>(&vpc_),
          reinterpret_cast<char*>(&other->vpc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVpcRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[91]);
}

// ===================================================================

class ListVpcsRequest::_Internal {
 public:
};

ListVpcsRequest::ListVpcsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
}
ListVpcsRequest::ListVpcsRequest(const ListVpcsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
}

inline void ListVpcsRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListVpcsRequest::~ListVpcsRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListVpcsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVpcsRequest::ArenaDtor(void* object) {
  ListVpcsRequest* _this = reinterpret_cast< ListVpcsRequest* >(object);
  (void)_this;
}
void ListVpcsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVpcsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVpcsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVpcsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVpcsRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVpcsRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVpcsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVpcsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVpcsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  return target;
}

size_t ListVpcsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVpcsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListVpcsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVpcsRequest::GetClassData() const { return &_class_data_; }

void ListVpcsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListVpcsRequest *>(to)->MergeFrom(
      static_cast<const ListVpcsRequest &>(from));
}


void ListVpcsRequest::MergeFrom(const ListVpcsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVpcsRequest::CopyFrom(const ListVpcsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListVpcsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVpcsRequest::IsInitialized() const {
  return true;
}

void ListVpcsRequest::InternalSwap(ListVpcsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVpcsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[92]);
}

// ===================================================================

class ListVpcsResponse::_Internal {
 public:
};

void ListVpcsResponse::clear_vpc() {
  vpc_.Clear();
}
ListVpcsResponse::ListVpcsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vpc_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
}
ListVpcsResponse::ListVpcsResponse(const ListVpcsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vpc_(from.vpc_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
}

inline void ListVpcsResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVpcsResponse::~ListVpcsResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListVpcsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVpcsResponse::ArenaDtor(void* object) {
  ListVpcsResponse* _this = reinterpret_cast< ListVpcsResponse* >(object);
  (void)_this;
}
void ListVpcsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVpcsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVpcsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vpc_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVpcsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.Vpc vpc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vpc(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVpcsResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVpcsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Vpc vpc = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vpc_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_vpc(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVpcsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  return target;
}

size_t ListVpcsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.Vpc vpc = 1;
  total_size += 1UL * this->_internal_vpc_size();
  for (const auto& msg : this->vpc_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVpcsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListVpcsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVpcsResponse::GetClassData() const { return &_class_data_; }

void ListVpcsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListVpcsResponse *>(to)->MergeFrom(
      static_cast<const ListVpcsResponse &>(from));
}


void ListVpcsResponse::MergeFrom(const ListVpcsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vpc_.MergeFrom(from.vpc_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVpcsResponse::CopyFrom(const ListVpcsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListVpcsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVpcsResponse::IsInitialized() const {
  return true;
}

void ListVpcsResponse::InternalSwap(ListVpcsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vpc_.InternalSwap(&other->vpc_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVpcsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[93]);
}

// ===================================================================

class GetVpcRequest::_Internal {
 public:
};

GetVpcRequest::GetVpcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetVpcRequest)
}
GetVpcRequest::GetVpcRequest(const GetVpcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetVpcRequest)
}

inline void GetVpcRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVpcRequest::~GetVpcRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVpcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetVpcRequest::ArenaDtor(void* object) {
  GetVpcRequest* _this = reinterpret_cast< GetVpcRequest* >(object);
  (void)_this;
}
void GetVpcRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVpcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVpcRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetVpcRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVpcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetVpcRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  return target;
}

size_t GetVpcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVpcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVpcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVpcRequest::GetClassData() const { return &_class_data_; }

void GetVpcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVpcRequest *>(to)->MergeFrom(
      static_cast<const GetVpcRequest &>(from));
}


void GetVpcRequest::MergeFrom(const GetVpcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVpcRequest::CopyFrom(const GetVpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetVpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVpcRequest::IsInitialized() const {
  return true;
}

void GetVpcRequest::InternalSwap(GetVpcRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVpcRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[94]);
}

// ===================================================================

class CreateVPCPeerRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::VPCPeer& vpcpeer(const CreateVPCPeerRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::VPCPeer&
CreateVPCPeerRequest::_Internal::vpcpeer(const CreateVPCPeerRequest* msg) {
  return *msg->vpcpeer_;
}
void CreateVPCPeerRequest::clear_vpcpeer() {
  if (GetArenaForAllocation() == nullptr && vpcpeer_ != nullptr) {
    delete vpcpeer_;
  }
  vpcpeer_ = nullptr;
}
CreateVPCPeerRequest::CreateVPCPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
}
CreateVPCPeerRequest::CreateVPCPeerRequest(const CreateVPCPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  vpcpeer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    vpcpeer_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vpcpeer_id().empty()) {
    vpcpeer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vpcpeer_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_vpcpeer()) {
    vpcpeer_ = new ::opi_api::network::cloud::v1alpha1::VPCPeer(*from.vpcpeer_);
  } else {
    vpcpeer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
}

inline void CreateVPCPeerRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
vpcpeer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  vpcpeer_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
vpcpeer_ = nullptr;
}

CreateVPCPeerRequest::~CreateVPCPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateVPCPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vpcpeer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete vpcpeer_;
}

void CreateVPCPeerRequest::ArenaDtor(void* object) {
  CreateVPCPeerRequest* _this = reinterpret_cast< CreateVPCPeerRequest* >(object);
  (void)_this;
}
void CreateVPCPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVPCPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVPCPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  vpcpeer_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && vpcpeer_ != nullptr) {
    delete vpcpeer_;
  }
  vpcpeer_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVPCPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vpcpeer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string vpcpeer_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_vpcpeer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest.vpcpeer_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateVPCPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_vpcpeer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vpcpeer(this), target, stream);
  }

  // string vpcpeer_id = 3;
  if (!this->_internal_vpcpeer_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vpcpeer_id().data(), static_cast<int>(this->_internal_vpcpeer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest.vpcpeer_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_vpcpeer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  return target;
}

size_t CreateVPCPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string vpcpeer_id = 3;
  if (!this->_internal_vpcpeer_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vpcpeer_id());
  }

  // .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_vpcpeer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vpcpeer_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateVPCPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateVPCPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateVPCPeerRequest::GetClassData() const { return &_class_data_; }

void CreateVPCPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateVPCPeerRequest *>(to)->MergeFrom(
      static_cast<const CreateVPCPeerRequest &>(from));
}


void CreateVPCPeerRequest::MergeFrom(const CreateVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_vpcpeer_id().empty()) {
    _internal_set_vpcpeer_id(from._internal_vpcpeer_id());
  }
  if (from._internal_has_vpcpeer()) {
    _internal_mutable_vpcpeer()->::opi_api::network::cloud::v1alpha1::VPCPeer::MergeFrom(from._internal_vpcpeer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateVPCPeerRequest::CopyFrom(const CreateVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateVPCPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVPCPeerRequest::IsInitialized() const {
  return true;
}

void CreateVPCPeerRequest::InternalSwap(CreateVPCPeerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vpcpeer_id_, lhs_arena,
      &other->vpcpeer_id_, rhs_arena
  );
  swap(vpcpeer_, other->vpcpeer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVPCPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[95]);
}

// ===================================================================

class DeleteVPCPeerRequest::_Internal {
 public:
};

DeleteVPCPeerRequest::DeleteVPCPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
}
DeleteVPCPeerRequest::DeleteVPCPeerRequest(const DeleteVPCPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
}

inline void DeleteVPCPeerRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteVPCPeerRequest::~DeleteVPCPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteVPCPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteVPCPeerRequest::ArenaDtor(void* object) {
  DeleteVPCPeerRequest* _this = reinterpret_cast< DeleteVPCPeerRequest* >(object);
  (void)_this;
}
void DeleteVPCPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVPCPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVPCPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVPCPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteVPCPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  return target;
}

size_t DeleteVPCPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteVPCPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteVPCPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteVPCPeerRequest::GetClassData() const { return &_class_data_; }

void DeleteVPCPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteVPCPeerRequest *>(to)->MergeFrom(
      static_cast<const DeleteVPCPeerRequest &>(from));
}


void DeleteVPCPeerRequest::MergeFrom(const DeleteVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteVPCPeerRequest::CopyFrom(const DeleteVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteVPCPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVPCPeerRequest::IsInitialized() const {
  return true;
}

void DeleteVPCPeerRequest::InternalSwap(DeleteVPCPeerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVPCPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[96]);
}

// ===================================================================

class UpdateVPCPeerRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::VPCPeer& vpcpeer(const UpdateVPCPeerRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateVPCPeerRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::VPCPeer&
UpdateVPCPeerRequest::_Internal::vpcpeer(const UpdateVPCPeerRequest* msg) {
  return *msg->vpcpeer_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateVPCPeerRequest::_Internal::update_mask(const UpdateVPCPeerRequest* msg) {
  return *msg->update_mask_;
}
void UpdateVPCPeerRequest::clear_vpcpeer() {
  if (GetArenaForAllocation() == nullptr && vpcpeer_ != nullptr) {
    delete vpcpeer_;
  }
  vpcpeer_ = nullptr;
}
void UpdateVPCPeerRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateVPCPeerRequest::UpdateVPCPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
}
UpdateVPCPeerRequest::UpdateVPCPeerRequest(const UpdateVPCPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_vpcpeer()) {
    vpcpeer_ = new ::opi_api::network::cloud::v1alpha1::VPCPeer(*from.vpcpeer_);
  } else {
    vpcpeer_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
}

inline void UpdateVPCPeerRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&vpcpeer_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&vpcpeer_)) + sizeof(update_mask_));
}

UpdateVPCPeerRequest::~UpdateVPCPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateVPCPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete vpcpeer_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateVPCPeerRequest::ArenaDtor(void* object) {
  UpdateVPCPeerRequest* _this = reinterpret_cast< UpdateVPCPeerRequest* >(object);
  (void)_this;
}
void UpdateVPCPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateVPCPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateVPCPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && vpcpeer_ != nullptr) {
    delete vpcpeer_;
  }
  vpcpeer_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateVPCPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_vpcpeer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateVPCPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 1;
  if (this->_internal_has_vpcpeer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::vpcpeer(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  return target;
}

size_t UpdateVPCPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 1;
  if (this->_internal_has_vpcpeer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vpcpeer_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateVPCPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateVPCPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateVPCPeerRequest::GetClassData() const { return &_class_data_; }

void UpdateVPCPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateVPCPeerRequest *>(to)->MergeFrom(
      static_cast<const UpdateVPCPeerRequest &>(from));
}


void UpdateVPCPeerRequest::MergeFrom(const UpdateVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_vpcpeer()) {
    _internal_mutable_vpcpeer()->::opi_api::network::cloud::v1alpha1::VPCPeer::MergeFrom(from._internal_vpcpeer());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateVPCPeerRequest::CopyFrom(const UpdateVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateVPCPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVPCPeerRequest::IsInitialized() const {
  return true;
}

void UpdateVPCPeerRequest::InternalSwap(UpdateVPCPeerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateVPCPeerRequest, update_mask_)
      + sizeof(UpdateVPCPeerRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateVPCPeerRequest, vpcpeer_)>(
          reinterpret_cast<char*>(&vpcpeer_),
          reinterpret_cast<char*>(&other->vpcpeer_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateVPCPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[97]);
}

// ===================================================================

class ListVPCPeersRequest::_Internal {
 public:
};

ListVPCPeersRequest::ListVPCPeersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
}
ListVPCPeersRequest::ListVPCPeersRequest(const ListVPCPeersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
}

inline void ListVPCPeersRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListVPCPeersRequest::~ListVPCPeersRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListVPCPeersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVPCPeersRequest::ArenaDtor(void* object) {
  ListVPCPeersRequest* _this = reinterpret_cast< ListVPCPeersRequest* >(object);
  (void)_this;
}
void ListVPCPeersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVPCPeersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVPCPeersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVPCPeersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVPCPeersRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVPCPeersRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVPCPeersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVPCPeersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVPCPeersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  return target;
}

size_t ListVPCPeersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVPCPeersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListVPCPeersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVPCPeersRequest::GetClassData() const { return &_class_data_; }

void ListVPCPeersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListVPCPeersRequest *>(to)->MergeFrom(
      static_cast<const ListVPCPeersRequest &>(from));
}


void ListVPCPeersRequest::MergeFrom(const ListVPCPeersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVPCPeersRequest::CopyFrom(const ListVPCPeersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListVPCPeersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVPCPeersRequest::IsInitialized() const {
  return true;
}

void ListVPCPeersRequest::InternalSwap(ListVPCPeersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVPCPeersRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[98]);
}

// ===================================================================

class ListVPCPeersResponse::_Internal {
 public:
};

void ListVPCPeersResponse::clear_vpcpeer() {
  vpcpeer_.Clear();
}
ListVPCPeersResponse::ListVPCPeersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  vpcpeer_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
}
ListVPCPeersResponse::ListVPCPeersResponse(const ListVPCPeersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vpcpeer_(from.vpcpeer_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
}

inline void ListVPCPeersResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListVPCPeersResponse::~ListVPCPeersResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListVPCPeersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVPCPeersResponse::ArenaDtor(void* object) {
  ListVPCPeersResponse* _this = reinterpret_cast< ListVPCPeersResponse* >(object);
  (void)_this;
}
void ListVPCPeersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVPCPeersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVPCPeersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vpcpeer_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVPCPeersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vpcpeer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListVPCPeersResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListVPCPeersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vpcpeer_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_vpcpeer(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListVPCPeersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  return target;
}

size_t ListVPCPeersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.VPCPeer vpcpeer = 1;
  total_size += 1UL * this->_internal_vpcpeer_size();
  for (const auto& msg : this->vpcpeer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListVPCPeersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListVPCPeersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListVPCPeersResponse::GetClassData() const { return &_class_data_; }

void ListVPCPeersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListVPCPeersResponse *>(to)->MergeFrom(
      static_cast<const ListVPCPeersResponse &>(from));
}


void ListVPCPeersResponse::MergeFrom(const ListVPCPeersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  vpcpeer_.MergeFrom(from.vpcpeer_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListVPCPeersResponse::CopyFrom(const ListVPCPeersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListVPCPeersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVPCPeersResponse::IsInitialized() const {
  return true;
}

void ListVPCPeersResponse::InternalSwap(ListVPCPeersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  vpcpeer_.InternalSwap(&other->vpcpeer_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVPCPeersResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[99]);
}

// ===================================================================

class GetVPCPeerRequest::_Internal {
 public:
};

GetVPCPeerRequest::GetVPCPeerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
}
GetVPCPeerRequest::GetVPCPeerRequest(const GetVPCPeerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
}

inline void GetVPCPeerRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVPCPeerRequest::~GetVPCPeerRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVPCPeerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetVPCPeerRequest::ArenaDtor(void* object) {
  GetVPCPeerRequest* _this = reinterpret_cast< GetVPCPeerRequest* >(object);
  (void)_this;
}
void GetVPCPeerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVPCPeerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVPCPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVPCPeerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetVPCPeerRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVPCPeerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetVPCPeerRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  return target;
}

size_t GetVPCPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVPCPeerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVPCPeerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVPCPeerRequest::GetClassData() const { return &_class_data_; }

void GetVPCPeerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVPCPeerRequest *>(to)->MergeFrom(
      static_cast<const GetVPCPeerRequest &>(from));
}


void GetVPCPeerRequest::MergeFrom(const GetVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVPCPeerRequest::CopyFrom(const GetVPCPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetVPCPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVPCPeerRequest::IsInitialized() const {
  return true;
}

void GetVPCPeerRequest::InternalSwap(GetVPCPeerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVPCPeerRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[100]);
}

// ===================================================================

class CreateSecurityPolicyRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::SecurityPolicy& securitypolicy(const CreateSecurityPolicyRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::SecurityPolicy&
CreateSecurityPolicyRequest::_Internal::securitypolicy(const CreateSecurityPolicyRequest* msg) {
  return *msg->securitypolicy_;
}
void CreateSecurityPolicyRequest::clear_securitypolicy() {
  if (GetArenaForAllocation() == nullptr && securitypolicy_ != nullptr) {
    delete securitypolicy_;
  }
  securitypolicy_ = nullptr;
}
CreateSecurityPolicyRequest::CreateSecurityPolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
}
CreateSecurityPolicyRequest::CreateSecurityPolicyRequest(const CreateSecurityPolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  securitypolicy_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    securitypolicy_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_securitypolicy_id().empty()) {
    securitypolicy_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_securitypolicy_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_securitypolicy()) {
    securitypolicy_ = new ::opi_api::network::cloud::v1alpha1::SecurityPolicy(*from.securitypolicy_);
  } else {
    securitypolicy_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
}

inline void CreateSecurityPolicyRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
securitypolicy_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  securitypolicy_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
securitypolicy_ = nullptr;
}

CreateSecurityPolicyRequest::~CreateSecurityPolicyRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSecurityPolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  securitypolicy_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete securitypolicy_;
}

void CreateSecurityPolicyRequest::ArenaDtor(void* object) {
  CreateSecurityPolicyRequest* _this = reinterpret_cast< CreateSecurityPolicyRequest* >(object);
  (void)_this;
}
void CreateSecurityPolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSecurityPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSecurityPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  securitypolicy_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && securitypolicy_ != nullptr) {
    delete securitypolicy_;
  }
  securitypolicy_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSecurityPolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_securitypolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string securitypolicy_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_securitypolicy_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest.securitypolicy_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSecurityPolicyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_securitypolicy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::securitypolicy(this), target, stream);
  }

  // string securitypolicy_id = 3;
  if (!this->_internal_securitypolicy_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_securitypolicy_id().data(), static_cast<int>(this->_internal_securitypolicy_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest.securitypolicy_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_securitypolicy_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  return target;
}

size_t CreateSecurityPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string securitypolicy_id = 3;
  if (!this->_internal_securitypolicy_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_securitypolicy_id());
  }

  // .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_securitypolicy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *securitypolicy_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSecurityPolicyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSecurityPolicyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSecurityPolicyRequest::GetClassData() const { return &_class_data_; }

void CreateSecurityPolicyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateSecurityPolicyRequest *>(to)->MergeFrom(
      static_cast<const CreateSecurityPolicyRequest &>(from));
}


void CreateSecurityPolicyRequest::MergeFrom(const CreateSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_securitypolicy_id().empty()) {
    _internal_set_securitypolicy_id(from._internal_securitypolicy_id());
  }
  if (from._internal_has_securitypolicy()) {
    _internal_mutable_securitypolicy()->::opi_api::network::cloud::v1alpha1::SecurityPolicy::MergeFrom(from._internal_securitypolicy());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSecurityPolicyRequest::CopyFrom(const CreateSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateSecurityPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSecurityPolicyRequest::IsInitialized() const {
  return true;
}

void CreateSecurityPolicyRequest::InternalSwap(CreateSecurityPolicyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &securitypolicy_id_, lhs_arena,
      &other->securitypolicy_id_, rhs_arena
  );
  swap(securitypolicy_, other->securitypolicy_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSecurityPolicyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[101]);
}

// ===================================================================

class DeleteSecurityPolicyRequest::_Internal {
 public:
};

DeleteSecurityPolicyRequest::DeleteSecurityPolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
}
DeleteSecurityPolicyRequest::DeleteSecurityPolicyRequest(const DeleteSecurityPolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
}

inline void DeleteSecurityPolicyRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSecurityPolicyRequest::~DeleteSecurityPolicyRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteSecurityPolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteSecurityPolicyRequest::ArenaDtor(void* object) {
  DeleteSecurityPolicyRequest* _this = reinterpret_cast< DeleteSecurityPolicyRequest* >(object);
  (void)_this;
}
void DeleteSecurityPolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSecurityPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSecurityPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSecurityPolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSecurityPolicyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  return target;
}

size_t DeleteSecurityPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSecurityPolicyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteSecurityPolicyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSecurityPolicyRequest::GetClassData() const { return &_class_data_; }

void DeleteSecurityPolicyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteSecurityPolicyRequest *>(to)->MergeFrom(
      static_cast<const DeleteSecurityPolicyRequest &>(from));
}


void DeleteSecurityPolicyRequest::MergeFrom(const DeleteSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSecurityPolicyRequest::CopyFrom(const DeleteSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteSecurityPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSecurityPolicyRequest::IsInitialized() const {
  return true;
}

void DeleteSecurityPolicyRequest::InternalSwap(DeleteSecurityPolicyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSecurityPolicyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[102]);
}

// ===================================================================

class UpdateSecurityPolicyRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::SecurityPolicy& securitypolicy(const UpdateSecurityPolicyRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateSecurityPolicyRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::SecurityPolicy&
UpdateSecurityPolicyRequest::_Internal::securitypolicy(const UpdateSecurityPolicyRequest* msg) {
  return *msg->securitypolicy_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateSecurityPolicyRequest::_Internal::update_mask(const UpdateSecurityPolicyRequest* msg) {
  return *msg->update_mask_;
}
void UpdateSecurityPolicyRequest::clear_securitypolicy() {
  if (GetArenaForAllocation() == nullptr && securitypolicy_ != nullptr) {
    delete securitypolicy_;
  }
  securitypolicy_ = nullptr;
}
void UpdateSecurityPolicyRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateSecurityPolicyRequest::UpdateSecurityPolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
}
UpdateSecurityPolicyRequest::UpdateSecurityPolicyRequest(const UpdateSecurityPolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_securitypolicy()) {
    securitypolicy_ = new ::opi_api::network::cloud::v1alpha1::SecurityPolicy(*from.securitypolicy_);
  } else {
    securitypolicy_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
}

inline void UpdateSecurityPolicyRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&securitypolicy_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&securitypolicy_)) + sizeof(update_mask_));
}

UpdateSecurityPolicyRequest::~UpdateSecurityPolicyRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateSecurityPolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete securitypolicy_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateSecurityPolicyRequest::ArenaDtor(void* object) {
  UpdateSecurityPolicyRequest* _this = reinterpret_cast< UpdateSecurityPolicyRequest* >(object);
  (void)_this;
}
void UpdateSecurityPolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSecurityPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSecurityPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && securitypolicy_ != nullptr) {
    delete securitypolicy_;
  }
  securitypolicy_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSecurityPolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_securitypolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSecurityPolicyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 1;
  if (this->_internal_has_securitypolicy()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::securitypolicy(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  return target;
}

size_t UpdateSecurityPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 1;
  if (this->_internal_has_securitypolicy()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *securitypolicy_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSecurityPolicyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateSecurityPolicyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSecurityPolicyRequest::GetClassData() const { return &_class_data_; }

void UpdateSecurityPolicyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateSecurityPolicyRequest *>(to)->MergeFrom(
      static_cast<const UpdateSecurityPolicyRequest &>(from));
}


void UpdateSecurityPolicyRequest::MergeFrom(const UpdateSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_securitypolicy()) {
    _internal_mutable_securitypolicy()->::opi_api::network::cloud::v1alpha1::SecurityPolicy::MergeFrom(from._internal_securitypolicy());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSecurityPolicyRequest::CopyFrom(const UpdateSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateSecurityPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSecurityPolicyRequest::IsInitialized() const {
  return true;
}

void UpdateSecurityPolicyRequest::InternalSwap(UpdateSecurityPolicyRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSecurityPolicyRequest, update_mask_)
      + sizeof(UpdateSecurityPolicyRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateSecurityPolicyRequest, securitypolicy_)>(
          reinterpret_cast<char*>(&securitypolicy_),
          reinterpret_cast<char*>(&other->securitypolicy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSecurityPolicyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[103]);
}

// ===================================================================

class ListSecurityPolicysRequest::_Internal {
 public:
};

ListSecurityPolicysRequest::ListSecurityPolicysRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
}
ListSecurityPolicysRequest::ListSecurityPolicysRequest(const ListSecurityPolicysRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
}

inline void ListSecurityPolicysRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListSecurityPolicysRequest::~ListSecurityPolicysRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSecurityPolicysRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSecurityPolicysRequest::ArenaDtor(void* object) {
  ListSecurityPolicysRequest* _this = reinterpret_cast< ListSecurityPolicysRequest* >(object);
  (void)_this;
}
void ListSecurityPolicysRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSecurityPolicysRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSecurityPolicysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSecurityPolicysRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSecurityPolicysRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  return target;
}

size_t ListSecurityPolicysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSecurityPolicysRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSecurityPolicysRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSecurityPolicysRequest::GetClassData() const { return &_class_data_; }

void ListSecurityPolicysRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSecurityPolicysRequest *>(to)->MergeFrom(
      static_cast<const ListSecurityPolicysRequest &>(from));
}


void ListSecurityPolicysRequest::MergeFrom(const ListSecurityPolicysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSecurityPolicysRequest::CopyFrom(const ListSecurityPolicysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSecurityPolicysRequest::IsInitialized() const {
  return true;
}

void ListSecurityPolicysRequest::InternalSwap(ListSecurityPolicysRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSecurityPolicysRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[104]);
}

// ===================================================================

class ListSecurityPolicysResponse::_Internal {
 public:
};

void ListSecurityPolicysResponse::clear_securitypolicy() {
  securitypolicy_.Clear();
}
ListSecurityPolicysResponse::ListSecurityPolicysResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  securitypolicy_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
}
ListSecurityPolicysResponse::ListSecurityPolicysResponse(const ListSecurityPolicysResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      securitypolicy_(from.securitypolicy_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
}

inline void ListSecurityPolicysResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListSecurityPolicysResponse::~ListSecurityPolicysResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSecurityPolicysResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSecurityPolicysResponse::ArenaDtor(void* object) {
  ListSecurityPolicysResponse* _this = reinterpret_cast< ListSecurityPolicysResponse* >(object);
  (void)_this;
}
void ListSecurityPolicysResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSecurityPolicysResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSecurityPolicysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  securitypolicy_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSecurityPolicysResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_securitypolicy(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSecurityPolicysResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_securitypolicy_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_securitypolicy(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  return target;
}

size_t ListSecurityPolicysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.SecurityPolicy securitypolicy = 1;
  total_size += 1UL * this->_internal_securitypolicy_size();
  for (const auto& msg : this->securitypolicy_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSecurityPolicysResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSecurityPolicysResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSecurityPolicysResponse::GetClassData() const { return &_class_data_; }

void ListSecurityPolicysResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSecurityPolicysResponse *>(to)->MergeFrom(
      static_cast<const ListSecurityPolicysResponse &>(from));
}


void ListSecurityPolicysResponse::MergeFrom(const ListSecurityPolicysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  securitypolicy_.MergeFrom(from.securitypolicy_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSecurityPolicysResponse::CopyFrom(const ListSecurityPolicysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSecurityPolicysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSecurityPolicysResponse::IsInitialized() const {
  return true;
}

void ListSecurityPolicysResponse::InternalSwap(ListSecurityPolicysResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  securitypolicy_.InternalSwap(&other->securitypolicy_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSecurityPolicysResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[105]);
}

// ===================================================================

class GetSecurityPolicyRequest::_Internal {
 public:
};

GetSecurityPolicyRequest::GetSecurityPolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
}
GetSecurityPolicyRequest::GetSecurityPolicyRequest(const GetSecurityPolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
}

inline void GetSecurityPolicyRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSecurityPolicyRequest::~GetSecurityPolicyRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSecurityPolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSecurityPolicyRequest::ArenaDtor(void* object) {
  GetSecurityPolicyRequest* _this = reinterpret_cast< GetSecurityPolicyRequest* >(object);
  (void)_this;
}
void GetSecurityPolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSecurityPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSecurityPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSecurityPolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSecurityPolicyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  return target;
}

size_t GetSecurityPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSecurityPolicyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSecurityPolicyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSecurityPolicyRequest::GetClassData() const { return &_class_data_; }

void GetSecurityPolicyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSecurityPolicyRequest *>(to)->MergeFrom(
      static_cast<const GetSecurityPolicyRequest &>(from));
}


void GetSecurityPolicyRequest::MergeFrom(const GetSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSecurityPolicyRequest::CopyFrom(const GetSecurityPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetSecurityPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecurityPolicyRequest::IsInitialized() const {
  return true;
}

void GetSecurityPolicyRequest::InternalSwap(GetSecurityPolicyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecurityPolicyRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[106]);
}

// ===================================================================

class CreateSecurityRuleRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::SecurityRule& securityrule(const CreateSecurityRuleRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::SecurityRule&
CreateSecurityRuleRequest::_Internal::securityrule(const CreateSecurityRuleRequest* msg) {
  return *msg->securityrule_;
}
void CreateSecurityRuleRequest::clear_securityrule() {
  if (GetArenaForAllocation() == nullptr && securityrule_ != nullptr) {
    delete securityrule_;
  }
  securityrule_ = nullptr;
}
CreateSecurityRuleRequest::CreateSecurityRuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
}
CreateSecurityRuleRequest::CreateSecurityRuleRequest(const CreateSecurityRuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  securityrule_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    securityrule_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_securityrule_id().empty()) {
    securityrule_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_securityrule_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_securityrule()) {
    securityrule_ = new ::opi_api::network::cloud::v1alpha1::SecurityRule(*from.securityrule_);
  } else {
    securityrule_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
}

inline void CreateSecurityRuleRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
securityrule_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  securityrule_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
securityrule_ = nullptr;
}

CreateSecurityRuleRequest::~CreateSecurityRuleRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSecurityRuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  securityrule_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete securityrule_;
}

void CreateSecurityRuleRequest::ArenaDtor(void* object) {
  CreateSecurityRuleRequest* _this = reinterpret_cast< CreateSecurityRuleRequest* >(object);
  (void)_this;
}
void CreateSecurityRuleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSecurityRuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSecurityRuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  securityrule_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && securityrule_ != nullptr) {
    delete securityrule_;
  }
  securityrule_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSecurityRuleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_securityrule(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string securityrule_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_securityrule_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest.securityrule_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSecurityRuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_securityrule()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::securityrule(this), target, stream);
  }

  // string securityrule_id = 3;
  if (!this->_internal_securityrule_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_securityrule_id().data(), static_cast<int>(this->_internal_securityrule_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest.securityrule_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_securityrule_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  return target;
}

size_t CreateSecurityRuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string securityrule_id = 3;
  if (!this->_internal_securityrule_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_securityrule_id());
  }

  // .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_securityrule()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *securityrule_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSecurityRuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSecurityRuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSecurityRuleRequest::GetClassData() const { return &_class_data_; }

void CreateSecurityRuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateSecurityRuleRequest *>(to)->MergeFrom(
      static_cast<const CreateSecurityRuleRequest &>(from));
}


void CreateSecurityRuleRequest::MergeFrom(const CreateSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_securityrule_id().empty()) {
    _internal_set_securityrule_id(from._internal_securityrule_id());
  }
  if (from._internal_has_securityrule()) {
    _internal_mutable_securityrule()->::opi_api::network::cloud::v1alpha1::SecurityRule::MergeFrom(from._internal_securityrule());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSecurityRuleRequest::CopyFrom(const CreateSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateSecurityRuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSecurityRuleRequest::IsInitialized() const {
  return true;
}

void CreateSecurityRuleRequest::InternalSwap(CreateSecurityRuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &securityrule_id_, lhs_arena,
      &other->securityrule_id_, rhs_arena
  );
  swap(securityrule_, other->securityrule_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSecurityRuleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[107]);
}

// ===================================================================

class DeleteSecurityRuleRequest::_Internal {
 public:
};

DeleteSecurityRuleRequest::DeleteSecurityRuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
}
DeleteSecurityRuleRequest::DeleteSecurityRuleRequest(const DeleteSecurityRuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
}

inline void DeleteSecurityRuleRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSecurityRuleRequest::~DeleteSecurityRuleRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteSecurityRuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteSecurityRuleRequest::ArenaDtor(void* object) {
  DeleteSecurityRuleRequest* _this = reinterpret_cast< DeleteSecurityRuleRequest* >(object);
  (void)_this;
}
void DeleteSecurityRuleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSecurityRuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSecurityRuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSecurityRuleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSecurityRuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  return target;
}

size_t DeleteSecurityRuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSecurityRuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteSecurityRuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSecurityRuleRequest::GetClassData() const { return &_class_data_; }

void DeleteSecurityRuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteSecurityRuleRequest *>(to)->MergeFrom(
      static_cast<const DeleteSecurityRuleRequest &>(from));
}


void DeleteSecurityRuleRequest::MergeFrom(const DeleteSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSecurityRuleRequest::CopyFrom(const DeleteSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteSecurityRuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSecurityRuleRequest::IsInitialized() const {
  return true;
}

void DeleteSecurityRuleRequest::InternalSwap(DeleteSecurityRuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSecurityRuleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[108]);
}

// ===================================================================

class UpdateSecurityRuleRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::SecurityRule& securityrule(const UpdateSecurityRuleRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateSecurityRuleRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::SecurityRule&
UpdateSecurityRuleRequest::_Internal::securityrule(const UpdateSecurityRuleRequest* msg) {
  return *msg->securityrule_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateSecurityRuleRequest::_Internal::update_mask(const UpdateSecurityRuleRequest* msg) {
  return *msg->update_mask_;
}
void UpdateSecurityRuleRequest::clear_securityrule() {
  if (GetArenaForAllocation() == nullptr && securityrule_ != nullptr) {
    delete securityrule_;
  }
  securityrule_ = nullptr;
}
void UpdateSecurityRuleRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateSecurityRuleRequest::UpdateSecurityRuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
}
UpdateSecurityRuleRequest::UpdateSecurityRuleRequest(const UpdateSecurityRuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_securityrule()) {
    securityrule_ = new ::opi_api::network::cloud::v1alpha1::SecurityRule(*from.securityrule_);
  } else {
    securityrule_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
}

inline void UpdateSecurityRuleRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&securityrule_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&securityrule_)) + sizeof(update_mask_));
}

UpdateSecurityRuleRequest::~UpdateSecurityRuleRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateSecurityRuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete securityrule_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateSecurityRuleRequest::ArenaDtor(void* object) {
  UpdateSecurityRuleRequest* _this = reinterpret_cast< UpdateSecurityRuleRequest* >(object);
  (void)_this;
}
void UpdateSecurityRuleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSecurityRuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSecurityRuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && securityrule_ != nullptr) {
    delete securityrule_;
  }
  securityrule_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSecurityRuleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_securityrule(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSecurityRuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 1;
  if (this->_internal_has_securityrule()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::securityrule(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  return target;
}

size_t UpdateSecurityRuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 1;
  if (this->_internal_has_securityrule()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *securityrule_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSecurityRuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateSecurityRuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSecurityRuleRequest::GetClassData() const { return &_class_data_; }

void UpdateSecurityRuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateSecurityRuleRequest *>(to)->MergeFrom(
      static_cast<const UpdateSecurityRuleRequest &>(from));
}


void UpdateSecurityRuleRequest::MergeFrom(const UpdateSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_securityrule()) {
    _internal_mutable_securityrule()->::opi_api::network::cloud::v1alpha1::SecurityRule::MergeFrom(from._internal_securityrule());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSecurityRuleRequest::CopyFrom(const UpdateSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateSecurityRuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSecurityRuleRequest::IsInitialized() const {
  return true;
}

void UpdateSecurityRuleRequest::InternalSwap(UpdateSecurityRuleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSecurityRuleRequest, update_mask_)
      + sizeof(UpdateSecurityRuleRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateSecurityRuleRequest, securityrule_)>(
          reinterpret_cast<char*>(&securityrule_),
          reinterpret_cast<char*>(&other->securityrule_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSecurityRuleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[109]);
}

// ===================================================================

class ListSecurityRulesRequest::_Internal {
 public:
};

ListSecurityRulesRequest::ListSecurityRulesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
}
ListSecurityRulesRequest::ListSecurityRulesRequest(const ListSecurityRulesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
}

inline void ListSecurityRulesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListSecurityRulesRequest::~ListSecurityRulesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSecurityRulesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSecurityRulesRequest::ArenaDtor(void* object) {
  ListSecurityRulesRequest* _this = reinterpret_cast< ListSecurityRulesRequest* >(object);
  (void)_this;
}
void ListSecurityRulesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSecurityRulesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSecurityRulesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSecurityRulesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSecurityRulesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  return target;
}

size_t ListSecurityRulesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSecurityRulesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSecurityRulesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSecurityRulesRequest::GetClassData() const { return &_class_data_; }

void ListSecurityRulesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSecurityRulesRequest *>(to)->MergeFrom(
      static_cast<const ListSecurityRulesRequest &>(from));
}


void ListSecurityRulesRequest::MergeFrom(const ListSecurityRulesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSecurityRulesRequest::CopyFrom(const ListSecurityRulesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSecurityRulesRequest::IsInitialized() const {
  return true;
}

void ListSecurityRulesRequest::InternalSwap(ListSecurityRulesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSecurityRulesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[110]);
}

// ===================================================================

class ListSecurityRulesResponse::_Internal {
 public:
};

void ListSecurityRulesResponse::clear_securityrule() {
  securityrule_.Clear();
}
ListSecurityRulesResponse::ListSecurityRulesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  securityrule_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
}
ListSecurityRulesResponse::ListSecurityRulesResponse(const ListSecurityRulesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      securityrule_(from.securityrule_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
}

inline void ListSecurityRulesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListSecurityRulesResponse::~ListSecurityRulesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSecurityRulesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSecurityRulesResponse::ArenaDtor(void* object) {
  ListSecurityRulesResponse* _this = reinterpret_cast< ListSecurityRulesResponse* >(object);
  (void)_this;
}
void ListSecurityRulesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSecurityRulesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSecurityRulesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  securityrule_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSecurityRulesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_securityrule(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSecurityRulesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_securityrule_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_securityrule(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  return target;
}

size_t ListSecurityRulesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.SecurityRule securityrule = 1;
  total_size += 1UL * this->_internal_securityrule_size();
  for (const auto& msg : this->securityrule_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSecurityRulesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSecurityRulesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSecurityRulesResponse::GetClassData() const { return &_class_data_; }

void ListSecurityRulesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSecurityRulesResponse *>(to)->MergeFrom(
      static_cast<const ListSecurityRulesResponse &>(from));
}


void ListSecurityRulesResponse::MergeFrom(const ListSecurityRulesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  securityrule_.MergeFrom(from.securityrule_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSecurityRulesResponse::CopyFrom(const ListSecurityRulesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSecurityRulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSecurityRulesResponse::IsInitialized() const {
  return true;
}

void ListSecurityRulesResponse::InternalSwap(ListSecurityRulesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  securityrule_.InternalSwap(&other->securityrule_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSecurityRulesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[111]);
}

// ===================================================================

class GetSecurityRuleRequest::_Internal {
 public:
};

GetSecurityRuleRequest::GetSecurityRuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
}
GetSecurityRuleRequest::GetSecurityRuleRequest(const GetSecurityRuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
}

inline void GetSecurityRuleRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSecurityRuleRequest::~GetSecurityRuleRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSecurityRuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSecurityRuleRequest::ArenaDtor(void* object) {
  GetSecurityRuleRequest* _this = reinterpret_cast< GetSecurityRuleRequest* >(object);
  (void)_this;
}
void GetSecurityRuleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSecurityRuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSecurityRuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSecurityRuleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSecurityRuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  return target;
}

size_t GetSecurityRuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSecurityRuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSecurityRuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSecurityRuleRequest::GetClassData() const { return &_class_data_; }

void GetSecurityRuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSecurityRuleRequest *>(to)->MergeFrom(
      static_cast<const GetSecurityRuleRequest &>(from));
}


void GetSecurityRuleRequest::MergeFrom(const GetSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSecurityRuleRequest::CopyFrom(const GetSecurityRuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetSecurityRuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecurityRuleRequest::IsInitialized() const {
  return true;
}

void GetSecurityRuleRequest::InternalSwap(GetSecurityRuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecurityRuleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[112]);
}

// ===================================================================

class CreateSecurityProfileRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::SecurityProfile& securityprofile(const CreateSecurityProfileRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::SecurityProfile&
CreateSecurityProfileRequest::_Internal::securityprofile(const CreateSecurityProfileRequest* msg) {
  return *msg->securityprofile_;
}
void CreateSecurityProfileRequest::clear_securityprofile() {
  if (GetArenaForAllocation() == nullptr && securityprofile_ != nullptr) {
    delete securityprofile_;
  }
  securityprofile_ = nullptr;
}
CreateSecurityProfileRequest::CreateSecurityProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
}
CreateSecurityProfileRequest::CreateSecurityProfileRequest(const CreateSecurityProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  securityprofile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    securityprofile_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_securityprofile_id().empty()) {
    securityprofile_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_securityprofile_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_securityprofile()) {
    securityprofile_ = new ::opi_api::network::cloud::v1alpha1::SecurityProfile(*from.securityprofile_);
  } else {
    securityprofile_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
}

inline void CreateSecurityProfileRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
securityprofile_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  securityprofile_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
securityprofile_ = nullptr;
}

CreateSecurityProfileRequest::~CreateSecurityProfileRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreateSecurityProfileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  securityprofile_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete securityprofile_;
}

void CreateSecurityProfileRequest::ArenaDtor(void* object) {
  CreateSecurityProfileRequest* _this = reinterpret_cast< CreateSecurityProfileRequest* >(object);
  (void)_this;
}
void CreateSecurityProfileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSecurityProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSecurityProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  securityprofile_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && securityprofile_ != nullptr) {
    delete securityprofile_;
  }
  securityprofile_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSecurityProfileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_securityprofile(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string securityprofile_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_securityprofile_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest.securityprofile_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSecurityProfileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_securityprofile()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::securityprofile(this), target, stream);
  }

  // string securityprofile_id = 3;
  if (!this->_internal_securityprofile_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_securityprofile_id().data(), static_cast<int>(this->_internal_securityprofile_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest.securityprofile_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_securityprofile_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  return target;
}

size_t CreateSecurityProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string securityprofile_id = 3;
  if (!this->_internal_securityprofile_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_securityprofile_id());
  }

  // .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_securityprofile()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *securityprofile_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSecurityProfileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateSecurityProfileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSecurityProfileRequest::GetClassData() const { return &_class_data_; }

void CreateSecurityProfileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateSecurityProfileRequest *>(to)->MergeFrom(
      static_cast<const CreateSecurityProfileRequest &>(from));
}


void CreateSecurityProfileRequest::MergeFrom(const CreateSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_securityprofile_id().empty()) {
    _internal_set_securityprofile_id(from._internal_securityprofile_id());
  }
  if (from._internal_has_securityprofile()) {
    _internal_mutable_securityprofile()->::opi_api::network::cloud::v1alpha1::SecurityProfile::MergeFrom(from._internal_securityprofile());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSecurityProfileRequest::CopyFrom(const CreateSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.CreateSecurityProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSecurityProfileRequest::IsInitialized() const {
  return true;
}

void CreateSecurityProfileRequest::InternalSwap(CreateSecurityProfileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &securityprofile_id_, lhs_arena,
      &other->securityprofile_id_, rhs_arena
  );
  swap(securityprofile_, other->securityprofile_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSecurityProfileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[113]);
}

// ===================================================================

class DeleteSecurityProfileRequest::_Internal {
 public:
};

DeleteSecurityProfileRequest::DeleteSecurityProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
}
DeleteSecurityProfileRequest::DeleteSecurityProfileRequest(const DeleteSecurityProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
}

inline void DeleteSecurityProfileRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSecurityProfileRequest::~DeleteSecurityProfileRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DeleteSecurityProfileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteSecurityProfileRequest::ArenaDtor(void* object) {
  DeleteSecurityProfileRequest* _this = reinterpret_cast< DeleteSecurityProfileRequest* >(object);
  (void)_this;
}
void DeleteSecurityProfileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSecurityProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSecurityProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSecurityProfileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSecurityProfileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  return target;
}

size_t DeleteSecurityProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSecurityProfileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteSecurityProfileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSecurityProfileRequest::GetClassData() const { return &_class_data_; }

void DeleteSecurityProfileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteSecurityProfileRequest *>(to)->MergeFrom(
      static_cast<const DeleteSecurityProfileRequest &>(from));
}


void DeleteSecurityProfileRequest::MergeFrom(const DeleteSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSecurityProfileRequest::CopyFrom(const DeleteSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.DeleteSecurityProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSecurityProfileRequest::IsInitialized() const {
  return true;
}

void DeleteSecurityProfileRequest::InternalSwap(DeleteSecurityProfileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSecurityProfileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[114]);
}

// ===================================================================

class UpdateSecurityProfileRequest::_Internal {
 public:
  static const ::opi_api::network::cloud::v1alpha1::SecurityProfile& securityprofile(const UpdateSecurityProfileRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateSecurityProfileRequest* msg);
};

const ::opi_api::network::cloud::v1alpha1::SecurityProfile&
UpdateSecurityProfileRequest::_Internal::securityprofile(const UpdateSecurityProfileRequest* msg) {
  return *msg->securityprofile_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateSecurityProfileRequest::_Internal::update_mask(const UpdateSecurityProfileRequest* msg) {
  return *msg->update_mask_;
}
void UpdateSecurityProfileRequest::clear_securityprofile() {
  if (GetArenaForAllocation() == nullptr && securityprofile_ != nullptr) {
    delete securityprofile_;
  }
  securityprofile_ = nullptr;
}
void UpdateSecurityProfileRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateSecurityProfileRequest::UpdateSecurityProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
}
UpdateSecurityProfileRequest::UpdateSecurityProfileRequest(const UpdateSecurityProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_securityprofile()) {
    securityprofile_ = new ::opi_api::network::cloud::v1alpha1::SecurityProfile(*from.securityprofile_);
  } else {
    securityprofile_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
}

inline void UpdateSecurityProfileRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&securityprofile_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
    reinterpret_cast<char*>(&securityprofile_)) + sizeof(update_mask_));
}

UpdateSecurityProfileRequest::~UpdateSecurityProfileRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateSecurityProfileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete securityprofile_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateSecurityProfileRequest::ArenaDtor(void* object) {
  UpdateSecurityProfileRequest* _this = reinterpret_cast< UpdateSecurityProfileRequest* >(object);
  (void)_this;
}
void UpdateSecurityProfileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateSecurityProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateSecurityProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && securityprofile_ != nullptr) {
    delete securityprofile_;
  }
  securityprofile_ = nullptr;
  if (GetArenaForAllocation() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSecurityProfileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_securityprofile(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSecurityProfileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 1;
  if (this->_internal_has_securityprofile()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::securityprofile(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  return target;
}

size_t UpdateSecurityProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 1;
  if (this->_internal_has_securityprofile()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *securityprofile_);
  }

  // .google.protobuf.FieldMask update_mask = 2;
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSecurityProfileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateSecurityProfileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSecurityProfileRequest::GetClassData() const { return &_class_data_; }

void UpdateSecurityProfileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateSecurityProfileRequest *>(to)->MergeFrom(
      static_cast<const UpdateSecurityProfileRequest &>(from));
}


void UpdateSecurityProfileRequest::MergeFrom(const UpdateSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_securityprofile()) {
    _internal_mutable_securityprofile()->::opi_api::network::cloud::v1alpha1::SecurityProfile::MergeFrom(from._internal_securityprofile());
  }
  if (from._internal_has_update_mask()) {
    _internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSecurityProfileRequest::CopyFrom(const UpdateSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.UpdateSecurityProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSecurityProfileRequest::IsInitialized() const {
  return true;
}

void UpdateSecurityProfileRequest::InternalSwap(UpdateSecurityProfileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSecurityProfileRequest, update_mask_)
      + sizeof(UpdateSecurityProfileRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateSecurityProfileRequest, securityprofile_)>(
          reinterpret_cast<char*>(&securityprofile_),
          reinterpret_cast<char*>(&other->securityprofile_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSecurityProfileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[115]);
}

// ===================================================================

class ListSecurityProfilesRequest::_Internal {
 public:
};

ListSecurityProfilesRequest::ListSecurityProfilesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
}
ListSecurityProfilesRequest::ListSecurityProfilesRequest(const ListSecurityProfilesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArenaForAllocation());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
}

inline void ListSecurityProfilesRequest::SharedCtor() {
parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_size_ = 0;
}

ListSecurityProfilesRequest::~ListSecurityProfilesRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSecurityProfilesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSecurityProfilesRequest::ArenaDtor(void* object) {
  ListSecurityProfilesRequest* _this = reinterpret_cast< ListSecurityProfilesRequest* >(object);
  (void)_this;
}
void ListSecurityProfilesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSecurityProfilesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSecurityProfilesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSecurityProfilesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest.parent"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest.page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSecurityProfilesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  return target;
}

size_t ListSecurityProfilesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSecurityProfilesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSecurityProfilesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSecurityProfilesRequest::GetClassData() const { return &_class_data_; }

void ListSecurityProfilesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSecurityProfilesRequest *>(to)->MergeFrom(
      static_cast<const ListSecurityProfilesRequest &>(from));
}


void ListSecurityProfilesRequest::MergeFrom(const ListSecurityProfilesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSecurityProfilesRequest::CopyFrom(const ListSecurityProfilesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSecurityProfilesRequest::IsInitialized() const {
  return true;
}

void ListSecurityProfilesRequest::InternalSwap(ListSecurityProfilesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parent_, lhs_arena,
      &other->parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSecurityProfilesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[116]);
}

// ===================================================================

class ListSecurityProfilesResponse::_Internal {
 public:
};

void ListSecurityProfilesResponse::clear_securityprofile() {
  securityprofile_.Clear();
}
ListSecurityProfilesResponse::ListSecurityProfilesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  securityprofile_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
}
ListSecurityProfilesResponse::ListSecurityProfilesResponse(const ListSecurityProfilesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      securityprofile_(from.securityprofile_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
}

inline void ListSecurityProfilesResponse::SharedCtor() {
next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListSecurityProfilesResponse::~ListSecurityProfilesResponse() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSecurityProfilesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSecurityProfilesResponse::ArenaDtor(void* object) {
  ListSecurityProfilesResponse* _this = reinterpret_cast< ListSecurityProfilesResponse* >(object);
  (void)_this;
}
void ListSecurityProfilesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSecurityProfilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSecurityProfilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  securityprofile_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSecurityProfilesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_securityprofile(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse.next_page_token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSecurityProfilesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_securityprofile_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_securityprofile(i), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  return target;
}

size_t ListSecurityProfilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opi_api.network.cloud.v1alpha1.SecurityProfile securityprofile = 1;
  total_size += 1UL * this->_internal_securityprofile_size();
  for (const auto& msg : this->securityprofile_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSecurityProfilesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSecurityProfilesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSecurityProfilesResponse::GetClassData() const { return &_class_data_; }

void ListSecurityProfilesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSecurityProfilesResponse *>(to)->MergeFrom(
      static_cast<const ListSecurityProfilesResponse &>(from));
}


void ListSecurityProfilesResponse::MergeFrom(const ListSecurityProfilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  securityprofile_.MergeFrom(from.securityprofile_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSecurityProfilesResponse::CopyFrom(const ListSecurityProfilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.ListSecurityProfilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSecurityProfilesResponse::IsInitialized() const {
  return true;
}

void ListSecurityProfilesResponse::InternalSwap(ListSecurityProfilesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  securityprofile_.InternalSwap(&other->securityprofile_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSecurityProfilesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[117]);
}

// ===================================================================

class GetSecurityProfileRequest::_Internal {
 public:
};

GetSecurityProfileRequest::GetSecurityProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
}
GetSecurityProfileRequest::GetSecurityProfileRequest(const GetSecurityProfileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
}

inline void GetSecurityProfileRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSecurityProfileRequest::~GetSecurityProfileRequest() {
  // @@protoc_insertion_point(destructor:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetSecurityProfileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSecurityProfileRequest::ArenaDtor(void* object) {
  GetSecurityProfileRequest* _this = reinterpret_cast< GetSecurityProfileRequest* >(object);
  (void)_this;
}
void GetSecurityProfileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSecurityProfileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSecurityProfileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSecurityProfileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSecurityProfileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  return target;
}

size_t GetSecurityProfileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSecurityProfileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSecurityProfileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSecurityProfileRequest::GetClassData() const { return &_class_data_; }

void GetSecurityProfileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSecurityProfileRequest *>(to)->MergeFrom(
      static_cast<const GetSecurityProfileRequest &>(from));
}


void GetSecurityProfileRequest::MergeFrom(const GetSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSecurityProfileRequest::CopyFrom(const GetSecurityProfileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opi_api.network.cloud.v1alpha1.GetSecurityProfileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSecurityProfileRequest::IsInitialized() const {
  return true;
}

void GetSecurityProfileRequest::InternalSwap(GetSecurityProfileRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSecurityProfileRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cloudrpc_2eproto_getter, &descriptor_table_cloudrpc_2eproto_once,
      file_level_metadata_cloudrpc_2eproto[118]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace cloud
}  // namespace network
}  // namespace opi_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListDevicesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListDevicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListDevicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListDevicesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListDevicesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListDevicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetDeviceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdatePortRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdatePortRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdatePortRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListPortsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListPortsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListPortsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListPortsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListPortsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListPortsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetPortRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetPortRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetPortRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateVnicRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateVnicRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateVnicRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListVnicsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListVnicsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListVnicsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListVnicsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListVnicsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListVnicsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetVnicRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetVnicRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetVnicRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListRoutesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListRoutesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListRoutesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListRoutesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListRoutesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListRoutesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateBgpRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateBgpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateBgpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListBgpsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListBgpsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListBgpsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListBgpsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListBgpsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListBgpsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetBgpRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetBgpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetBgpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateMappingRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateMappingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateMappingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListMappingsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListMappingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListMappingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListMappingsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListMappingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListMappingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetMappingRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetMappingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetMappingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetNextHopRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetNextHopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetNextHopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetSubnetRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetSubnetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetSubnetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetTunnelRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetTunnelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetTunnelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateVpcRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateVpcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateVpcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListVpcsRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListVpcsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListVpcsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListVpcsResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListVpcsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListVpcsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetVpcRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetVpcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetVpcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest* Arena::CreateMaybeMessage< ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
