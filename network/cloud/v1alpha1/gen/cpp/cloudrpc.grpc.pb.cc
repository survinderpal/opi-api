// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: cloudrpc.proto

#include "cloudrpc.pb.h"
#include "cloudrpc.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace opi_api {
namespace network {
namespace cloud {
namespace v1alpha1 {

static const char* CloudInfraService_method_names[] = {
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetDeviceCapabilities",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateDevice",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteDevice",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateDevice",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListDevices",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetDevice",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdatePort",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListPorts",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetPort",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateVnic",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteVnic",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateVnic",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListVnics",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetVnic",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateInterface",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteInterface",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateInterface",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListInterfaces",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetInterface",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateRouteTable",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteRouteTable",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateRouteTable",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListRouteTables",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetRouteTable",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListRoutes",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateUnderlayRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteUnderlayRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateUnderlayRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListUnderlayRoutes",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetUnderlayRoute",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateBgp",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteBgp",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateBgp",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListBgps",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetBgp",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateBGPPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteBGPPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateBGPPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListBGPPeers",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetBGPPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateBGPPeerAf",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteBGPPeerAf",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateBGPPeerAf",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListBGPPeerAfs",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetBGPPeerAf",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateMapping",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteMapping",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateMapping",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListMappings",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetMapping",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateNextHop",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteNextHop",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateNextHop",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListNextHop",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetNextHop",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateNextHopGroup",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteNextHopGroup",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateNextHopGroup",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListNextHopGroups",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetNextHopGroup",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateSubnet",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteSubnet",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateSubnet",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListSubnets",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetSubnet",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateTunnel",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteTunnel",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateTunnel",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListTunnels",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetTunnel",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateVpc",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteVpc",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateVpc",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListVpcs",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetVpc",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateVPCPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteVPCPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateVPCPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListVPCPeers",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetVPCPeer",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateSecurityPolicy",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteSecurityPolicy",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateSecurityPolicy",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListSecurityPolicys",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetSecurityPolicy",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateSecurityRule",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteSecurityRule",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateSecurityRule",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListSecurityRules",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetSecurityRule",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/CreateSecurityProfile",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/DeleteSecurityProfile",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/UpdateSecurityProfile",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/ListSecurityProfiles",
  "/opi_api.network.cloud.v1alpha1.CloudInfraService/GetSecurityProfile",
};

std::unique_ptr< CloudInfraService::Stub> CloudInfraService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< CloudInfraService::Stub> stub(new CloudInfraService::Stub(channel, options));
  return stub;
}

CloudInfraService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_GetDeviceCapabilities_(CloudInfraService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateDevice_(CloudInfraService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDevice_(CloudInfraService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateDevice_(CloudInfraService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListDevices_(CloudInfraService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDevice_(CloudInfraService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdatePort_(CloudInfraService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListPorts_(CloudInfraService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPort_(CloudInfraService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateVnic_(CloudInfraService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteVnic_(CloudInfraService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateVnic_(CloudInfraService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListVnics_(CloudInfraService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVnic_(CloudInfraService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateInterface_(CloudInfraService_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteInterface_(CloudInfraService_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateInterface_(CloudInfraService_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListInterfaces_(CloudInfraService_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetInterface_(CloudInfraService_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateRouteTable_(CloudInfraService_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteRouteTable_(CloudInfraService_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateRouteTable_(CloudInfraService_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListRouteTables_(CloudInfraService_method_names[22], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRouteTable_(CloudInfraService_method_names[23], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateRoute_(CloudInfraService_method_names[24], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteRoute_(CloudInfraService_method_names[25], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateRoute_(CloudInfraService_method_names[26], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListRoutes_(CloudInfraService_method_names[27], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRoute_(CloudInfraService_method_names[28], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateUnderlayRoute_(CloudInfraService_method_names[29], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteUnderlayRoute_(CloudInfraService_method_names[30], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateUnderlayRoute_(CloudInfraService_method_names[31], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListUnderlayRoutes_(CloudInfraService_method_names[32], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUnderlayRoute_(CloudInfraService_method_names[33], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateBgp_(CloudInfraService_method_names[34], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteBgp_(CloudInfraService_method_names[35], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateBgp_(CloudInfraService_method_names[36], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListBgps_(CloudInfraService_method_names[37], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetBgp_(CloudInfraService_method_names[38], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateBGPPeer_(CloudInfraService_method_names[39], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteBGPPeer_(CloudInfraService_method_names[40], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateBGPPeer_(CloudInfraService_method_names[41], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListBGPPeers_(CloudInfraService_method_names[42], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetBGPPeer_(CloudInfraService_method_names[43], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateBGPPeerAf_(CloudInfraService_method_names[44], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteBGPPeerAf_(CloudInfraService_method_names[45], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateBGPPeerAf_(CloudInfraService_method_names[46], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListBGPPeerAfs_(CloudInfraService_method_names[47], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetBGPPeerAf_(CloudInfraService_method_names[48], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateMapping_(CloudInfraService_method_names[49], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteMapping_(CloudInfraService_method_names[50], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateMapping_(CloudInfraService_method_names[51], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListMappings_(CloudInfraService_method_names[52], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetMapping_(CloudInfraService_method_names[53], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateNextHop_(CloudInfraService_method_names[54], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNextHop_(CloudInfraService_method_names[55], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateNextHop_(CloudInfraService_method_names[56], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNextHop_(CloudInfraService_method_names[57], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNextHop_(CloudInfraService_method_names[58], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateNextHopGroup_(CloudInfraService_method_names[59], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNextHopGroup_(CloudInfraService_method_names[60], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateNextHopGroup_(CloudInfraService_method_names[61], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNextHopGroups_(CloudInfraService_method_names[62], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNextHopGroup_(CloudInfraService_method_names[63], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateSubnet_(CloudInfraService_method_names[64], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteSubnet_(CloudInfraService_method_names[65], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateSubnet_(CloudInfraService_method_names[66], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSubnets_(CloudInfraService_method_names[67], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSubnet_(CloudInfraService_method_names[68], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateTunnel_(CloudInfraService_method_names[69], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteTunnel_(CloudInfraService_method_names[70], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateTunnel_(CloudInfraService_method_names[71], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTunnels_(CloudInfraService_method_names[72], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTunnel_(CloudInfraService_method_names[73], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateVpc_(CloudInfraService_method_names[74], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteVpc_(CloudInfraService_method_names[75], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateVpc_(CloudInfraService_method_names[76], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListVpcs_(CloudInfraService_method_names[77], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVpc_(CloudInfraService_method_names[78], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateVPCPeer_(CloudInfraService_method_names[79], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteVPCPeer_(CloudInfraService_method_names[80], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateVPCPeer_(CloudInfraService_method_names[81], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListVPCPeers_(CloudInfraService_method_names[82], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetVPCPeer_(CloudInfraService_method_names[83], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateSecurityPolicy_(CloudInfraService_method_names[84], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteSecurityPolicy_(CloudInfraService_method_names[85], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateSecurityPolicy_(CloudInfraService_method_names[86], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSecurityPolicys_(CloudInfraService_method_names[87], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSecurityPolicy_(CloudInfraService_method_names[88], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateSecurityRule_(CloudInfraService_method_names[89], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteSecurityRule_(CloudInfraService_method_names[90], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateSecurityRule_(CloudInfraService_method_names[91], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSecurityRules_(CloudInfraService_method_names[92], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSecurityRule_(CloudInfraService_method_names[93], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateSecurityProfile_(CloudInfraService_method_names[94], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteSecurityProfile_(CloudInfraService_method_names[95], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateSecurityProfile_(CloudInfraService_method_names[96], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSecurityProfiles_(CloudInfraService_method_names[97], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSecurityProfile_(CloudInfraService_method_names[98], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status CloudInfraService::Stub::GetDeviceCapabilities(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest& request, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetDeviceCapabilities_, context, request, response);
}

void CloudInfraService::Stub::async::GetDeviceCapabilities(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest* request, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDeviceCapabilities_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetDeviceCapabilities(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest* request, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDeviceCapabilities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::DeviceCapabilities>* CloudInfraService::Stub::PrepareAsyncGetDeviceCapabilitiesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::DeviceCapabilities, ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetDeviceCapabilities_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::DeviceCapabilities>* CloudInfraService::Stub::AsyncGetDeviceCapabilitiesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetDeviceCapabilitiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::opi_api::network::cloud::v1alpha1::Device* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateDevice_, context, request, response);
}

void CloudInfraService::Stub::async::CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateDevice_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateDevice_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* CloudInfraService::Stub::PrepareAsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Device, ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateDevice_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* CloudInfraService::Stub::AsyncCreateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateDeviceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteDevice_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteDevice_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteDevice_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteDevice_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteDeviceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest& request, ::opi_api::network::cloud::v1alpha1::Device* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateDevice_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateDevice_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateDevice_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* CloudInfraService::Stub::PrepareAsyncUpdateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Device, ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateDevice_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* CloudInfraService::Stub::AsyncUpdateDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateDeviceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListDevices(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest& request, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListDevicesRequest, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListDevices_, context, request, response);
}

void CloudInfraService::Stub::async::ListDevices(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest* request, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListDevicesRequest, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListDevices_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListDevices(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest* request, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListDevices_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListDevicesResponse>* CloudInfraService::Stub::PrepareAsyncListDevicesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListDevicesResponse, ::opi_api::network::cloud::v1alpha1::ListDevicesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListDevices_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListDevicesResponse>* CloudInfraService::Stub::AsyncListDevicesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListDevicesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest& request, ::opi_api::network::cloud::v1alpha1::Device* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetDevice_, context, request, response);
}

void CloudInfraService::Stub::async::GetDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDevice_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetDevice(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDevice_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* CloudInfraService::Stub::PrepareAsyncGetDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Device, ::opi_api::network::cloud::v1alpha1::GetDeviceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetDevice_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Device>* CloudInfraService::Stub::AsyncGetDeviceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetDeviceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdatePort(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest& request, ::opi_api::network::cloud::v1alpha1::Port* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdatePortRequest, ::opi_api::network::cloud::v1alpha1::Port, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdatePort_, context, request, response);
}

void CloudInfraService::Stub::async::UpdatePort(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest* request, ::opi_api::network::cloud::v1alpha1::Port* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdatePortRequest, ::opi_api::network::cloud::v1alpha1::Port, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdatePort_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdatePort(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest* request, ::opi_api::network::cloud::v1alpha1::Port* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdatePort_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Port>* CloudInfraService::Stub::PrepareAsyncUpdatePortRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Port, ::opi_api::network::cloud::v1alpha1::UpdatePortRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdatePort_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Port>* CloudInfraService::Stub::AsyncUpdatePortRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdatePortRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListPorts(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListPortsRequest& request, ::opi_api::network::cloud::v1alpha1::ListPortsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListPortsRequest, ::opi_api::network::cloud::v1alpha1::ListPortsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListPorts_, context, request, response);
}

void CloudInfraService::Stub::async::ListPorts(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListPortsRequest* request, ::opi_api::network::cloud::v1alpha1::ListPortsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListPortsRequest, ::opi_api::network::cloud::v1alpha1::ListPortsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListPorts_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListPorts(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListPortsRequest* request, ::opi_api::network::cloud::v1alpha1::ListPortsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListPorts_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListPortsResponse>* CloudInfraService::Stub::PrepareAsyncListPortsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListPortsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListPortsResponse, ::opi_api::network::cloud::v1alpha1::ListPortsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListPorts_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListPortsResponse>* CloudInfraService::Stub::AsyncListPortsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListPortsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListPortsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetPort(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetPortRequest& request, ::opi_api::network::cloud::v1alpha1::Port* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetPortRequest, ::opi_api::network::cloud::v1alpha1::Port, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetPort_, context, request, response);
}

void CloudInfraService::Stub::async::GetPort(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetPortRequest* request, ::opi_api::network::cloud::v1alpha1::Port* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetPortRequest, ::opi_api::network::cloud::v1alpha1::Port, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetPort_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetPort(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetPortRequest* request, ::opi_api::network::cloud::v1alpha1::Port* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetPort_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Port>* CloudInfraService::Stub::PrepareAsyncGetPortRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetPortRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Port, ::opi_api::network::cloud::v1alpha1::GetPortRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetPort_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Port>* CloudInfraService::Stub::AsyncGetPortRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetPortRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetPortRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest& request, ::opi_api::network::cloud::v1alpha1::Vnic* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateVnic_, context, request, response);
}

void CloudInfraService::Stub::async::CreateVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateVnic_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateVnic_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vnic>* CloudInfraService::Stub::PrepareAsyncCreateVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Vnic, ::opi_api::network::cloud::v1alpha1::CreateVnicRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateVnic_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vnic>* CloudInfraService::Stub::AsyncCreateVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateVnicRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteVnic_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteVnic_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteVnic_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteVnic_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteVnicRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest& request, ::opi_api::network::cloud::v1alpha1::Vnic* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateVnic_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateVnic_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateVnic_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vnic>* CloudInfraService::Stub::PrepareAsyncUpdateVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Vnic, ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateVnic_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vnic>* CloudInfraService::Stub::AsyncUpdateVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateVnicRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListVnics(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest& request, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListVnicsRequest, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListVnics_, context, request, response);
}

void CloudInfraService::Stub::async::ListVnics(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest* request, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListVnicsRequest, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVnics_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListVnics(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest* request, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVnics_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListVnicsResponse>* CloudInfraService::Stub::PrepareAsyncListVnicsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListVnicsResponse, ::opi_api::network::cloud::v1alpha1::ListVnicsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListVnics_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListVnicsResponse>* CloudInfraService::Stub::AsyncListVnicsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListVnicsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVnicRequest& request, ::opi_api::network::cloud::v1alpha1::Vnic* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetVnic_, context, request, response);
}

void CloudInfraService::Stub::async::GetVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVnic_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetVnic(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVnic_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vnic>* CloudInfraService::Stub::PrepareAsyncGetVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVnicRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Vnic, ::opi_api::network::cloud::v1alpha1::GetVnicRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetVnic_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vnic>* CloudInfraService::Stub::AsyncGetVnicRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVnicRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetVnicRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest& request, ::opi_api::network::cloud::v1alpha1::Interface* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateInterface_, context, request, response);
}

void CloudInfraService::Stub::async::CreateInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateInterface_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateInterface_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Interface>* CloudInfraService::Stub::PrepareAsyncCreateInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Interface, ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateInterface_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Interface>* CloudInfraService::Stub::AsyncCreateInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateInterfaceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteInterface_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteInterface_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteInterface_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteInterface_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteInterfaceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest& request, ::opi_api::network::cloud::v1alpha1::Interface* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateInterface_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateInterface_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateInterface_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Interface>* CloudInfraService::Stub::PrepareAsyncUpdateInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Interface, ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateInterface_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Interface>* CloudInfraService::Stub::AsyncUpdateInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateInterfaceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListInterfaces(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest& request, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListInterfaces_, context, request, response);
}

void CloudInfraService::Stub::async::ListInterfaces(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest* request, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListInterfaces_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListInterfaces(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest* request, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListInterfaces_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse>* CloudInfraService::Stub::PrepareAsyncListInterfacesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListInterfaces_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse>* CloudInfraService::Stub::AsyncListInterfacesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListInterfacesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest& request, ::opi_api::network::cloud::v1alpha1::Interface* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetInterface_, context, request, response);
}

void CloudInfraService::Stub::async::GetInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetInterface_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetInterface(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetInterface_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Interface>* CloudInfraService::Stub::PrepareAsyncGetInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Interface, ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetInterface_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Interface>* CloudInfraService::Stub::AsyncGetInterfaceRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetInterfaceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest& request, ::opi_api::network::cloud::v1alpha1::RouteTable* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateRouteTable_, context, request, response);
}

void CloudInfraService::Stub::async::CreateRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateRouteTable_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateRouteTable_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::RouteTable>* CloudInfraService::Stub::PrepareAsyncCreateRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::RouteTable, ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateRouteTable_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::RouteTable>* CloudInfraService::Stub::AsyncCreateRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateRouteTableRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteRouteTable_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteRouteTable_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteRouteTable_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteRouteTable_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteRouteTableRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest& request, ::opi_api::network::cloud::v1alpha1::RouteTable* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateRouteTable_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateRouteTable_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateRouteTable_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::RouteTable>* CloudInfraService::Stub::PrepareAsyncUpdateRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::RouteTable, ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateRouteTable_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::RouteTable>* CloudInfraService::Stub::AsyncUpdateRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateRouteTableRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListRouteTables(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest& request, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListRouteTables_, context, request, response);
}

void CloudInfraService::Stub::async::ListRouteTables(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest* request, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListRouteTables_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListRouteTables(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest* request, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListRouteTables_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse>* CloudInfraService::Stub::PrepareAsyncListRouteTablesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListRouteTables_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse>* CloudInfraService::Stub::AsyncListRouteTablesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListRouteTablesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest& request, ::opi_api::network::cloud::v1alpha1::RouteTable* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetRouteTable_, context, request, response);
}

void CloudInfraService::Stub::async::GetRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetRouteTable_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetRouteTable(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetRouteTable_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::RouteTable>* CloudInfraService::Stub::PrepareAsyncGetRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::RouteTable, ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetRouteTable_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::RouteTable>* CloudInfraService::Stub::AsyncGetRouteTableRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetRouteTableRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest& request, ::opi_api::network::cloud::v1alpha1::Route* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateRoute_, context, request, response);
}

void CloudInfraService::Stub::async::CreateRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Route>* CloudInfraService::Stub::PrepareAsyncCreateRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Route, ::opi_api::network::cloud::v1alpha1::CreateRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Route>* CloudInfraService::Stub::AsyncCreateRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteRoute_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest& request, ::opi_api::network::cloud::v1alpha1::Route* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateRoute_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Route>* CloudInfraService::Stub::PrepareAsyncUpdateRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Route, ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Route>* CloudInfraService::Stub::AsyncUpdateRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListRoutes(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest& request, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListRoutesRequest, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListRoutes_, context, request, response);
}

void CloudInfraService::Stub::async::ListRoutes(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest* request, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListRoutesRequest, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListRoutes_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListRoutes(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest* request, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListRoutes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListRoutesResponse>* CloudInfraService::Stub::PrepareAsyncListRoutesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListRoutesResponse, ::opi_api::network::cloud::v1alpha1::ListRoutesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListRoutes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListRoutesResponse>* CloudInfraService::Stub::AsyncListRoutesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListRoutesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteRequest& request, ::opi_api::network::cloud::v1alpha1::Route* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetRoute_, context, request, response);
}

void CloudInfraService::Stub::async::GetRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Route>* CloudInfraService::Stub::PrepareAsyncGetRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Route, ::opi_api::network::cloud::v1alpha1::GetRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Route>* CloudInfraService::Stub::AsyncGetRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest& request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateUnderlayRoute_, context, request, response);
}

void CloudInfraService::Stub::async::CreateUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateUnderlayRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateUnderlayRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::UnderlayRoute>* CloudInfraService::Stub::PrepareAsyncCreateUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateUnderlayRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::UnderlayRoute>* CloudInfraService::Stub::AsyncCreateUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateUnderlayRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteUnderlayRoute_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteUnderlayRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteUnderlayRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteUnderlayRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteUnderlayRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest& request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateUnderlayRoute_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateUnderlayRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateUnderlayRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::UnderlayRoute>* CloudInfraService::Stub::PrepareAsyncUpdateUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateUnderlayRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::UnderlayRoute>* CloudInfraService::Stub::AsyncUpdateUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateUnderlayRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListUnderlayRoutes(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest& request, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListUnderlayRoutes_, context, request, response);
}

void CloudInfraService::Stub::async::ListUnderlayRoutes(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest* request, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListUnderlayRoutes_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListUnderlayRoutes(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest* request, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListUnderlayRoutes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse>* CloudInfraService::Stub::PrepareAsyncListUnderlayRoutesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListUnderlayRoutes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse>* CloudInfraService::Stub::AsyncListUnderlayRoutesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListUnderlayRoutesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest& request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetUnderlayRoute_, context, request, response);
}

void CloudInfraService::Stub::async::GetUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUnderlayRoute_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetUnderlayRoute(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUnderlayRoute_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::UnderlayRoute>* CloudInfraService::Stub::PrepareAsyncGetUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetUnderlayRoute_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::UnderlayRoute>* CloudInfraService::Stub::AsyncGetUnderlayRouteRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetUnderlayRouteRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest& request, ::opi_api::network::cloud::v1alpha1::Bgp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateBgp_, context, request, response);
}

void CloudInfraService::Stub::async::CreateBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateBgp_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateBgp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Bgp>* CloudInfraService::Stub::PrepareAsyncCreateBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Bgp, ::opi_api::network::cloud::v1alpha1::CreateBgpRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateBgp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Bgp>* CloudInfraService::Stub::AsyncCreateBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateBgpRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteBgp_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBgp_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBgp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteBgp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteBgpRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest& request, ::opi_api::network::cloud::v1alpha1::Bgp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateBgp_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateBgp_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateBgp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Bgp>* CloudInfraService::Stub::PrepareAsyncUpdateBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Bgp, ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateBgp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Bgp>* CloudInfraService::Stub::AsyncUpdateBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateBgpRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListBgps(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest& request, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListBgpsRequest, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListBgps_, context, request, response);
}

void CloudInfraService::Stub::async::ListBgps(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest* request, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListBgpsRequest, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBgps_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListBgps(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest* request, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBgps_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListBgpsResponse>* CloudInfraService::Stub::PrepareAsyncListBgpsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListBgpsResponse, ::opi_api::network::cloud::v1alpha1::ListBgpsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListBgps_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListBgpsResponse>* CloudInfraService::Stub::AsyncListBgpsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListBgpsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBgpRequest& request, ::opi_api::network::cloud::v1alpha1::Bgp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetBgp_, context, request, response);
}

void CloudInfraService::Stub::async::GetBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBgp_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetBgp(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBgp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Bgp>* CloudInfraService::Stub::PrepareAsyncGetBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBgpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Bgp, ::opi_api::network::cloud::v1alpha1::GetBgpRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetBgp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Bgp>* CloudInfraService::Stub::AsyncGetBgpRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBgpRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetBgpRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest& request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateBGPPeer_, context, request, response);
}

void CloudInfraService::Stub::async::CreateBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateBGPPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateBGPPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeer>* CloudInfraService::Stub::PrepareAsyncCreateBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::BGPPeer, ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateBGPPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeer>* CloudInfraService::Stub::AsyncCreateBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateBGPPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteBGPPeer_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBGPPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBGPPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteBGPPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteBGPPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest& request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateBGPPeer_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateBGPPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateBGPPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeer>* CloudInfraService::Stub::PrepareAsyncUpdateBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::BGPPeer, ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateBGPPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeer>* CloudInfraService::Stub::AsyncUpdateBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateBGPPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListBGPPeers(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest& request, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListBGPPeers_, context, request, response);
}

void CloudInfraService::Stub::async::ListBGPPeers(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest* request, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBGPPeers_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListBGPPeers(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest* request, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBGPPeers_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse>* CloudInfraService::Stub::PrepareAsyncListBGPPeersRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListBGPPeers_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse>* CloudInfraService::Stub::AsyncListBGPPeersRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListBGPPeersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest& request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetBGPPeer_, context, request, response);
}

void CloudInfraService::Stub::async::GetBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBGPPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetBGPPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBGPPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeer>* CloudInfraService::Stub::PrepareAsyncGetBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::BGPPeer, ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetBGPPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeer>* CloudInfraService::Stub::AsyncGetBGPPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetBGPPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest& request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateBGPPeerAf_, context, request, response);
}

void CloudInfraService::Stub::async::CreateBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateBGPPeerAf_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateBGPPeerAf_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeerAf>* CloudInfraService::Stub::PrepareAsyncCreateBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateBGPPeerAf_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeerAf>* CloudInfraService::Stub::AsyncCreateBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateBGPPeerAfRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteBGPPeerAf_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBGPPeerAf_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteBGPPeerAf_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteBGPPeerAf_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteBGPPeerAfRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest& request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateBGPPeerAf_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateBGPPeerAf_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateBGPPeerAf_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeerAf>* CloudInfraService::Stub::PrepareAsyncUpdateBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateBGPPeerAf_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeerAf>* CloudInfraService::Stub::AsyncUpdateBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateBGPPeerAfRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListBGPPeerAfs(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest& request, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListBGPPeerAfs_, context, request, response);
}

void CloudInfraService::Stub::async::ListBGPPeerAfs(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest* request, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBGPPeerAfs_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListBGPPeerAfs(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest* request, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListBGPPeerAfs_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse>* CloudInfraService::Stub::PrepareAsyncListBGPPeerAfsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListBGPPeerAfs_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse>* CloudInfraService::Stub::AsyncListBGPPeerAfsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListBGPPeerAfsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest& request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetBGPPeerAf_, context, request, response);
}

void CloudInfraService::Stub::async::GetBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBGPPeerAf_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetBGPPeerAf(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetBGPPeerAf_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeerAf>* CloudInfraService::Stub::PrepareAsyncGetBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetBGPPeerAf_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::BGPPeerAf>* CloudInfraService::Stub::AsyncGetBGPPeerAfRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetBGPPeerAfRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest& request, ::opi_api::network::cloud::v1alpha1::Mapping* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateMapping_, context, request, response);
}

void CloudInfraService::Stub::async::CreateMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateMapping_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateMapping_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Mapping>* CloudInfraService::Stub::PrepareAsyncCreateMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Mapping, ::opi_api::network::cloud::v1alpha1::CreateMappingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateMapping_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Mapping>* CloudInfraService::Stub::AsyncCreateMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateMappingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteMapping_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteMapping_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteMapping_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteMapping_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteMappingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest& request, ::opi_api::network::cloud::v1alpha1::Mapping* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateMapping_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateMapping_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateMapping_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Mapping>* CloudInfraService::Stub::PrepareAsyncUpdateMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Mapping, ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateMapping_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Mapping>* CloudInfraService::Stub::AsyncUpdateMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateMappingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListMappings(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest& request, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListMappingsRequest, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListMappings_, context, request, response);
}

void CloudInfraService::Stub::async::ListMappings(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest* request, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListMappingsRequest, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListMappings_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListMappings(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest* request, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListMappings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListMappingsResponse>* CloudInfraService::Stub::PrepareAsyncListMappingsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListMappingsResponse, ::opi_api::network::cloud::v1alpha1::ListMappingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListMappings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListMappingsResponse>* CloudInfraService::Stub::AsyncListMappingsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListMappingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetMappingRequest& request, ::opi_api::network::cloud::v1alpha1::Mapping* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetMapping_, context, request, response);
}

void CloudInfraService::Stub::async::GetMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMapping_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetMapping(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMapping_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Mapping>* CloudInfraService::Stub::PrepareAsyncGetMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetMappingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Mapping, ::opi_api::network::cloud::v1alpha1::GetMappingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetMapping_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Mapping>* CloudInfraService::Stub::AsyncGetMappingRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetMappingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetMappingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest& request, ::opi_api::network::cloud::v1alpha1::NextHop* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateNextHop_, context, request, response);
}

void CloudInfraService::Stub::async::CreateNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateNextHop_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateNextHop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHop>* CloudInfraService::Stub::PrepareAsyncCreateNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::NextHop, ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateNextHop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHop>* CloudInfraService::Stub::AsyncCreateNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateNextHopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteNextHop_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNextHop_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNextHop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteNextHop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteNextHopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest& request, ::opi_api::network::cloud::v1alpha1::NextHop* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateNextHop_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNextHop_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNextHop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHop>* CloudInfraService::Stub::PrepareAsyncUpdateNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::NextHop, ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateNextHop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHop>* CloudInfraService::Stub::AsyncUpdateNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateNextHopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest& request, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListNextHop_, context, request, response);
}

void CloudInfraService::Stub::async::ListNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest* request, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNextHop_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest* request, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNextHop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse>* CloudInfraService::Stub::PrepareAsyncListNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListNextHop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse>* CloudInfraService::Stub::AsyncListNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListNextHopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest& request, ::opi_api::network::cloud::v1alpha1::NextHop* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetNextHop_, context, request, response);
}

void CloudInfraService::Stub::async::GetNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNextHop_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetNextHop(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNextHop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHop>* CloudInfraService::Stub::PrepareAsyncGetNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::NextHop, ::opi_api::network::cloud::v1alpha1::GetNextHopRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetNextHop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHop>* CloudInfraService::Stub::AsyncGetNextHopRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetNextHopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest& request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateNextHopGroup_, context, request, response);
}

void CloudInfraService::Stub::async::CreateNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateNextHopGroup_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateNextHopGroup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHopGroup>* CloudInfraService::Stub::PrepareAsyncCreateNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateNextHopGroup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHopGroup>* CloudInfraService::Stub::AsyncCreateNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateNextHopGroupRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteNextHopGroup_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNextHopGroup_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNextHopGroup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteNextHopGroup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteNextHopGroupRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest& request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateNextHopGroup_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNextHopGroup_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNextHopGroup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHopGroup>* CloudInfraService::Stub::PrepareAsyncUpdateNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateNextHopGroup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHopGroup>* CloudInfraService::Stub::AsyncUpdateNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateNextHopGroupRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListNextHopGroups(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest& request, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListNextHopGroups_, context, request, response);
}

void CloudInfraService::Stub::async::ListNextHopGroups(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest* request, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNextHopGroups_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListNextHopGroups(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest* request, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNextHopGroups_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse>* CloudInfraService::Stub::PrepareAsyncListNextHopGroupsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListNextHopGroups_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse>* CloudInfraService::Stub::AsyncListNextHopGroupsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListNextHopGroupsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest& request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetNextHopGroup_, context, request, response);
}

void CloudInfraService::Stub::async::GetNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNextHopGroup_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetNextHopGroup(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNextHopGroup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHopGroup>* CloudInfraService::Stub::PrepareAsyncGetNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetNextHopGroup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::NextHopGroup>* CloudInfraService::Stub::AsyncGetNextHopGroupRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetNextHopGroupRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest& request, ::opi_api::network::cloud::v1alpha1::Subnet* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateSubnet_, context, request, response);
}

void CloudInfraService::Stub::async::CreateSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSubnet_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSubnet_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Subnet>* CloudInfraService::Stub::PrepareAsyncCreateSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Subnet, ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateSubnet_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Subnet>* CloudInfraService::Stub::AsyncCreateSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateSubnetRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteSubnet_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSubnet_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSubnet_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteSubnet_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteSubnetRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest& request, ::opi_api::network::cloud::v1alpha1::Subnet* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateSubnet_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSubnet_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSubnet_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Subnet>* CloudInfraService::Stub::PrepareAsyncUpdateSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Subnet, ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateSubnet_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Subnet>* CloudInfraService::Stub::AsyncUpdateSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateSubnetRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListSubnets(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest& request, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSubnets_, context, request, response);
}

void CloudInfraService::Stub::async::ListSubnets(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest* request, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSubnets_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListSubnets(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest* request, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSubnets_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse>* CloudInfraService::Stub::PrepareAsyncListSubnetsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSubnets_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse>* CloudInfraService::Stub::AsyncListSubnetsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSubnetsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest& request, ::opi_api::network::cloud::v1alpha1::Subnet* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSubnet_, context, request, response);
}

void CloudInfraService::Stub::async::GetSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSubnet_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetSubnet(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSubnet_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Subnet>* CloudInfraService::Stub::PrepareAsyncGetSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Subnet, ::opi_api::network::cloud::v1alpha1::GetSubnetRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSubnet_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Subnet>* CloudInfraService::Stub::AsyncGetSubnetRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSubnetRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest& request, ::opi_api::network::cloud::v1alpha1::Tunnel* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateTunnel_, context, request, response);
}

void CloudInfraService::Stub::async::CreateTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateTunnel_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateTunnel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Tunnel>* CloudInfraService::Stub::PrepareAsyncCreateTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Tunnel, ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateTunnel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Tunnel>* CloudInfraService::Stub::AsyncCreateTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateTunnelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteTunnel_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteTunnel_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteTunnel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteTunnel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteTunnelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest& request, ::opi_api::network::cloud::v1alpha1::Tunnel* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateTunnel_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateTunnel_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateTunnel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Tunnel>* CloudInfraService::Stub::PrepareAsyncUpdateTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Tunnel, ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateTunnel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Tunnel>* CloudInfraService::Stub::AsyncUpdateTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateTunnelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListTunnels(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest& request, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListTunnels_, context, request, response);
}

void CloudInfraService::Stub::async::ListTunnels(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest* request, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListTunnels_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListTunnels(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest* request, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListTunnels_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse>* CloudInfraService::Stub::PrepareAsyncListTunnelsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListTunnels_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse>* CloudInfraService::Stub::AsyncListTunnelsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListTunnelsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest& request, ::opi_api::network::cloud::v1alpha1::Tunnel* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetTunnel_, context, request, response);
}

void CloudInfraService::Stub::async::GetTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetTunnel_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetTunnel(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetTunnel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Tunnel>* CloudInfraService::Stub::PrepareAsyncGetTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Tunnel, ::opi_api::network::cloud::v1alpha1::GetTunnelRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetTunnel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Tunnel>* CloudInfraService::Stub::AsyncGetTunnelRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetTunnelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest& request, ::opi_api::network::cloud::v1alpha1::Vpc* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateVpc_, context, request, response);
}

void CloudInfraService::Stub::async::CreateVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateVpc_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateVpc_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vpc>* CloudInfraService::Stub::PrepareAsyncCreateVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Vpc, ::opi_api::network::cloud::v1alpha1::CreateVpcRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateVpc_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vpc>* CloudInfraService::Stub::AsyncCreateVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateVpcRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteVpc_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteVpc_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteVpc_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteVpc_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteVpcRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest& request, ::opi_api::network::cloud::v1alpha1::Vpc* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateVpc_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateVpc_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateVpc_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vpc>* CloudInfraService::Stub::PrepareAsyncUpdateVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Vpc, ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateVpc_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vpc>* CloudInfraService::Stub::AsyncUpdateVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateVpcRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListVpcs(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest& request, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListVpcsRequest, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListVpcs_, context, request, response);
}

void CloudInfraService::Stub::async::ListVpcs(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest* request, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListVpcsRequest, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVpcs_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListVpcs(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest* request, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVpcs_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListVpcsResponse>* CloudInfraService::Stub::PrepareAsyncListVpcsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListVpcsResponse, ::opi_api::network::cloud::v1alpha1::ListVpcsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListVpcs_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListVpcsResponse>* CloudInfraService::Stub::AsyncListVpcsRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListVpcsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVpcRequest& request, ::opi_api::network::cloud::v1alpha1::Vpc* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetVpc_, context, request, response);
}

void CloudInfraService::Stub::async::GetVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVpc_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetVpc(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVpc_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vpc>* CloudInfraService::Stub::PrepareAsyncGetVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVpcRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::Vpc, ::opi_api::network::cloud::v1alpha1::GetVpcRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetVpc_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::Vpc>* CloudInfraService::Stub::AsyncGetVpcRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVpcRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetVpcRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest& request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateVPCPeer_, context, request, response);
}

void CloudInfraService::Stub::async::CreateVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateVPCPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateVPCPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::VPCPeer>* CloudInfraService::Stub::PrepareAsyncCreateVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::VPCPeer, ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateVPCPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::VPCPeer>* CloudInfraService::Stub::AsyncCreateVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateVPCPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteVPCPeer_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteVPCPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteVPCPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteVPCPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteVPCPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest& request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateVPCPeer_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateVPCPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateVPCPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::VPCPeer>* CloudInfraService::Stub::PrepareAsyncUpdateVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::VPCPeer, ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateVPCPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::VPCPeer>* CloudInfraService::Stub::AsyncUpdateVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateVPCPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListVPCPeers(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest& request, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListVPCPeers_, context, request, response);
}

void CloudInfraService::Stub::async::ListVPCPeers(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest* request, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVPCPeers_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListVPCPeers(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest* request, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListVPCPeers_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse>* CloudInfraService::Stub::PrepareAsyncListVPCPeersRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListVPCPeers_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse>* CloudInfraService::Stub::AsyncListVPCPeersRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListVPCPeersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest& request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetVPCPeer_, context, request, response);
}

void CloudInfraService::Stub::async::GetVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVPCPeer_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetVPCPeer(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetVPCPeer_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::VPCPeer>* CloudInfraService::Stub::PrepareAsyncGetVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::VPCPeer, ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetVPCPeer_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::VPCPeer>* CloudInfraService::Stub::AsyncGetVPCPeerRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetVPCPeerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateSecurityPolicy_, context, request, response);
}

void CloudInfraService::Stub::async::CreateSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSecurityPolicy_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSecurityPolicy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityPolicy>* CloudInfraService::Stub::PrepareAsyncCreateSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateSecurityPolicy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityPolicy>* CloudInfraService::Stub::AsyncCreateSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateSecurityPolicyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteSecurityPolicy_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSecurityPolicy_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSecurityPolicy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteSecurityPolicy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteSecurityPolicyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateSecurityPolicy_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSecurityPolicy_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSecurityPolicy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityPolicy>* CloudInfraService::Stub::PrepareAsyncUpdateSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateSecurityPolicy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityPolicy>* CloudInfraService::Stub::AsyncUpdateSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateSecurityPolicyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListSecurityPolicys(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest& request, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSecurityPolicys_, context, request, response);
}

void CloudInfraService::Stub::async::ListSecurityPolicys(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSecurityPolicys_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListSecurityPolicys(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSecurityPolicys_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse>* CloudInfraService::Stub::PrepareAsyncListSecurityPolicysRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSecurityPolicys_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse>* CloudInfraService::Stub::AsyncListSecurityPolicysRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSecurityPolicysRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSecurityPolicy_, context, request, response);
}

void CloudInfraService::Stub::async::GetSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSecurityPolicy_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetSecurityPolicy(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSecurityPolicy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityPolicy>* CloudInfraService::Stub::PrepareAsyncGetSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSecurityPolicy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityPolicy>* CloudInfraService::Stub::AsyncGetSecurityPolicyRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSecurityPolicyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateSecurityRule_, context, request, response);
}

void CloudInfraService::Stub::async::CreateSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSecurityRule_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSecurityRule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityRule>* CloudInfraService::Stub::PrepareAsyncCreateSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityRule, ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateSecurityRule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityRule>* CloudInfraService::Stub::AsyncCreateSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateSecurityRuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteSecurityRule_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSecurityRule_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSecurityRule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteSecurityRule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteSecurityRuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateSecurityRule_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSecurityRule_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSecurityRule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityRule>* CloudInfraService::Stub::PrepareAsyncUpdateSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityRule, ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateSecurityRule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityRule>* CloudInfraService::Stub::AsyncUpdateSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateSecurityRuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListSecurityRules(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest& request, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSecurityRules_, context, request, response);
}

void CloudInfraService::Stub::async::ListSecurityRules(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSecurityRules_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListSecurityRules(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSecurityRules_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse>* CloudInfraService::Stub::PrepareAsyncListSecurityRulesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSecurityRules_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse>* CloudInfraService::Stub::AsyncListSecurityRulesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSecurityRulesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSecurityRule_, context, request, response);
}

void CloudInfraService::Stub::async::GetSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSecurityRule_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetSecurityRule(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSecurityRule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityRule>* CloudInfraService::Stub::PrepareAsyncGetSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityRule, ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSecurityRule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityRule>* CloudInfraService::Stub::AsyncGetSecurityRuleRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSecurityRuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::CreateSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateSecurityProfile_, context, request, response);
}

void CloudInfraService::Stub::async::CreateSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSecurityProfile_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::CreateSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateSecurityProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityProfile>* CloudInfraService::Stub::PrepareAsyncCreateSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateSecurityProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityProfile>* CloudInfraService::Stub::AsyncCreateSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateSecurityProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::DeleteSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteSecurityProfile_, context, request, response);
}

void CloudInfraService::Stub::async::DeleteSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSecurityProfile_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::DeleteSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSecurityProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::PrepareAsyncDeleteSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteSecurityProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CloudInfraService::Stub::AsyncDeleteSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteSecurityProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::UpdateSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateSecurityProfile_, context, request, response);
}

void CloudInfraService::Stub::async::UpdateSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSecurityProfile_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::UpdateSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSecurityProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityProfile>* CloudInfraService::Stub::PrepareAsyncUpdateSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateSecurityProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityProfile>* CloudInfraService::Stub::AsyncUpdateSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateSecurityProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::ListSecurityProfiles(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest& request, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSecurityProfiles_, context, request, response);
}

void CloudInfraService::Stub::async::ListSecurityProfiles(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSecurityProfiles_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::ListSecurityProfiles(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSecurityProfiles_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse>* CloudInfraService::Stub::PrepareAsyncListSecurityProfilesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSecurityProfiles_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse>* CloudInfraService::Stub::AsyncListSecurityProfilesRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSecurityProfilesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CloudInfraService::Stub::GetSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest& request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSecurityProfile_, context, request, response);
}

void CloudInfraService::Stub::async::GetSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSecurityProfile_, context, request, response, std::move(f));
}

void CloudInfraService::Stub::async::GetSecurityProfile(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSecurityProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityProfile>* CloudInfraService::Stub::PrepareAsyncGetSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSecurityProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::network::cloud::v1alpha1::SecurityProfile>* CloudInfraService::Stub::AsyncGetSecurityProfileRaw(::grpc::ClientContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSecurityProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

CloudInfraService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest* req,
             ::opi_api::network::cloud::v1alpha1::DeviceCapabilities* resp) {
               return service->GetDeviceCapabilities(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* req,
             ::opi_api::network::cloud::v1alpha1::Device* resp) {
               return service->CreateDevice(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteDevice(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest* req,
             ::opi_api::network::cloud::v1alpha1::Device* resp) {
               return service->UpdateDevice(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListDevicesRequest, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListDevicesResponse* resp) {
               return service->ListDevices(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetDeviceRequest, ::opi_api::network::cloud::v1alpha1::Device, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest* req,
             ::opi_api::network::cloud::v1alpha1::Device* resp) {
               return service->GetDevice(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdatePortRequest, ::opi_api::network::cloud::v1alpha1::Port, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest* req,
             ::opi_api::network::cloud::v1alpha1::Port* resp) {
               return service->UpdatePort(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListPortsRequest, ::opi_api::network::cloud::v1alpha1::ListPortsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListPortsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListPortsResponse* resp) {
               return service->ListPorts(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetPortRequest, ::opi_api::network::cloud::v1alpha1::Port, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetPortRequest* req,
             ::opi_api::network::cloud::v1alpha1::Port* resp) {
               return service->GetPort(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest* req,
             ::opi_api::network::cloud::v1alpha1::Vnic* resp) {
               return service->CreateVnic(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteVnic(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest* req,
             ::opi_api::network::cloud::v1alpha1::Vnic* resp) {
               return service->UpdateVnic(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListVnicsRequest, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListVnicsResponse* resp) {
               return service->ListVnics(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetVnicRequest, ::opi_api::network::cloud::v1alpha1::Vnic, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetVnicRequest* req,
             ::opi_api::network::cloud::v1alpha1::Vnic* resp) {
               return service->GetVnic(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest* req,
             ::opi_api::network::cloud::v1alpha1::Interface* resp) {
               return service->CreateInterface(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteInterface(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest* req,
             ::opi_api::network::cloud::v1alpha1::Interface* resp) {
               return service->UpdateInterface(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse* resp) {
               return service->ListInterfaces(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest, ::opi_api::network::cloud::v1alpha1::Interface, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest* req,
             ::opi_api::network::cloud::v1alpha1::Interface* resp) {
               return service->GetInterface(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest* req,
             ::opi_api::network::cloud::v1alpha1::RouteTable* resp) {
               return service->CreateRouteTable(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteRouteTable(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest* req,
             ::opi_api::network::cloud::v1alpha1::RouteTable* resp) {
               return service->UpdateRouteTable(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse* resp) {
               return service->ListRouteTables(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest, ::opi_api::network::cloud::v1alpha1::RouteTable, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest* req,
             ::opi_api::network::cloud::v1alpha1::RouteTable* resp) {
               return service->GetRouteTable(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest* req,
             ::opi_api::network::cloud::v1alpha1::Route* resp) {
               return service->CreateRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest* req,
             ::opi_api::network::cloud::v1alpha1::Route* resp) {
               return service->UpdateRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListRoutesRequest, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListRoutesResponse* resp) {
               return service->ListRoutes(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetRouteRequest, ::opi_api::network::cloud::v1alpha1::Route, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetRouteRequest* req,
             ::opi_api::network::cloud::v1alpha1::Route* resp) {
               return service->GetRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest* req,
             ::opi_api::network::cloud::v1alpha1::UnderlayRoute* resp) {
               return service->CreateUnderlayRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[30],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteUnderlayRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[31],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest* req,
             ::opi_api::network::cloud::v1alpha1::UnderlayRoute* resp) {
               return service->UpdateUnderlayRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[32],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse* resp) {
               return service->ListUnderlayRoutes(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[33],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest, ::opi_api::network::cloud::v1alpha1::UnderlayRoute, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest* req,
             ::opi_api::network::cloud::v1alpha1::UnderlayRoute* resp) {
               return service->GetUnderlayRoute(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[34],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest* req,
             ::opi_api::network::cloud::v1alpha1::Bgp* resp) {
               return service->CreateBgp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[35],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteBgp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[36],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest* req,
             ::opi_api::network::cloud::v1alpha1::Bgp* resp) {
               return service->UpdateBgp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[37],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListBgpsRequest, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListBgpsResponse* resp) {
               return service->ListBgps(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[38],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetBgpRequest, ::opi_api::network::cloud::v1alpha1::Bgp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetBgpRequest* req,
             ::opi_api::network::cloud::v1alpha1::Bgp* resp) {
               return service->GetBgp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[39],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest* req,
             ::opi_api::network::cloud::v1alpha1::BGPPeer* resp) {
               return service->CreateBGPPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[40],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteBGPPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[41],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest* req,
             ::opi_api::network::cloud::v1alpha1::BGPPeer* resp) {
               return service->UpdateBGPPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[42],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse* resp) {
               return service->ListBGPPeers(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[43],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest, ::opi_api::network::cloud::v1alpha1::BGPPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest* req,
             ::opi_api::network::cloud::v1alpha1::BGPPeer* resp) {
               return service->GetBGPPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[44],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest* req,
             ::opi_api::network::cloud::v1alpha1::BGPPeerAf* resp) {
               return service->CreateBGPPeerAf(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[45],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteBGPPeerAf(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[46],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest* req,
             ::opi_api::network::cloud::v1alpha1::BGPPeerAf* resp) {
               return service->UpdateBGPPeerAf(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[47],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse* resp) {
               return service->ListBGPPeerAfs(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[48],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest, ::opi_api::network::cloud::v1alpha1::BGPPeerAf, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest* req,
             ::opi_api::network::cloud::v1alpha1::BGPPeerAf* resp) {
               return service->GetBGPPeerAf(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[49],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest* req,
             ::opi_api::network::cloud::v1alpha1::Mapping* resp) {
               return service->CreateMapping(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[50],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteMapping(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[51],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest* req,
             ::opi_api::network::cloud::v1alpha1::Mapping* resp) {
               return service->UpdateMapping(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[52],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListMappingsRequest, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListMappingsResponse* resp) {
               return service->ListMappings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[53],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetMappingRequest, ::opi_api::network::cloud::v1alpha1::Mapping, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetMappingRequest* req,
             ::opi_api::network::cloud::v1alpha1::Mapping* resp) {
               return service->GetMapping(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[54],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest* req,
             ::opi_api::network::cloud::v1alpha1::NextHop* resp) {
               return service->CreateNextHop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[55],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteNextHop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[56],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest* req,
             ::opi_api::network::cloud::v1alpha1::NextHop* resp) {
               return service->UpdateNextHop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[57],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse* resp) {
               return service->ListNextHop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[58],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetNextHopRequest, ::opi_api::network::cloud::v1alpha1::NextHop, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest* req,
             ::opi_api::network::cloud::v1alpha1::NextHop* resp) {
               return service->GetNextHop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[59],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest* req,
             ::opi_api::network::cloud::v1alpha1::NextHopGroup* resp) {
               return service->CreateNextHopGroup(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[60],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteNextHopGroup(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[61],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest* req,
             ::opi_api::network::cloud::v1alpha1::NextHopGroup* resp) {
               return service->UpdateNextHopGroup(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[62],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse* resp) {
               return service->ListNextHopGroups(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[63],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest, ::opi_api::network::cloud::v1alpha1::NextHopGroup, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest* req,
             ::opi_api::network::cloud::v1alpha1::NextHopGroup* resp) {
               return service->GetNextHopGroup(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[64],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest* req,
             ::opi_api::network::cloud::v1alpha1::Subnet* resp) {
               return service->CreateSubnet(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[65],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteSubnet(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[66],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest* req,
             ::opi_api::network::cloud::v1alpha1::Subnet* resp) {
               return service->UpdateSubnet(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[67],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse* resp) {
               return service->ListSubnets(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[68],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetSubnetRequest, ::opi_api::network::cloud::v1alpha1::Subnet, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest* req,
             ::opi_api::network::cloud::v1alpha1::Subnet* resp) {
               return service->GetSubnet(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[69],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest* req,
             ::opi_api::network::cloud::v1alpha1::Tunnel* resp) {
               return service->CreateTunnel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[70],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteTunnel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[71],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest* req,
             ::opi_api::network::cloud::v1alpha1::Tunnel* resp) {
               return service->UpdateTunnel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[72],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse* resp) {
               return service->ListTunnels(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[73],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetTunnelRequest, ::opi_api::network::cloud::v1alpha1::Tunnel, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest* req,
             ::opi_api::network::cloud::v1alpha1::Tunnel* resp) {
               return service->GetTunnel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[74],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest* req,
             ::opi_api::network::cloud::v1alpha1::Vpc* resp) {
               return service->CreateVpc(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[75],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteVpc(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[76],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest* req,
             ::opi_api::network::cloud::v1alpha1::Vpc* resp) {
               return service->UpdateVpc(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[77],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListVpcsRequest, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListVpcsResponse* resp) {
               return service->ListVpcs(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[78],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetVpcRequest, ::opi_api::network::cloud::v1alpha1::Vpc, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetVpcRequest* req,
             ::opi_api::network::cloud::v1alpha1::Vpc* resp) {
               return service->GetVpc(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[79],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest* req,
             ::opi_api::network::cloud::v1alpha1::VPCPeer* resp) {
               return service->CreateVPCPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[80],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteVPCPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[81],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest* req,
             ::opi_api::network::cloud::v1alpha1::VPCPeer* resp) {
               return service->UpdateVPCPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[82],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse* resp) {
               return service->ListVPCPeers(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[83],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest, ::opi_api::network::cloud::v1alpha1::VPCPeer, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest* req,
             ::opi_api::network::cloud::v1alpha1::VPCPeer* resp) {
               return service->GetVPCPeer(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[84],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityPolicy* resp) {
               return service->CreateSecurityPolicy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[85],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteSecurityPolicy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[86],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityPolicy* resp) {
               return service->UpdateSecurityPolicy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[87],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse* resp) {
               return service->ListSecurityPolicys(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[88],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest, ::opi_api::network::cloud::v1alpha1::SecurityPolicy, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityPolicy* resp) {
               return service->GetSecurityPolicy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[89],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityRule* resp) {
               return service->CreateSecurityRule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[90],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteSecurityRule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[91],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityRule* resp) {
               return service->UpdateSecurityRule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[92],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse* resp) {
               return service->ListSecurityRules(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[93],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest, ::opi_api::network::cloud::v1alpha1::SecurityRule, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityRule* resp) {
               return service->GetSecurityRule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[94],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityProfile* resp) {
               return service->CreateSecurityProfile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[95],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteSecurityProfile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[96],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityProfile* resp) {
               return service->UpdateSecurityProfile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[97],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest* req,
             ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse* resp) {
               return service->ListSecurityProfiles(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CloudInfraService_method_names[98],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CloudInfraService::Service, ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest, ::opi_api::network::cloud::v1alpha1::SecurityProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CloudInfraService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest* req,
             ::opi_api::network::cloud::v1alpha1::SecurityProfile* resp) {
               return service->GetSecurityProfile(ctx, req, resp);
             }, this)));
}

CloudInfraService::Service::~Service() {
}

::grpc::Status CloudInfraService::Service::GetDeviceCapabilities(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceCapabilitiesRequest* request, ::opi_api::network::cloud::v1alpha1::DeviceCapabilities* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateDevice(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteDevice(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteDeviceRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateDevice(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListDevices(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListDevicesRequest* request, ::opi_api::network::cloud::v1alpha1::ListDevicesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetDevice(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetDeviceRequest* request, ::opi_api::network::cloud::v1alpha1::Device* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdatePort(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdatePortRequest* request, ::opi_api::network::cloud::v1alpha1::Port* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListPorts(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListPortsRequest* request, ::opi_api::network::cloud::v1alpha1::ListPortsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetPort(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetPortRequest* request, ::opi_api::network::cloud::v1alpha1::Port* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateVnic(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteVnic(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVnicRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateVnic(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListVnics(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListVnicsRequest* request, ::opi_api::network::cloud::v1alpha1::ListVnicsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetVnic(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetVnicRequest* request, ::opi_api::network::cloud::v1alpha1::Vnic* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateInterface(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteInterface(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteInterfaceRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateInterface(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListInterfaces(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListInterfacesRequest* request, ::opi_api::network::cloud::v1alpha1::ListInterfacesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetInterface(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetInterfaceRequest* request, ::opi_api::network::cloud::v1alpha1::Interface* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateRouteTable(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteRouteTable(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteTableRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateRouteTable(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListRouteTables(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListRouteTablesRequest* request, ::opi_api::network::cloud::v1alpha1::ListRouteTablesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetRouteTable(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteTableRequest* request, ::opi_api::network::cloud::v1alpha1::RouteTable* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteRouteRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListRoutes(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListRoutesRequest* request, ::opi_api::network::cloud::v1alpha1::ListRoutesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetRouteRequest* request, ::opi_api::network::cloud::v1alpha1::Route* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateUnderlayRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteUnderlayRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteUnderlayRouteRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateUnderlayRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListUnderlayRoutes(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesRequest* request, ::opi_api::network::cloud::v1alpha1::ListUnderlayRoutesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetUnderlayRoute(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetUnderlayRouteRequest* request, ::opi_api::network::cloud::v1alpha1::UnderlayRoute* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateBgp(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteBgp(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBgpRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateBgp(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListBgps(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListBgpsRequest* request, ::opi_api::network::cloud::v1alpha1::ListBgpsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetBgp(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetBgpRequest* request, ::opi_api::network::cloud::v1alpha1::Bgp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateBGPPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteBGPPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateBGPPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListBGPPeers(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeersRequest* request, ::opi_api::network::cloud::v1alpha1::ListBGPPeersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetBGPPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeer* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateBGPPeerAf(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteBGPPeerAf(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteBGPPeerAfRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateBGPPeerAf(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListBGPPeerAfs(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsRequest* request, ::opi_api::network::cloud::v1alpha1::ListBGPPeerAfsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetBGPPeerAf(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetBGPPeerAfRequest* request, ::opi_api::network::cloud::v1alpha1::BGPPeerAf* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateMapping(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteMapping(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteMappingRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateMapping(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListMappings(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListMappingsRequest* request, ::opi_api::network::cloud::v1alpha1::ListMappingsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetMapping(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetMappingRequest* request, ::opi_api::network::cloud::v1alpha1::Mapping* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateNextHop(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteNextHop(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateNextHop(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListNextHop(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopsRequest* request, ::opi_api::network::cloud::v1alpha1::ListNextHopsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetNextHop(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopRequest* request, ::opi_api::network::cloud::v1alpha1::NextHop* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateNextHopGroup(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteNextHopGroup(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteNextHopGroupRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateNextHopGroup(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListNextHopGroups(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsRequest* request, ::opi_api::network::cloud::v1alpha1::ListNextHopGroupsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetNextHopGroup(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetNextHopGroupRequest* request, ::opi_api::network::cloud::v1alpha1::NextHopGroup* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateSubnet(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteSubnet(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSubnetRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateSubnet(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListSubnets(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListSubnetsRequest* request, ::opi_api::network::cloud::v1alpha1::ListSubnetsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetSubnet(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetSubnetRequest* request, ::opi_api::network::cloud::v1alpha1::Subnet* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateTunnel(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteTunnel(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteTunnelRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateTunnel(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListTunnels(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListTunnelsRequest* request, ::opi_api::network::cloud::v1alpha1::ListTunnelsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetTunnel(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetTunnelRequest* request, ::opi_api::network::cloud::v1alpha1::Tunnel* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateVpc(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteVpc(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVpcRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateVpc(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListVpcs(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListVpcsRequest* request, ::opi_api::network::cloud::v1alpha1::ListVpcsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetVpc(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetVpcRequest* request, ::opi_api::network::cloud::v1alpha1::Vpc* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateVPCPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteVPCPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteVPCPeerRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateVPCPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListVPCPeers(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListVPCPeersRequest* request, ::opi_api::network::cloud::v1alpha1::ListVPCPeersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetVPCPeer(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetVPCPeerRequest* request, ::opi_api::network::cloud::v1alpha1::VPCPeer* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateSecurityPolicy(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteSecurityPolicy(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityPolicyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateSecurityPolicy(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListSecurityPolicys(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityPolicysResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetSecurityPolicy(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityPolicyRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityPolicy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateSecurityRule(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteSecurityRule(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityRuleRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateSecurityRule(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListSecurityRules(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityRulesRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityRulesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetSecurityRule(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityRuleRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityRule* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::CreateSecurityProfile(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::CreateSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::DeleteSecurityProfile(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::DeleteSecurityProfileRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::UpdateSecurityProfile(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::UpdateSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::ListSecurityProfiles(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesRequest* request, ::opi_api::network::cloud::v1alpha1::ListSecurityProfilesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CloudInfraService::Service::GetSecurityProfile(::grpc::ServerContext* context, const ::opi_api::network::cloud::v1alpha1::GetSecurityProfileRequest* request, ::opi_api::network::cloud::v1alpha1::SecurityProfile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace opi_api
}  // namespace network
}  // namespace cloud
}  // namespace v1alpha1

