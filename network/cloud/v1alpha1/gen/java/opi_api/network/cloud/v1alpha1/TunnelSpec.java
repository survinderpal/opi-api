// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tunnel.proto

package opi_api.network.cloud.v1alpha1;

/**
 * <pre>
 * tunnel configuration - identified by 3-tuple (LocalIP, RemoteIP, encap)
 * If multiple tunnels with same RemoteIP address are created, they should
 * have same Type attribute value i.e., different tunnels with same IP can't
 * have different tunnel type
 * </pre>
 *
 * Protobuf type {@code opi_api.network.cloud.v1alpha1.TunnelSpec}
 */
public final class TunnelSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.cloud.v1alpha1.TunnelSpec)
    TunnelSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TunnelSpec.newBuilder() to construct.
  private TunnelSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TunnelSpec() {
    type_ = 0;
    macAddress_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TunnelSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TunnelSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (id_ != null) {
              subBuilder = id_.toBuilder();
            }
            id_ = input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(id_);
              id_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (vpcId_ != null) {
              subBuilder = vpcId_.toBuilder();
            }
            vpcId_ = input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vpcId_);
              vpcId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder subBuilder = null;
            if (localIp_ != null) {
              subBuilder = localIp_.toBuilder();
            }
            localIp_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.IPAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(localIp_);
              localIp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder subBuilder = null;
            if (remoteIp_ != null) {
              subBuilder = remoteIp_.toBuilder();
            }
            remoteIp_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.IPAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(remoteIp_);
              remoteIp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 50: {
            opi_api.network.opinetcommon.v1alpha1.Encap.Builder subBuilder = null;
            if (encap_ != null) {
              subBuilder = encap_.toBuilder();
            }
            encap_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.Encap.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(encap_);
              encap_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (nhCase_ == 8) {
              subBuilder = ((opi_api.common.v1.ObjectKey) nh_).toBuilder();
            }
            nh_ =
                input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.common.v1.ObjectKey) nh_);
              nh_ = subBuilder.buildPartial();
            }
            nhCase_ = 8;
            break;
          }
          case 74: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (nhCase_ == 9) {
              subBuilder = ((opi_api.common.v1.ObjectKey) nh_).toBuilder();
            }
            nh_ =
                input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.common.v1.ObjectKey) nh_);
              nh_ = subBuilder.buildPartial();
            }
            nhCase_ = 9;
            break;
          }
          case 82: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (nhCase_ == 10) {
              subBuilder = ((opi_api.common.v1.ObjectKey) nh_).toBuilder();
            }
            nh_ =
                input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.common.v1.ObjectKey) nh_);
              nh_ = subBuilder.buildPartial();
            }
            nhCase_ = 10;
            break;
          }
          case 90: {
            opi_api.network.cloud.v1alpha1.DropNexthop.Builder subBuilder = null;
            if (nhCase_ == 11) {
              subBuilder = ((opi_api.network.cloud.v1alpha1.DropNexthop) nh_).toBuilder();
            }
            nh_ =
                input.readMessage(opi_api.network.cloud.v1alpha1.DropNexthop.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((opi_api.network.cloud.v1alpha1.DropNexthop) nh_);
              nh_ = subBuilder.buildPartial();
            }
            nhCase_ = 11;
            break;
          }
          case 98: {

            macAddress_ = input.readBytes();
            break;
          }
          case 104: {

            tos_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.cloud.v1alpha1.TunnelProto.internal_static_opi_api_network_cloud_v1alpha1_TunnelSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.cloud.v1alpha1.TunnelProto.internal_static_opi_api_network_cloud_v1alpha1_TunnelSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.cloud.v1alpha1.TunnelSpec.class, opi_api.network.cloud.v1alpha1.TunnelSpec.Builder.class);
  }

  private int nhCase_ = 0;
  private java.lang.Object nh_;
  public enum NhCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    NEXTHOP_ID(8),
    NEXTHOP_GROUP_ID(9),
    TUNNEL_ID(10),
    DROP_NEXT_HOP(11),
    NH_NOT_SET(0);
    private final int value;
    private NhCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NhCase valueOf(int value) {
      return forNumber(value);
    }

    public static NhCase forNumber(int value) {
      switch (value) {
        case 8: return NEXTHOP_ID;
        case 9: return NEXTHOP_GROUP_ID;
        case 10: return TUNNEL_ID;
        case 11: return DROP_NEXT_HOP;
        case 0: return NH_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public NhCase
  getNhCase() {
    return NhCase.forNumber(
        nhCase_);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private opi_api.common.v1.ObjectKey id_;
  /**
   * <pre>
   * unique tunnel identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return id_ != null;
  }
  /**
   * <pre>
   * unique tunnel identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getId() {
    return id_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
  }
  /**
   * <pre>
   * unique tunnel identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder() {
    return getId();
  }

  public static final int VPC_ID_FIELD_NUMBER = 2;
  private opi_api.common.v1.ObjectKey vpcId_;
  /**
   * <pre>
   * virtual private cloud this is tunnel belongs to
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
   * @return Whether the vpcId field is set.
   */
  @java.lang.Override
  public boolean hasVpcId() {
    return vpcId_ != null;
  }
  /**
   * <pre>
   * virtual private cloud this is tunnel belongs to
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
   * @return The vpcId.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getVpcId() {
    return vpcId_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : vpcId_;
  }
  /**
   * <pre>
   * virtual private cloud this is tunnel belongs to
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getVpcIdOrBuilder() {
    return getVpcId();
  }

  public static final int LOCAL_IP_FIELD_NUMBER = 3;
  private opi_api.network.opinetcommon.v1alpha1.IPAddress localIp_;
  /**
   * <pre>
   * local IP of the tunnel (used as outer SIP in tunneled packets)
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
   * @return Whether the localIp field is set.
   */
  @java.lang.Override
  public boolean hasLocalIp() {
    return localIp_ != null;
  }
  /**
   * <pre>
   * local IP of the tunnel (used as outer SIP in tunneled packets)
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
   * @return The localIp.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddress getLocalIp() {
    return localIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : localIp_;
  }
  /**
   * <pre>
   * local IP of the tunnel (used as outer SIP in tunneled packets)
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getLocalIpOrBuilder() {
    return getLocalIp();
  }

  public static final int REMOTE_IP_FIELD_NUMBER = 4;
  private opi_api.network.opinetcommon.v1alpha1.IPAddress remoteIp_;
  /**
   * <pre>
   * remote IP of the tunnel (used as outer DIP in tunneled packets)
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
   * @return Whether the remoteIp field is set.
   */
  @java.lang.Override
  public boolean hasRemoteIp() {
    return remoteIp_ != null;
  }
  /**
   * <pre>
   * remote IP of the tunnel (used as outer DIP in tunneled packets)
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
   * @return The remoteIp.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddress getRemoteIp() {
    return remoteIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : remoteIp_;
  }
  /**
   * <pre>
   * remote IP of the tunnel (used as outer DIP in tunneled packets)
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getRemoteIpOrBuilder() {
    return getRemoteIp();
  }

  public static final int TYPE_FIELD_NUMBER = 5;
  private int type_;
  /**
   * <pre>
   * type of the tunnel
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * type of the tunnel
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
   * @return The type.
   */
  @java.lang.Override public opi_api.network.cloud.v1alpha1.TunnelType getType() {
    @SuppressWarnings("deprecation")
    opi_api.network.cloud.v1alpha1.TunnelType result = opi_api.network.cloud.v1alpha1.TunnelType.valueOf(type_);
    return result == null ? opi_api.network.cloud.v1alpha1.TunnelType.UNRECOGNIZED : result;
  }

  public static final int ENCAP_FIELD_NUMBER = 6;
  private opi_api.network.opinetcommon.v1alpha1.Encap encap_;
  /**
   * <pre>
   * encap used while sending traffic to this tunnel
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
   * @return Whether the encap field is set.
   */
  @java.lang.Override
  public boolean hasEncap() {
    return encap_ != null;
  }
  /**
   * <pre>
   * encap used while sending traffic to this tunnel
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
   * @return The encap.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.Encap getEncap() {
    return encap_ == null ? opi_api.network.opinetcommon.v1alpha1.Encap.getDefaultInstance() : encap_;
  }
  /**
   * <pre>
   * encap used while sending traffic to this tunnel
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder getEncapOrBuilder() {
    return getEncap();
  }

  public static final int NEXTHOP_ID_FIELD_NUMBER = 8;
  /**
   * <pre>
   * underlay nexthop for this tunnel
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
   * @return Whether the nexthopId field is set.
   */
  @java.lang.Override
  public boolean hasNexthopId() {
    return nhCase_ == 8;
  }
  /**
   * <pre>
   * underlay nexthop for this tunnel
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
   * @return The nexthopId.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getNexthopId() {
    if (nhCase_ == 8) {
       return (opi_api.common.v1.ObjectKey) nh_;
    }
    return opi_api.common.v1.ObjectKey.getDefaultInstance();
  }
  /**
   * <pre>
   * underlay nexthop for this tunnel
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getNexthopIdOrBuilder() {
    if (nhCase_ == 8) {
       return (opi_api.common.v1.ObjectKey) nh_;
    }
    return opi_api.common.v1.ObjectKey.getDefaultInstance();
  }

  public static final int NEXTHOP_GROUP_ID_FIELD_NUMBER = 9;
  /**
   * <pre>
   * underlay nexthop group for this tunnel
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
   * @return Whether the nexthopGroupId field is set.
   */
  @java.lang.Override
  public boolean hasNexthopGroupId() {
    return nhCase_ == 9;
  }
  /**
   * <pre>
   * underlay nexthop group for this tunnel
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
   * @return The nexthopGroupId.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getNexthopGroupId() {
    if (nhCase_ == 9) {
       return (opi_api.common.v1.ObjectKey) nh_;
    }
    return opi_api.common.v1.ObjectKey.getDefaultInstance();
  }
  /**
   * <pre>
   * underlay nexthop group for this tunnel
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getNexthopGroupIdOrBuilder() {
    if (nhCase_ == 9) {
       return (opi_api.common.v1.ObjectKey) nh_;
    }
    return opi_api.common.v1.ObjectKey.getDefaultInstance();
  }

  public static final int TUNNEL_ID_FIELD_NUMBER = 10;
  /**
   * <pre>
   * a tunnel can point to another tunnel for double encap
   * - supported combinations of double encap is platform specific
   * - unsupported combination of cascading tunnels would result in configuration failure
   * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
   * @return Whether the tunnelId field is set.
   */
  @java.lang.Override
  public boolean hasTunnelId() {
    return nhCase_ == 10;
  }
  /**
   * <pre>
   * a tunnel can point to another tunnel for double encap
   * - supported combinations of double encap is platform specific
   * - unsupported combination of cascading tunnels would result in configuration failure
   * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
   * @return The tunnelId.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getTunnelId() {
    if (nhCase_ == 10) {
       return (opi_api.common.v1.ObjectKey) nh_;
    }
    return opi_api.common.v1.ObjectKey.getDefaultInstance();
  }
  /**
   * <pre>
   * a tunnel can point to another tunnel for double encap
   * - supported combinations of double encap is platform specific
   * - unsupported combination of cascading tunnels would result in configuration failure
   * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getTunnelIdOrBuilder() {
    if (nhCase_ == 10) {
       return (opi_api.common.v1.ObjectKey) nh_;
    }
    return opi_api.common.v1.ObjectKey.getDefaultInstance();
  }

  public static final int DROP_NEXT_HOP_FIELD_NUMBER = 11;
  /**
   * <pre>
   * DropNexthop is used to explicitly drop traffic destined to this tunnel
   * even when there is reachability, this is administrative override
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
   * @return Whether the dropNextHop field is set.
   */
  @java.lang.Override
  public boolean hasDropNextHop() {
    return nhCase_ == 11;
  }
  /**
   * <pre>
   * DropNexthop is used to explicitly drop traffic destined to this tunnel
   * even when there is reachability, this is administrative override
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
   * @return The dropNextHop.
   */
  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.DropNexthop getDropNextHop() {
    if (nhCase_ == 11) {
       return (opi_api.network.cloud.v1alpha1.DropNexthop) nh_;
    }
    return opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance();
  }
  /**
   * <pre>
   * DropNexthop is used to explicitly drop traffic destined to this tunnel
   * even when there is reachability, this is administrative override
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
   */
  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.DropNexthopOrBuilder getDropNextHopOrBuilder() {
    if (nhCase_ == 11) {
       return (opi_api.network.cloud.v1alpha1.DropNexthop) nh_;
    }
    return opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance();
  }

  public static final int MAC_ADDRESS_FIELD_NUMBER = 12;
  private com.google.protobuf.ByteString macAddress_;
  /**
   * <pre>
   * MAC address of the remote IP (i.e., remote side of the tunnel)
   * set to zero if dataplane is expected to resolve this
   * </pre>
   *
   * <code>bytes mac_address = 12;</code>
   * @return The macAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMacAddress() {
    return macAddress_;
  }

  public static final int TOS_FIELD_NUMBER = 13;
  private int tos_;
  /**
   * <pre>
   * when ToS is configured on a tunnel object, all traffic destined to the
   * tunnel will carry dscp value as configured.
   * ToS field is 1 byte value that is populated in the DSCP field of IPv4 outer
   * header or in the Traffic Class field of IPv6 outer header, this value, if
   * non-zero, will be used as-is (i.e., not interpreted) during encap time by
   * the dataplane.
   * The ToS value configured on the tunnel will override ToS configuration
   * in vpc and subnet objects
   * </pre>
   *
   * <code>int32 tos = 13;</code>
   * @return The tos.
   */
  @java.lang.Override
  public int getTos() {
    return tos_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != null) {
      output.writeMessage(1, getId());
    }
    if (vpcId_ != null) {
      output.writeMessage(2, getVpcId());
    }
    if (localIp_ != null) {
      output.writeMessage(3, getLocalIp());
    }
    if (remoteIp_ != null) {
      output.writeMessage(4, getRemoteIp());
    }
    if (type_ != opi_api.network.cloud.v1alpha1.TunnelType.TUNNEL_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(5, type_);
    }
    if (encap_ != null) {
      output.writeMessage(6, getEncap());
    }
    if (nhCase_ == 8) {
      output.writeMessage(8, (opi_api.common.v1.ObjectKey) nh_);
    }
    if (nhCase_ == 9) {
      output.writeMessage(9, (opi_api.common.v1.ObjectKey) nh_);
    }
    if (nhCase_ == 10) {
      output.writeMessage(10, (opi_api.common.v1.ObjectKey) nh_);
    }
    if (nhCase_ == 11) {
      output.writeMessage(11, (opi_api.network.cloud.v1alpha1.DropNexthop) nh_);
    }
    if (!macAddress_.isEmpty()) {
      output.writeBytes(12, macAddress_);
    }
    if (tos_ != 0) {
      output.writeInt32(13, tos_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getId());
    }
    if (vpcId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getVpcId());
    }
    if (localIp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getLocalIp());
    }
    if (remoteIp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRemoteIp());
    }
    if (type_ != opi_api.network.cloud.v1alpha1.TunnelType.TUNNEL_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, type_);
    }
    if (encap_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getEncap());
    }
    if (nhCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, (opi_api.common.v1.ObjectKey) nh_);
    }
    if (nhCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (opi_api.common.v1.ObjectKey) nh_);
    }
    if (nhCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (opi_api.common.v1.ObjectKey) nh_);
    }
    if (nhCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (opi_api.network.cloud.v1alpha1.DropNexthop) nh_);
    }
    if (!macAddress_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(12, macAddress_);
    }
    if (tos_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, tos_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.cloud.v1alpha1.TunnelSpec)) {
      return super.equals(obj);
    }
    opi_api.network.cloud.v1alpha1.TunnelSpec other = (opi_api.network.cloud.v1alpha1.TunnelSpec) obj;

    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (hasVpcId() != other.hasVpcId()) return false;
    if (hasVpcId()) {
      if (!getVpcId()
          .equals(other.getVpcId())) return false;
    }
    if (hasLocalIp() != other.hasLocalIp()) return false;
    if (hasLocalIp()) {
      if (!getLocalIp()
          .equals(other.getLocalIp())) return false;
    }
    if (hasRemoteIp() != other.hasRemoteIp()) return false;
    if (hasRemoteIp()) {
      if (!getRemoteIp()
          .equals(other.getRemoteIp())) return false;
    }
    if (type_ != other.type_) return false;
    if (hasEncap() != other.hasEncap()) return false;
    if (hasEncap()) {
      if (!getEncap()
          .equals(other.getEncap())) return false;
    }
    if (!getMacAddress()
        .equals(other.getMacAddress())) return false;
    if (getTos()
        != other.getTos()) return false;
    if (!getNhCase().equals(other.getNhCase())) return false;
    switch (nhCase_) {
      case 8:
        if (!getNexthopId()
            .equals(other.getNexthopId())) return false;
        break;
      case 9:
        if (!getNexthopGroupId()
            .equals(other.getNexthopGroupId())) return false;
        break;
      case 10:
        if (!getTunnelId()
            .equals(other.getTunnelId())) return false;
        break;
      case 11:
        if (!getDropNextHop()
            .equals(other.getDropNextHop())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    if (hasVpcId()) {
      hash = (37 * hash) + VPC_ID_FIELD_NUMBER;
      hash = (53 * hash) + getVpcId().hashCode();
    }
    if (hasLocalIp()) {
      hash = (37 * hash) + LOCAL_IP_FIELD_NUMBER;
      hash = (53 * hash) + getLocalIp().hashCode();
    }
    if (hasRemoteIp()) {
      hash = (37 * hash) + REMOTE_IP_FIELD_NUMBER;
      hash = (53 * hash) + getRemoteIp().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (hasEncap()) {
      hash = (37 * hash) + ENCAP_FIELD_NUMBER;
      hash = (53 * hash) + getEncap().hashCode();
    }
    hash = (37 * hash) + MAC_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getMacAddress().hashCode();
    hash = (37 * hash) + TOS_FIELD_NUMBER;
    hash = (53 * hash) + getTos();
    switch (nhCase_) {
      case 8:
        hash = (37 * hash) + NEXTHOP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNexthopId().hashCode();
        break;
      case 9:
        hash = (37 * hash) + NEXTHOP_GROUP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getNexthopGroupId().hashCode();
        break;
      case 10:
        hash = (37 * hash) + TUNNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTunnelId().hashCode();
        break;
      case 11:
        hash = (37 * hash) + DROP_NEXT_HOP_FIELD_NUMBER;
        hash = (53 * hash) + getDropNextHop().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.TunnelSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.cloud.v1alpha1.TunnelSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * tunnel configuration - identified by 3-tuple (LocalIP, RemoteIP, encap)
   * If multiple tunnels with same RemoteIP address are created, they should
   * have same Type attribute value i.e., different tunnels with same IP can't
   * have different tunnel type
   * </pre>
   *
   * Protobuf type {@code opi_api.network.cloud.v1alpha1.TunnelSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.cloud.v1alpha1.TunnelSpec)
      opi_api.network.cloud.v1alpha1.TunnelSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.cloud.v1alpha1.TunnelProto.internal_static_opi_api_network_cloud_v1alpha1_TunnelSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.cloud.v1alpha1.TunnelProto.internal_static_opi_api_network_cloud_v1alpha1_TunnelSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.cloud.v1alpha1.TunnelSpec.class, opi_api.network.cloud.v1alpha1.TunnelSpec.Builder.class);
    }

    // Construct using opi_api.network.cloud.v1alpha1.TunnelSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (idBuilder_ == null) {
        id_ = null;
      } else {
        id_ = null;
        idBuilder_ = null;
      }
      if (vpcIdBuilder_ == null) {
        vpcId_ = null;
      } else {
        vpcId_ = null;
        vpcIdBuilder_ = null;
      }
      if (localIpBuilder_ == null) {
        localIp_ = null;
      } else {
        localIp_ = null;
        localIpBuilder_ = null;
      }
      if (remoteIpBuilder_ == null) {
        remoteIp_ = null;
      } else {
        remoteIp_ = null;
        remoteIpBuilder_ = null;
      }
      type_ = 0;

      if (encapBuilder_ == null) {
        encap_ = null;
      } else {
        encap_ = null;
        encapBuilder_ = null;
      }
      macAddress_ = com.google.protobuf.ByteString.EMPTY;

      tos_ = 0;

      nhCase_ = 0;
      nh_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.cloud.v1alpha1.TunnelProto.internal_static_opi_api_network_cloud_v1alpha1_TunnelSpec_descriptor;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.TunnelSpec getDefaultInstanceForType() {
      return opi_api.network.cloud.v1alpha1.TunnelSpec.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.TunnelSpec build() {
      opi_api.network.cloud.v1alpha1.TunnelSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.TunnelSpec buildPartial() {
      opi_api.network.cloud.v1alpha1.TunnelSpec result = new opi_api.network.cloud.v1alpha1.TunnelSpec(this);
      if (idBuilder_ == null) {
        result.id_ = id_;
      } else {
        result.id_ = idBuilder_.build();
      }
      if (vpcIdBuilder_ == null) {
        result.vpcId_ = vpcId_;
      } else {
        result.vpcId_ = vpcIdBuilder_.build();
      }
      if (localIpBuilder_ == null) {
        result.localIp_ = localIp_;
      } else {
        result.localIp_ = localIpBuilder_.build();
      }
      if (remoteIpBuilder_ == null) {
        result.remoteIp_ = remoteIp_;
      } else {
        result.remoteIp_ = remoteIpBuilder_.build();
      }
      result.type_ = type_;
      if (encapBuilder_ == null) {
        result.encap_ = encap_;
      } else {
        result.encap_ = encapBuilder_.build();
      }
      if (nhCase_ == 8) {
        if (nexthopIdBuilder_ == null) {
          result.nh_ = nh_;
        } else {
          result.nh_ = nexthopIdBuilder_.build();
        }
      }
      if (nhCase_ == 9) {
        if (nexthopGroupIdBuilder_ == null) {
          result.nh_ = nh_;
        } else {
          result.nh_ = nexthopGroupIdBuilder_.build();
        }
      }
      if (nhCase_ == 10) {
        if (tunnelIdBuilder_ == null) {
          result.nh_ = nh_;
        } else {
          result.nh_ = tunnelIdBuilder_.build();
        }
      }
      if (nhCase_ == 11) {
        if (dropNextHopBuilder_ == null) {
          result.nh_ = nh_;
        } else {
          result.nh_ = dropNextHopBuilder_.build();
        }
      }
      result.macAddress_ = macAddress_;
      result.tos_ = tos_;
      result.nhCase_ = nhCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.cloud.v1alpha1.TunnelSpec) {
        return mergeFrom((opi_api.network.cloud.v1alpha1.TunnelSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.cloud.v1alpha1.TunnelSpec other) {
      if (other == opi_api.network.cloud.v1alpha1.TunnelSpec.getDefaultInstance()) return this;
      if (other.hasId()) {
        mergeId(other.getId());
      }
      if (other.hasVpcId()) {
        mergeVpcId(other.getVpcId());
      }
      if (other.hasLocalIp()) {
        mergeLocalIp(other.getLocalIp());
      }
      if (other.hasRemoteIp()) {
        mergeRemoteIp(other.getRemoteIp());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasEncap()) {
        mergeEncap(other.getEncap());
      }
      if (other.getMacAddress() != com.google.protobuf.ByteString.EMPTY) {
        setMacAddress(other.getMacAddress());
      }
      if (other.getTos() != 0) {
        setTos(other.getTos());
      }
      switch (other.getNhCase()) {
        case NEXTHOP_ID: {
          mergeNexthopId(other.getNexthopId());
          break;
        }
        case NEXTHOP_GROUP_ID: {
          mergeNexthopGroupId(other.getNexthopGroupId());
          break;
        }
        case TUNNEL_ID: {
          mergeTunnelId(other.getTunnelId());
          break;
        }
        case DROP_NEXT_HOP: {
          mergeDropNextHop(other.getDropNextHop());
          break;
        }
        case NH_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.cloud.v1alpha1.TunnelSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.cloud.v1alpha1.TunnelSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int nhCase_ = 0;
    private java.lang.Object nh_;
    public NhCase
        getNhCase() {
      return NhCase.forNumber(
          nhCase_);
    }

    public Builder clearNh() {
      nhCase_ = 0;
      nh_ = null;
      onChanged();
      return this;
    }


    private opi_api.common.v1.ObjectKey id_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> idBuilder_;
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return idBuilder_ != null || id_ != null;
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     * @return The id.
     */
    public opi_api.common.v1.ObjectKey getId() {
      if (idBuilder_ == null) {
        return id_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
      } else {
        return idBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder setId(opi_api.common.v1.ObjectKey value) {
      if (idBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        id_ = value;
        onChanged();
      } else {
        idBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder setId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (idBuilder_ == null) {
        id_ = builderForValue.build();
        onChanged();
      } else {
        idBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder mergeId(opi_api.common.v1.ObjectKey value) {
      if (idBuilder_ == null) {
        if (id_ != null) {
          id_ =
            opi_api.common.v1.ObjectKey.newBuilder(id_).mergeFrom(value).buildPartial();
        } else {
          id_ = value;
        }
        onChanged();
      } else {
        idBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder clearId() {
      if (idBuilder_ == null) {
        id_ = null;
        onChanged();
      } else {
        id_ = null;
        idBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getIdBuilder() {
      
      onChanged();
      return getIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder() {
      if (idBuilder_ != null) {
        return idBuilder_.getMessageOrBuilder();
      } else {
        return id_ == null ?
            opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
      }
    }
    /**
     * <pre>
     * unique tunnel identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getIdFieldBuilder() {
      if (idBuilder_ == null) {
        idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                getId(),
                getParentForChildren(),
                isClean());
        id_ = null;
      }
      return idBuilder_;
    }

    private opi_api.common.v1.ObjectKey vpcId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> vpcIdBuilder_;
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     * @return Whether the vpcId field is set.
     */
    public boolean hasVpcId() {
      return vpcIdBuilder_ != null || vpcId_ != null;
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     * @return The vpcId.
     */
    public opi_api.common.v1.ObjectKey getVpcId() {
      if (vpcIdBuilder_ == null) {
        return vpcId_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : vpcId_;
      } else {
        return vpcIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    public Builder setVpcId(opi_api.common.v1.ObjectKey value) {
      if (vpcIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vpcId_ = value;
        onChanged();
      } else {
        vpcIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    public Builder setVpcId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (vpcIdBuilder_ == null) {
        vpcId_ = builderForValue.build();
        onChanged();
      } else {
        vpcIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    public Builder mergeVpcId(opi_api.common.v1.ObjectKey value) {
      if (vpcIdBuilder_ == null) {
        if (vpcId_ != null) {
          vpcId_ =
            opi_api.common.v1.ObjectKey.newBuilder(vpcId_).mergeFrom(value).buildPartial();
        } else {
          vpcId_ = value;
        }
        onChanged();
      } else {
        vpcIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    public Builder clearVpcId() {
      if (vpcIdBuilder_ == null) {
        vpcId_ = null;
        onChanged();
      } else {
        vpcId_ = null;
        vpcIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getVpcIdBuilder() {
      
      onChanged();
      return getVpcIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    public opi_api.common.v1.ObjectKeyOrBuilder getVpcIdOrBuilder() {
      if (vpcIdBuilder_ != null) {
        return vpcIdBuilder_.getMessageOrBuilder();
      } else {
        return vpcId_ == null ?
            opi_api.common.v1.ObjectKey.getDefaultInstance() : vpcId_;
      }
    }
    /**
     * <pre>
     * virtual private cloud this is tunnel belongs to
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey vpc_id = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getVpcIdFieldBuilder() {
      if (vpcIdBuilder_ == null) {
        vpcIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                getVpcId(),
                getParentForChildren(),
                isClean());
        vpcId_ = null;
      }
      return vpcIdBuilder_;
    }

    private opi_api.network.opinetcommon.v1alpha1.IPAddress localIp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> localIpBuilder_;
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     * @return Whether the localIp field is set.
     */
    public boolean hasLocalIp() {
      return localIpBuilder_ != null || localIp_ != null;
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     * @return The localIp.
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress getLocalIp() {
      if (localIpBuilder_ == null) {
        return localIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : localIp_;
      } else {
        return localIpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    public Builder setLocalIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (localIpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        localIp_ = value;
        onChanged();
      } else {
        localIpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    public Builder setLocalIp(
        opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder builderForValue) {
      if (localIpBuilder_ == null) {
        localIp_ = builderForValue.build();
        onChanged();
      } else {
        localIpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    public Builder mergeLocalIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (localIpBuilder_ == null) {
        if (localIp_ != null) {
          localIp_ =
            opi_api.network.opinetcommon.v1alpha1.IPAddress.newBuilder(localIp_).mergeFrom(value).buildPartial();
        } else {
          localIp_ = value;
        }
        onChanged();
      } else {
        localIpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    public Builder clearLocalIp() {
      if (localIpBuilder_ == null) {
        localIp_ = null;
        onChanged();
      } else {
        localIp_ = null;
        localIpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder getLocalIpBuilder() {
      
      onChanged();
      return getLocalIpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getLocalIpOrBuilder() {
      if (localIpBuilder_ != null) {
        return localIpBuilder_.getMessageOrBuilder();
      } else {
        return localIp_ == null ?
            opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : localIp_;
      }
    }
    /**
     * <pre>
     * local IP of the tunnel (used as outer SIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress local_ip = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> 
        getLocalIpFieldBuilder() {
      if (localIpBuilder_ == null) {
        localIpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder>(
                getLocalIp(),
                getParentForChildren(),
                isClean());
        localIp_ = null;
      }
      return localIpBuilder_;
    }

    private opi_api.network.opinetcommon.v1alpha1.IPAddress remoteIp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> remoteIpBuilder_;
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     * @return Whether the remoteIp field is set.
     */
    public boolean hasRemoteIp() {
      return remoteIpBuilder_ != null || remoteIp_ != null;
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     * @return The remoteIp.
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress getRemoteIp() {
      if (remoteIpBuilder_ == null) {
        return remoteIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : remoteIp_;
      } else {
        return remoteIpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    public Builder setRemoteIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (remoteIpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        remoteIp_ = value;
        onChanged();
      } else {
        remoteIpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    public Builder setRemoteIp(
        opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder builderForValue) {
      if (remoteIpBuilder_ == null) {
        remoteIp_ = builderForValue.build();
        onChanged();
      } else {
        remoteIpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    public Builder mergeRemoteIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (remoteIpBuilder_ == null) {
        if (remoteIp_ != null) {
          remoteIp_ =
            opi_api.network.opinetcommon.v1alpha1.IPAddress.newBuilder(remoteIp_).mergeFrom(value).buildPartial();
        } else {
          remoteIp_ = value;
        }
        onChanged();
      } else {
        remoteIpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    public Builder clearRemoteIp() {
      if (remoteIpBuilder_ == null) {
        remoteIp_ = null;
        onChanged();
      } else {
        remoteIp_ = null;
        remoteIpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder getRemoteIpBuilder() {
      
      onChanged();
      return getRemoteIpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getRemoteIpOrBuilder() {
      if (remoteIpBuilder_ != null) {
        return remoteIpBuilder_.getMessageOrBuilder();
      } else {
        return remoteIp_ == null ?
            opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : remoteIp_;
      }
    }
    /**
     * <pre>
     * remote IP of the tunnel (used as outer DIP in tunneled packets)
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress remote_ip = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> 
        getRemoteIpFieldBuilder() {
      if (remoteIpBuilder_ == null) {
        remoteIpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder>(
                getRemoteIp(),
                getParentForChildren(),
                isClean());
        remoteIp_ = null;
      }
      return remoteIpBuilder_;
    }

    private int type_ = 0;
    /**
     * <pre>
     * type of the tunnel
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * type of the tunnel
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of the tunnel
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
     * @return The type.
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.TunnelType getType() {
      @SuppressWarnings("deprecation")
      opi_api.network.cloud.v1alpha1.TunnelType result = opi_api.network.cloud.v1alpha1.TunnelType.valueOf(type_);
      return result == null ? opi_api.network.cloud.v1alpha1.TunnelType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * type of the tunnel
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(opi_api.network.cloud.v1alpha1.TunnelType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of the tunnel
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.TunnelType type = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private opi_api.network.opinetcommon.v1alpha1.Encap encap_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.Encap, opi_api.network.opinetcommon.v1alpha1.Encap.Builder, opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder> encapBuilder_;
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     * @return Whether the encap field is set.
     */
    public boolean hasEncap() {
      return encapBuilder_ != null || encap_ != null;
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     * @return The encap.
     */
    public opi_api.network.opinetcommon.v1alpha1.Encap getEncap() {
      if (encapBuilder_ == null) {
        return encap_ == null ? opi_api.network.opinetcommon.v1alpha1.Encap.getDefaultInstance() : encap_;
      } else {
        return encapBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    public Builder setEncap(opi_api.network.opinetcommon.v1alpha1.Encap value) {
      if (encapBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        encap_ = value;
        onChanged();
      } else {
        encapBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    public Builder setEncap(
        opi_api.network.opinetcommon.v1alpha1.Encap.Builder builderForValue) {
      if (encapBuilder_ == null) {
        encap_ = builderForValue.build();
        onChanged();
      } else {
        encapBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    public Builder mergeEncap(opi_api.network.opinetcommon.v1alpha1.Encap value) {
      if (encapBuilder_ == null) {
        if (encap_ != null) {
          encap_ =
            opi_api.network.opinetcommon.v1alpha1.Encap.newBuilder(encap_).mergeFrom(value).buildPartial();
        } else {
          encap_ = value;
        }
        onChanged();
      } else {
        encapBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    public Builder clearEncap() {
      if (encapBuilder_ == null) {
        encap_ = null;
        onChanged();
      } else {
        encap_ = null;
        encapBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.Encap.Builder getEncapBuilder() {
      
      onChanged();
      return getEncapFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder getEncapOrBuilder() {
      if (encapBuilder_ != null) {
        return encapBuilder_.getMessageOrBuilder();
      } else {
        return encap_ == null ?
            opi_api.network.opinetcommon.v1alpha1.Encap.getDefaultInstance() : encap_;
      }
    }
    /**
     * <pre>
     * encap used while sending traffic to this tunnel
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.Encap, opi_api.network.opinetcommon.v1alpha1.Encap.Builder, opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder> 
        getEncapFieldBuilder() {
      if (encapBuilder_ == null) {
        encapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.Encap, opi_api.network.opinetcommon.v1alpha1.Encap.Builder, opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder>(
                getEncap(),
                getParentForChildren(),
                isClean());
        encap_ = null;
      }
      return encapBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> nexthopIdBuilder_;
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     * @return Whether the nexthopId field is set.
     */
    @java.lang.Override
    public boolean hasNexthopId() {
      return nhCase_ == 8;
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     * @return The nexthopId.
     */
    @java.lang.Override
    public opi_api.common.v1.ObjectKey getNexthopId() {
      if (nexthopIdBuilder_ == null) {
        if (nhCase_ == 8) {
          return (opi_api.common.v1.ObjectKey) nh_;
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      } else {
        if (nhCase_ == 8) {
          return nexthopIdBuilder_.getMessage();
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    public Builder setNexthopId(opi_api.common.v1.ObjectKey value) {
      if (nexthopIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nh_ = value;
        onChanged();
      } else {
        nexthopIdBuilder_.setMessage(value);
      }
      nhCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    public Builder setNexthopId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (nexthopIdBuilder_ == null) {
        nh_ = builderForValue.build();
        onChanged();
      } else {
        nexthopIdBuilder_.setMessage(builderForValue.build());
      }
      nhCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    public Builder mergeNexthopId(opi_api.common.v1.ObjectKey value) {
      if (nexthopIdBuilder_ == null) {
        if (nhCase_ == 8 &&
            nh_ != opi_api.common.v1.ObjectKey.getDefaultInstance()) {
          nh_ = opi_api.common.v1.ObjectKey.newBuilder((opi_api.common.v1.ObjectKey) nh_)
              .mergeFrom(value).buildPartial();
        } else {
          nh_ = value;
        }
        onChanged();
      } else {
        if (nhCase_ == 8) {
          nexthopIdBuilder_.mergeFrom(value);
        }
        nexthopIdBuilder_.setMessage(value);
      }
      nhCase_ = 8;
      return this;
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    public Builder clearNexthopId() {
      if (nexthopIdBuilder_ == null) {
        if (nhCase_ == 8) {
          nhCase_ = 0;
          nh_ = null;
          onChanged();
        }
      } else {
        if (nhCase_ == 8) {
          nhCase_ = 0;
          nh_ = null;
        }
        nexthopIdBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getNexthopIdBuilder() {
      return getNexthopIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    @java.lang.Override
    public opi_api.common.v1.ObjectKeyOrBuilder getNexthopIdOrBuilder() {
      if ((nhCase_ == 8) && (nexthopIdBuilder_ != null)) {
        return nexthopIdBuilder_.getMessageOrBuilder();
      } else {
        if (nhCase_ == 8) {
          return (opi_api.common.v1.ObjectKey) nh_;
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * underlay nexthop for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_id = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getNexthopIdFieldBuilder() {
      if (nexthopIdBuilder_ == null) {
        if (!(nhCase_ == 8)) {
          nh_ = opi_api.common.v1.ObjectKey.getDefaultInstance();
        }
        nexthopIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                (opi_api.common.v1.ObjectKey) nh_,
                getParentForChildren(),
                isClean());
        nh_ = null;
      }
      nhCase_ = 8;
      onChanged();;
      return nexthopIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> nexthopGroupIdBuilder_;
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     * @return Whether the nexthopGroupId field is set.
     */
    @java.lang.Override
    public boolean hasNexthopGroupId() {
      return nhCase_ == 9;
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     * @return The nexthopGroupId.
     */
    @java.lang.Override
    public opi_api.common.v1.ObjectKey getNexthopGroupId() {
      if (nexthopGroupIdBuilder_ == null) {
        if (nhCase_ == 9) {
          return (opi_api.common.v1.ObjectKey) nh_;
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      } else {
        if (nhCase_ == 9) {
          return nexthopGroupIdBuilder_.getMessage();
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    public Builder setNexthopGroupId(opi_api.common.v1.ObjectKey value) {
      if (nexthopGroupIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nh_ = value;
        onChanged();
      } else {
        nexthopGroupIdBuilder_.setMessage(value);
      }
      nhCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    public Builder setNexthopGroupId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (nexthopGroupIdBuilder_ == null) {
        nh_ = builderForValue.build();
        onChanged();
      } else {
        nexthopGroupIdBuilder_.setMessage(builderForValue.build());
      }
      nhCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    public Builder mergeNexthopGroupId(opi_api.common.v1.ObjectKey value) {
      if (nexthopGroupIdBuilder_ == null) {
        if (nhCase_ == 9 &&
            nh_ != opi_api.common.v1.ObjectKey.getDefaultInstance()) {
          nh_ = opi_api.common.v1.ObjectKey.newBuilder((opi_api.common.v1.ObjectKey) nh_)
              .mergeFrom(value).buildPartial();
        } else {
          nh_ = value;
        }
        onChanged();
      } else {
        if (nhCase_ == 9) {
          nexthopGroupIdBuilder_.mergeFrom(value);
        }
        nexthopGroupIdBuilder_.setMessage(value);
      }
      nhCase_ = 9;
      return this;
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    public Builder clearNexthopGroupId() {
      if (nexthopGroupIdBuilder_ == null) {
        if (nhCase_ == 9) {
          nhCase_ = 0;
          nh_ = null;
          onChanged();
        }
      } else {
        if (nhCase_ == 9) {
          nhCase_ = 0;
          nh_ = null;
        }
        nexthopGroupIdBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getNexthopGroupIdBuilder() {
      return getNexthopGroupIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    @java.lang.Override
    public opi_api.common.v1.ObjectKeyOrBuilder getNexthopGroupIdOrBuilder() {
      if ((nhCase_ == 9) && (nexthopGroupIdBuilder_ != null)) {
        return nexthopGroupIdBuilder_.getMessageOrBuilder();
      } else {
        if (nhCase_ == 9) {
          return (opi_api.common.v1.ObjectKey) nh_;
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * underlay nexthop group for this tunnel
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey nexthop_group_id = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getNexthopGroupIdFieldBuilder() {
      if (nexthopGroupIdBuilder_ == null) {
        if (!(nhCase_ == 9)) {
          nh_ = opi_api.common.v1.ObjectKey.getDefaultInstance();
        }
        nexthopGroupIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                (opi_api.common.v1.ObjectKey) nh_,
                getParentForChildren(),
                isClean());
        nh_ = null;
      }
      nhCase_ = 9;
      onChanged();;
      return nexthopGroupIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> tunnelIdBuilder_;
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     * @return Whether the tunnelId field is set.
     */
    @java.lang.Override
    public boolean hasTunnelId() {
      return nhCase_ == 10;
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     * @return The tunnelId.
     */
    @java.lang.Override
    public opi_api.common.v1.ObjectKey getTunnelId() {
      if (tunnelIdBuilder_ == null) {
        if (nhCase_ == 10) {
          return (opi_api.common.v1.ObjectKey) nh_;
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      } else {
        if (nhCase_ == 10) {
          return tunnelIdBuilder_.getMessage();
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    public Builder setTunnelId(opi_api.common.v1.ObjectKey value) {
      if (tunnelIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nh_ = value;
        onChanged();
      } else {
        tunnelIdBuilder_.setMessage(value);
      }
      nhCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    public Builder setTunnelId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (tunnelIdBuilder_ == null) {
        nh_ = builderForValue.build();
        onChanged();
      } else {
        tunnelIdBuilder_.setMessage(builderForValue.build());
      }
      nhCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    public Builder mergeTunnelId(opi_api.common.v1.ObjectKey value) {
      if (tunnelIdBuilder_ == null) {
        if (nhCase_ == 10 &&
            nh_ != opi_api.common.v1.ObjectKey.getDefaultInstance()) {
          nh_ = opi_api.common.v1.ObjectKey.newBuilder((opi_api.common.v1.ObjectKey) nh_)
              .mergeFrom(value).buildPartial();
        } else {
          nh_ = value;
        }
        onChanged();
      } else {
        if (nhCase_ == 10) {
          tunnelIdBuilder_.mergeFrom(value);
        }
        tunnelIdBuilder_.setMessage(value);
      }
      nhCase_ = 10;
      return this;
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    public Builder clearTunnelId() {
      if (tunnelIdBuilder_ == null) {
        if (nhCase_ == 10) {
          nhCase_ = 0;
          nh_ = null;
          onChanged();
        }
      } else {
        if (nhCase_ == 10) {
          nhCase_ = 0;
          nh_ = null;
        }
        tunnelIdBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getTunnelIdBuilder() {
      return getTunnelIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    @java.lang.Override
    public opi_api.common.v1.ObjectKeyOrBuilder getTunnelIdOrBuilder() {
      if ((nhCase_ == 10) && (tunnelIdBuilder_ != null)) {
        return tunnelIdBuilder_.getMessageOrBuilder();
      } else {
        if (nhCase_ == 10) {
          return (opi_api.common.v1.ObjectKey) nh_;
        }
        return opi_api.common.v1.ObjectKey.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * a tunnel can point to another tunnel for double encap
     * - supported combinations of double encap is platform specific
     * - unsupported combination of cascading tunnels would result in configuration failure
     * -  when tunnel points to another IPSEC tunnel, it is similar to IPSEC tunnel mode
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey tunnel_id = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getTunnelIdFieldBuilder() {
      if (tunnelIdBuilder_ == null) {
        if (!(nhCase_ == 10)) {
          nh_ = opi_api.common.v1.ObjectKey.getDefaultInstance();
        }
        tunnelIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                (opi_api.common.v1.ObjectKey) nh_,
                getParentForChildren(),
                isClean());
        nh_ = null;
      }
      nhCase_ = 10;
      onChanged();;
      return tunnelIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.cloud.v1alpha1.DropNexthop, opi_api.network.cloud.v1alpha1.DropNexthop.Builder, opi_api.network.cloud.v1alpha1.DropNexthopOrBuilder> dropNextHopBuilder_;
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     * @return Whether the dropNextHop field is set.
     */
    @java.lang.Override
    public boolean hasDropNextHop() {
      return nhCase_ == 11;
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     * @return The dropNextHop.
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.DropNexthop getDropNextHop() {
      if (dropNextHopBuilder_ == null) {
        if (nhCase_ == 11) {
          return (opi_api.network.cloud.v1alpha1.DropNexthop) nh_;
        }
        return opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance();
      } else {
        if (nhCase_ == 11) {
          return dropNextHopBuilder_.getMessage();
        }
        return opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    public Builder setDropNextHop(opi_api.network.cloud.v1alpha1.DropNexthop value) {
      if (dropNextHopBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nh_ = value;
        onChanged();
      } else {
        dropNextHopBuilder_.setMessage(value);
      }
      nhCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    public Builder setDropNextHop(
        opi_api.network.cloud.v1alpha1.DropNexthop.Builder builderForValue) {
      if (dropNextHopBuilder_ == null) {
        nh_ = builderForValue.build();
        onChanged();
      } else {
        dropNextHopBuilder_.setMessage(builderForValue.build());
      }
      nhCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    public Builder mergeDropNextHop(opi_api.network.cloud.v1alpha1.DropNexthop value) {
      if (dropNextHopBuilder_ == null) {
        if (nhCase_ == 11 &&
            nh_ != opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance()) {
          nh_ = opi_api.network.cloud.v1alpha1.DropNexthop.newBuilder((opi_api.network.cloud.v1alpha1.DropNexthop) nh_)
              .mergeFrom(value).buildPartial();
        } else {
          nh_ = value;
        }
        onChanged();
      } else {
        if (nhCase_ == 11) {
          dropNextHopBuilder_.mergeFrom(value);
        }
        dropNextHopBuilder_.setMessage(value);
      }
      nhCase_ = 11;
      return this;
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    public Builder clearDropNextHop() {
      if (dropNextHopBuilder_ == null) {
        if (nhCase_ == 11) {
          nhCase_ = 0;
          nh_ = null;
          onChanged();
        }
      } else {
        if (nhCase_ == 11) {
          nhCase_ = 0;
          nh_ = null;
        }
        dropNextHopBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    public opi_api.network.cloud.v1alpha1.DropNexthop.Builder getDropNextHopBuilder() {
      return getDropNextHopFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.DropNexthopOrBuilder getDropNextHopOrBuilder() {
      if ((nhCase_ == 11) && (dropNextHopBuilder_ != null)) {
        return dropNextHopBuilder_.getMessageOrBuilder();
      } else {
        if (nhCase_ == 11) {
          return (opi_api.network.cloud.v1alpha1.DropNexthop) nh_;
        }
        return opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * DropNexthop is used to explicitly drop traffic destined to this tunnel
     * even when there is reachability, this is administrative override
     * </pre>
     *
     * <code>.opi_api.network.cloud.v1alpha1.DropNexthop drop_next_hop = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.cloud.v1alpha1.DropNexthop, opi_api.network.cloud.v1alpha1.DropNexthop.Builder, opi_api.network.cloud.v1alpha1.DropNexthopOrBuilder> 
        getDropNextHopFieldBuilder() {
      if (dropNextHopBuilder_ == null) {
        if (!(nhCase_ == 11)) {
          nh_ = opi_api.network.cloud.v1alpha1.DropNexthop.getDefaultInstance();
        }
        dropNextHopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.cloud.v1alpha1.DropNexthop, opi_api.network.cloud.v1alpha1.DropNexthop.Builder, opi_api.network.cloud.v1alpha1.DropNexthopOrBuilder>(
                (opi_api.network.cloud.v1alpha1.DropNexthop) nh_,
                getParentForChildren(),
                isClean());
        nh_ = null;
      }
      nhCase_ = 11;
      onChanged();;
      return dropNextHopBuilder_;
    }

    private com.google.protobuf.ByteString macAddress_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * MAC address of the remote IP (i.e., remote side of the tunnel)
     * set to zero if dataplane is expected to resolve this
     * </pre>
     *
     * <code>bytes mac_address = 12;</code>
     * @return The macAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMacAddress() {
      return macAddress_;
    }
    /**
     * <pre>
     * MAC address of the remote IP (i.e., remote side of the tunnel)
     * set to zero if dataplane is expected to resolve this
     * </pre>
     *
     * <code>bytes mac_address = 12;</code>
     * @param value The macAddress to set.
     * @return This builder for chaining.
     */
    public Builder setMacAddress(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      macAddress_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MAC address of the remote IP (i.e., remote side of the tunnel)
     * set to zero if dataplane is expected to resolve this
     * </pre>
     *
     * <code>bytes mac_address = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearMacAddress() {
      
      macAddress_ = getDefaultInstance().getMacAddress();
      onChanged();
      return this;
    }

    private int tos_ ;
    /**
     * <pre>
     * when ToS is configured on a tunnel object, all traffic destined to the
     * tunnel will carry dscp value as configured.
     * ToS field is 1 byte value that is populated in the DSCP field of IPv4 outer
     * header or in the Traffic Class field of IPv6 outer header, this value, if
     * non-zero, will be used as-is (i.e., not interpreted) during encap time by
     * the dataplane.
     * The ToS value configured on the tunnel will override ToS configuration
     * in vpc and subnet objects
     * </pre>
     *
     * <code>int32 tos = 13;</code>
     * @return The tos.
     */
    @java.lang.Override
    public int getTos() {
      return tos_;
    }
    /**
     * <pre>
     * when ToS is configured on a tunnel object, all traffic destined to the
     * tunnel will carry dscp value as configured.
     * ToS field is 1 byte value that is populated in the DSCP field of IPv4 outer
     * header or in the Traffic Class field of IPv6 outer header, this value, if
     * non-zero, will be used as-is (i.e., not interpreted) during encap time by
     * the dataplane.
     * The ToS value configured on the tunnel will override ToS configuration
     * in vpc and subnet objects
     * </pre>
     *
     * <code>int32 tos = 13;</code>
     * @param value The tos to set.
     * @return This builder for chaining.
     */
    public Builder setTos(int value) {
      
      tos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * when ToS is configured on a tunnel object, all traffic destined to the
     * tunnel will carry dscp value as configured.
     * ToS field is 1 byte value that is populated in the DSCP field of IPv4 outer
     * header or in the Traffic Class field of IPv6 outer header, this value, if
     * non-zero, will be used as-is (i.e., not interpreted) during encap time by
     * the dataplane.
     * The ToS value configured on the tunnel will override ToS configuration
     * in vpc and subnet objects
     * </pre>
     *
     * <code>int32 tos = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearTos() {
      
      tos_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.cloud.v1alpha1.TunnelSpec)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.TunnelSpec)
  private static final opi_api.network.cloud.v1alpha1.TunnelSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.cloud.v1alpha1.TunnelSpec();
  }

  public static opi_api.network.cloud.v1alpha1.TunnelSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TunnelSpec>
      PARSER = new com.google.protobuf.AbstractParser<TunnelSpec>() {
    @java.lang.Override
    public TunnelSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TunnelSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TunnelSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TunnelSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.TunnelSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

