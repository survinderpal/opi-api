// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: port.proto

package opi_api.network.cloud.v1alpha1;

public interface PortSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.cloud.v1alpha1.PortSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique port id
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * unique port id
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  opi_api.common.v1.ObjectKey getId();
  /**
   * <pre>
   * unique port id
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * port number is numerical port identifier starting from 1
   * </pre>
   *
   * <code>int32 port_number = 2;</code>
   * @return The portNumber.
   */
  int getPortNumber();

  /**
   * <pre>
   * port admin state
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortAdminState admin_state = 3;</code>
   * @return The enum numeric value on the wire for adminState.
   */
  int getAdminStateValue();
  /**
   * <pre>
   * port admin state
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortAdminState admin_state = 3;</code>
   * @return The adminState.
   */
  opi_api.network.cloud.v1alpha1.PortAdminState getAdminState();

  /**
   * <pre>
   * type of port
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortType type = 4;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * type of port
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortType type = 4;</code>
   * @return The type.
   */
  opi_api.network.cloud.v1alpha1.PortType getType();

  /**
   * <pre>
   * operational speed of the port
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortSpeed speed = 5;</code>
   * @return The enum numeric value on the wire for speed.
   */
  int getSpeedValue();
  /**
   * <pre>
   * operational speed of the port
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortSpeed speed = 5;</code>
   * @return The speed.
   */
  opi_api.network.cloud.v1alpha1.PortSpeed getSpeed();

  /**
   * <pre>
   * Forward Error Correction (FEC) type - ReedSolomon (RS), Firecode (FC) or None
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortFecType fec_type = 6;</code>
   * @return The enum numeric value on the wire for fecType.
   */
  int getFecTypeValue();
  /**
   * <pre>
   * Forward Error Correction (FEC) type - ReedSolomon (RS), Firecode (FC) or None
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortFecType fec_type = 6;</code>
   * @return The fecType.
   */
  opi_api.network.cloud.v1alpha1.PortFecType getFecType();

  /**
   * <pre>
   * set AutoNegEn to true to enable auto negotiation
   * </pre>
   *
   * <code>bool autoneg_enable = 7;</code>
   * @return The autonegEnable.
   */
  boolean getAutonegEnable();

  /**
   * <pre>
   * values for link debounce timeout in msec (default = 0 ms)
   * </pre>
   *
   * <code>int32 debounce_timeout = 8;</code>
   * @return The debounceTimeout.
   */
  int getDebounceTimeout();

  /**
   * <pre>
   * MTU size in bytes (64 to 9216)
   * </pre>
   *
   * <code>int32 mtu = 9;</code>
   * @return The mtu.
   */
  int getMtu();

  /**
   * <pre>
   * pause type - PFC or Link Level or Disable
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortPauseType pause_type = 10;</code>
   * @return The enum numeric value on the wire for pauseType.
   */
  int getPauseTypeValue();
  /**
   * <pre>
   * pause type - PFC or Link Level or Disable
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortPauseType pause_type = 10;</code>
   * @return The pauseType.
   */
  opi_api.network.cloud.v1alpha1.PortPauseType getPauseType();

  /**
   * <pre>
   * MAC TX pause enable
   * </pre>
   *
   * <code>bool tx_pause_en = 11;</code>
   * @return The txPauseEn.
   */
  boolean getTxPauseEn();

  /**
   * <pre>
   * MAC RX pause enable
   * </pre>
   *
   * <code>bool rx_pause_en = 12;</code>
   * @return The rxPauseEn.
   */
  boolean getRxPauseEn();

  /**
   * <pre>
   * port loopback mode - MAC or PHY 
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortLoopBackMode loopback_mode = 13;</code>
   * @return The enum numeric value on the wire for loopbackMode.
   */
  int getLoopbackModeValue();
  /**
   * <pre>
   * port loopback mode - MAC or PHY 
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.PortLoopBackMode loopback_mode = 13;</code>
   * @return The loopbackMode.
   */
  opi_api.network.cloud.v1alpha1.PortLoopBackMode getLoopbackMode();

  /**
   * <pre>
   * number of serdes lanes for port (range: 1-4)
   * </pre>
   *
   * <code>int32 lanes_count = 14;</code>
   * @return The lanesCount.
   */
  int getLanesCount();
}
