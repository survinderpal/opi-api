// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkpolicy.proto

package opi_api.network.cloud.v1alpha1;

/**
 * <pre>
 * security profile - defaults for network security behavior
 * - currently security profile object is global and only a singleton object,
 *   any attempt to create multiple objects will be treated as an error
 * - if no object is created, indicated default values will be used
 * - all timeouts specified in this object are in seconds
 * </pre>
 *
 * Protobuf type {@code opi_api.network.cloud.v1alpha1.SecurityProfileSpec}
 */
public final class SecurityProfileSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.cloud.v1alpha1.SecurityProfileSpec)
    SecurityProfileSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SecurityProfileSpec.newBuilder() to construct.
  private SecurityProfileSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SecurityProfileSpec() {
    defaultFirewallAction_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SecurityProfileSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SecurityProfileSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (id_ != null) {
              subBuilder = id_.toBuilder();
            }
            id_ = input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(id_);
              id_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            connectionTrackingEnable_ = input.readBool();
            break;
          }
          case 24: {

            ruleStatsEnable_ = input.readBool();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            defaultFirewallAction_ = rawValue;
            break;
          }
          case 40: {

            tcpIdleTimeout_ = input.readInt32();
            break;
          }
          case 48: {

            udpIdleTimeout_ = input.readInt32();
            break;
          }
          case 56: {

            icmpIdleTimeout_ = input.readInt32();
            break;
          }
          case 64: {

            otherIdleTimeout_ = input.readInt32();
            break;
          }
          case 72: {

            tcpConnectionSetupTimeout_ = input.readInt32();
            break;
          }
          case 80: {

            tcpHalfCloseTimeout_ = input.readInt32();
            break;
          }
          case 88: {

            tcpCloseTimeout_ = input.readInt32();
            break;
          }
          case 96: {

            tcpDorpTimeout_ = input.readInt32();
            break;
          }
          case 104: {

            udpDropTimeout_ = input.readInt32();
            break;
          }
          case 112: {

            icmpDropTimeout_ = input.readInt32();
            break;
          }
          case 120: {

            otherDropTimeout_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_SecurityProfileSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_SecurityProfileSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.cloud.v1alpha1.SecurityProfileSpec.class, opi_api.network.cloud.v1alpha1.SecurityProfileSpec.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private opi_api.common.v1.ObjectKey id_;
  /**
   * <pre>
   * unique identifier of security profile
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return id_ != null;
  }
  /**
   * <pre>
   * unique identifier of security profile
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getId() {
    return id_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
  }
  /**
   * <pre>
   * unique identifier of security profile
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder() {
    return getId();
  }

  public static final int CONNECTION_TRACKING_ENABLE_FIELD_NUMBER = 2;
  private boolean connectionTrackingEnable_;
  /**
   * <pre>
   * ConnTrackEn, if set to true, will enable full connection tracking
   * if connection_tracking_enable is modified on the fly, it will take affect only
   * on sessions created thereafter and doesn't affect existing sessions
   * </pre>
   *
   * <code>bool connection_tracking_enable = 2;</code>
   * @return The connectionTrackingEnable.
   */
  @java.lang.Override
  public boolean getConnectionTrackingEnable() {
    return connectionTrackingEnable_;
  }

  public static final int RULE_STATS_ENABLE_FIELD_NUMBER = 3;
  private boolean ruleStatsEnable_;
  /**
   * <pre>
   * rule_stats_enable, if set to true, will enable per security policy rule
   * statistics feature in the datapath (by default rule stats functionality is
   * turned off and can be enabled on the fly for debugging)
   * </pre>
   *
   * <code>bool rule_stats_enable = 3;</code>
   * @return The ruleStatsEnable.
   */
  @java.lang.Override
  public boolean getRuleStatsEnable() {
    return ruleStatsEnable_;
  }

  public static final int DEFAULT_FIREWALL_ACTION_FIELD_NUMBER = 4;
  private int defaultFirewallAction_;
  /**
   * <pre>
   * default_firewall_action is the action taken by the smartnic when policies are
   * configured on the subnet or vnic, no rule matches and default action for policy is none
   * this will have effect iff policy is attached on either vnic or subnet.
   * if no action is specified  in security profile, default action is "deny"
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
   * @return The enum numeric value on the wire for defaultFirewallAction.
   */
  @java.lang.Override public int getDefaultFirewallActionValue() {
    return defaultFirewallAction_;
  }
  /**
   * <pre>
   * default_firewall_action is the action taken by the smartnic when policies are
   * configured on the subnet or vnic, no rule matches and default action for policy is none
   * this will have effect iff policy is attached on either vnic or subnet.
   * if no action is specified  in security profile, default action is "deny"
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
   * @return The defaultFirewallAction.
   */
  @java.lang.Override public opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction getDefaultFirewallAction() {
    @SuppressWarnings("deprecation")
    opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction result = opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction.valueOf(defaultFirewallAction_);
    return result == null ? opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction.UNRECOGNIZED : result;
  }

  public static final int TCP_IDLE_TIMEOUT_FIELD_NUMBER = 5;
  private int tcpIdleTimeout_;
  /**
   * <pre>
   * timeouts for established sessions per TCP/UDP/ICMP and other protocols
   * range:1-86400, default=600
   * </pre>
   *
   * <code>int32 tcp_idle_timeout = 5;</code>
   * @return The tcpIdleTimeout.
   */
  @java.lang.Override
  public int getTcpIdleTimeout() {
    return tcpIdleTimeout_;
  }

  public static final int UDP_IDLE_TIMEOUT_FIELD_NUMBER = 6;
  private int udpIdleTimeout_;
  /**
   * <pre>
   * range:1-86400, default=120
   * </pre>
   *
   * <code>int32 udp_idle_timeout = 6;</code>
   * @return The udpIdleTimeout.
   */
  @java.lang.Override
  public int getUdpIdleTimeout() {
    return udpIdleTimeout_;
  }

  public static final int ICMP_IDLE_TIMEOUT_FIELD_NUMBER = 7;
  private int icmpIdleTimeout_;
  /**
   * <pre>
   * range:1-86400, default=15
   * </pre>
   *
   * <code>int32 icmp_idle_timeout = 7;</code>
   * @return The icmpIdleTimeout.
   */
  @java.lang.Override
  public int getIcmpIdleTimeout() {
    return icmpIdleTimeout_;
  }

  public static final int OTHER_IDLE_TIMEOUT_FIELD_NUMBER = 8;
  private int otherIdleTimeout_;
  /**
   * <pre>
   * range:1-86400, default=90
   * </pre>
   *
   * <code>int32 other_idle_timeout = 8;</code>
   * @return The otherIdleTimeout.
   */
  @java.lang.Override
  public int getOtherIdleTimeout() {
    return otherIdleTimeout_;
  }

  public static final int TCP_CONNECTION_SETUP_TIMEOUT_FIELD_NUMBER = 9;
  private int tcpConnectionSetupTimeout_;
  /**
   * <pre>
   * TCP specific timeouts
   * tcp_connection_setup_timeout is the maximum allowed time since first SYN seen to
   * 3-way handshake completion, session gets cleaned up if 3-way handshake is
   * not completed and session moves to ESTABLISHED state by then.  range:1-60, default=10
   * </pre>
   *
   * <code>int32 tcp_connection_setup_timeout = 9;</code>
   * @return The tcpConnectionSetupTimeout.
   */
  @java.lang.Override
  public int getTcpConnectionSetupTimeout() {
    return tcpConnectionSetupTimeout_;
  }

  public static final int TCP_HALF_CLOSE_TIMEOUT_FIELD_NUMBER = 10;
  private int tcpHalfCloseTimeout_;
  /**
   * <pre>
   * tcp_half_close_timeout is the maximum allowed time since first FIN seen to
   * 3/4way close, session gets cleaned up if this timer elapses. range:1-172800, default=120
   * </pre>
   *
   * <code>int32 tcp_half_close_timeout = 10;</code>
   * @return The tcpHalfCloseTimeout.
   */
  @java.lang.Override
  public int getTcpHalfCloseTimeout() {
    return tcpHalfCloseTimeout_;
  }

  public static final int TCP_CLOSE_TIMEOUT_FIELD_NUMBER = 11;
  private int tcpCloseTimeout_;
  /**
   * <pre>
   * tcp_close_timeout is wait time since FIN is seen from *both* sides (or RST)
   * before cleaning up the session range:1-300, default=15
   * </pre>
   *
   * <code>int32 tcp_close_timeout = 11;</code>
   * @return The tcpCloseTimeout.
   */
  @java.lang.Override
  public int getTcpCloseTimeout() {
    return tcpCloseTimeout_;
  }

  public static final int TCP_DORP_TIMEOUT_FIELD_NUMBER = 12;
  private int tcpDorpTimeout_;
  /**
   * <pre>
   * timeouts applicable to sessions installed with drop action
   * range:1-300, default=90
   * </pre>
   *
   * <code>int32 tcp_dorp_timeout = 12;</code>
   * @return The tcpDorpTimeout.
   */
  @java.lang.Override
  public int getTcpDorpTimeout() {
    return tcpDorpTimeout_;
  }

  public static final int UDP_DROP_TIMEOUT_FIELD_NUMBER = 13;
  private int udpDropTimeout_;
  /**
   * <pre>
   * range:1-172800, default=60
   * </pre>
   *
   * <code>int32 udp_drop_timeout = 13;</code>
   * @return The udpDropTimeout.
   */
  @java.lang.Override
  public int getUdpDropTimeout() {
    return udpDropTimeout_;
  }

  public static final int ICMP_DROP_TIMEOUT_FIELD_NUMBER = 14;
  private int icmpDropTimeout_;
  /**
   * <pre>
   * range:1-300, default=30
   * </pre>
   *
   * <code>int32 icmp_drop_timeout = 14;</code>
   * @return The icmpDropTimeout.
   */
  @java.lang.Override
  public int getIcmpDropTimeout() {
    return icmpDropTimeout_;
  }

  public static final int OTHER_DROP_TIMEOUT_FIELD_NUMBER = 15;
  private int otherDropTimeout_;
  /**
   * <pre>
   * range:1-300, default=60
   * </pre>
   *
   * <code>int32 other_drop_timeout = 15;</code>
   * @return The otherDropTimeout.
   */
  @java.lang.Override
  public int getOtherDropTimeout() {
    return otherDropTimeout_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != null) {
      output.writeMessage(1, getId());
    }
    if (connectionTrackingEnable_ != false) {
      output.writeBool(2, connectionTrackingEnable_);
    }
    if (ruleStatsEnable_ != false) {
      output.writeBool(3, ruleStatsEnable_);
    }
    if (defaultFirewallAction_ != opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction.SECURITY_RULE_ACTION_NONE.getNumber()) {
      output.writeEnum(4, defaultFirewallAction_);
    }
    if (tcpIdleTimeout_ != 0) {
      output.writeInt32(5, tcpIdleTimeout_);
    }
    if (udpIdleTimeout_ != 0) {
      output.writeInt32(6, udpIdleTimeout_);
    }
    if (icmpIdleTimeout_ != 0) {
      output.writeInt32(7, icmpIdleTimeout_);
    }
    if (otherIdleTimeout_ != 0) {
      output.writeInt32(8, otherIdleTimeout_);
    }
    if (tcpConnectionSetupTimeout_ != 0) {
      output.writeInt32(9, tcpConnectionSetupTimeout_);
    }
    if (tcpHalfCloseTimeout_ != 0) {
      output.writeInt32(10, tcpHalfCloseTimeout_);
    }
    if (tcpCloseTimeout_ != 0) {
      output.writeInt32(11, tcpCloseTimeout_);
    }
    if (tcpDorpTimeout_ != 0) {
      output.writeInt32(12, tcpDorpTimeout_);
    }
    if (udpDropTimeout_ != 0) {
      output.writeInt32(13, udpDropTimeout_);
    }
    if (icmpDropTimeout_ != 0) {
      output.writeInt32(14, icmpDropTimeout_);
    }
    if (otherDropTimeout_ != 0) {
      output.writeInt32(15, otherDropTimeout_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getId());
    }
    if (connectionTrackingEnable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, connectionTrackingEnable_);
    }
    if (ruleStatsEnable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, ruleStatsEnable_);
    }
    if (defaultFirewallAction_ != opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction.SECURITY_RULE_ACTION_NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, defaultFirewallAction_);
    }
    if (tcpIdleTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, tcpIdleTimeout_);
    }
    if (udpIdleTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, udpIdleTimeout_);
    }
    if (icmpIdleTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, icmpIdleTimeout_);
    }
    if (otherIdleTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, otherIdleTimeout_);
    }
    if (tcpConnectionSetupTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, tcpConnectionSetupTimeout_);
    }
    if (tcpHalfCloseTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, tcpHalfCloseTimeout_);
    }
    if (tcpCloseTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, tcpCloseTimeout_);
    }
    if (tcpDorpTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, tcpDorpTimeout_);
    }
    if (udpDropTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, udpDropTimeout_);
    }
    if (icmpDropTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, icmpDropTimeout_);
    }
    if (otherDropTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, otherDropTimeout_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.cloud.v1alpha1.SecurityProfileSpec)) {
      return super.equals(obj);
    }
    opi_api.network.cloud.v1alpha1.SecurityProfileSpec other = (opi_api.network.cloud.v1alpha1.SecurityProfileSpec) obj;

    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (getConnectionTrackingEnable()
        != other.getConnectionTrackingEnable()) return false;
    if (getRuleStatsEnable()
        != other.getRuleStatsEnable()) return false;
    if (defaultFirewallAction_ != other.defaultFirewallAction_) return false;
    if (getTcpIdleTimeout()
        != other.getTcpIdleTimeout()) return false;
    if (getUdpIdleTimeout()
        != other.getUdpIdleTimeout()) return false;
    if (getIcmpIdleTimeout()
        != other.getIcmpIdleTimeout()) return false;
    if (getOtherIdleTimeout()
        != other.getOtherIdleTimeout()) return false;
    if (getTcpConnectionSetupTimeout()
        != other.getTcpConnectionSetupTimeout()) return false;
    if (getTcpHalfCloseTimeout()
        != other.getTcpHalfCloseTimeout()) return false;
    if (getTcpCloseTimeout()
        != other.getTcpCloseTimeout()) return false;
    if (getTcpDorpTimeout()
        != other.getTcpDorpTimeout()) return false;
    if (getUdpDropTimeout()
        != other.getUdpDropTimeout()) return false;
    if (getIcmpDropTimeout()
        != other.getIcmpDropTimeout()) return false;
    if (getOtherDropTimeout()
        != other.getOtherDropTimeout()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    hash = (37 * hash) + CONNECTION_TRACKING_ENABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getConnectionTrackingEnable());
    hash = (37 * hash) + RULE_STATS_ENABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRuleStatsEnable());
    hash = (37 * hash) + DEFAULT_FIREWALL_ACTION_FIELD_NUMBER;
    hash = (53 * hash) + defaultFirewallAction_;
    hash = (37 * hash) + TCP_IDLE_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTcpIdleTimeout();
    hash = (37 * hash) + UDP_IDLE_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getUdpIdleTimeout();
    hash = (37 * hash) + ICMP_IDLE_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getIcmpIdleTimeout();
    hash = (37 * hash) + OTHER_IDLE_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getOtherIdleTimeout();
    hash = (37 * hash) + TCP_CONNECTION_SETUP_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTcpConnectionSetupTimeout();
    hash = (37 * hash) + TCP_HALF_CLOSE_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTcpHalfCloseTimeout();
    hash = (37 * hash) + TCP_CLOSE_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTcpCloseTimeout();
    hash = (37 * hash) + TCP_DORP_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTcpDorpTimeout();
    hash = (37 * hash) + UDP_DROP_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getUdpDropTimeout();
    hash = (37 * hash) + ICMP_DROP_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getIcmpDropTimeout();
    hash = (37 * hash) + OTHER_DROP_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getOtherDropTimeout();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.cloud.v1alpha1.SecurityProfileSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * security profile - defaults for network security behavior
   * - currently security profile object is global and only a singleton object,
   *   any attempt to create multiple objects will be treated as an error
   * - if no object is created, indicated default values will be used
   * - all timeouts specified in this object are in seconds
   * </pre>
   *
   * Protobuf type {@code opi_api.network.cloud.v1alpha1.SecurityProfileSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.cloud.v1alpha1.SecurityProfileSpec)
      opi_api.network.cloud.v1alpha1.SecurityProfileSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_SecurityProfileSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_SecurityProfileSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.cloud.v1alpha1.SecurityProfileSpec.class, opi_api.network.cloud.v1alpha1.SecurityProfileSpec.Builder.class);
    }

    // Construct using opi_api.network.cloud.v1alpha1.SecurityProfileSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (idBuilder_ == null) {
        id_ = null;
      } else {
        id_ = null;
        idBuilder_ = null;
      }
      connectionTrackingEnable_ = false;

      ruleStatsEnable_ = false;

      defaultFirewallAction_ = 0;

      tcpIdleTimeout_ = 0;

      udpIdleTimeout_ = 0;

      icmpIdleTimeout_ = 0;

      otherIdleTimeout_ = 0;

      tcpConnectionSetupTimeout_ = 0;

      tcpHalfCloseTimeout_ = 0;

      tcpCloseTimeout_ = 0;

      tcpDorpTimeout_ = 0;

      udpDropTimeout_ = 0;

      icmpDropTimeout_ = 0;

      otherDropTimeout_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_SecurityProfileSpec_descriptor;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.SecurityProfileSpec getDefaultInstanceForType() {
      return opi_api.network.cloud.v1alpha1.SecurityProfileSpec.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.SecurityProfileSpec build() {
      opi_api.network.cloud.v1alpha1.SecurityProfileSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.SecurityProfileSpec buildPartial() {
      opi_api.network.cloud.v1alpha1.SecurityProfileSpec result = new opi_api.network.cloud.v1alpha1.SecurityProfileSpec(this);
      if (idBuilder_ == null) {
        result.id_ = id_;
      } else {
        result.id_ = idBuilder_.build();
      }
      result.connectionTrackingEnable_ = connectionTrackingEnable_;
      result.ruleStatsEnable_ = ruleStatsEnable_;
      result.defaultFirewallAction_ = defaultFirewallAction_;
      result.tcpIdleTimeout_ = tcpIdleTimeout_;
      result.udpIdleTimeout_ = udpIdleTimeout_;
      result.icmpIdleTimeout_ = icmpIdleTimeout_;
      result.otherIdleTimeout_ = otherIdleTimeout_;
      result.tcpConnectionSetupTimeout_ = tcpConnectionSetupTimeout_;
      result.tcpHalfCloseTimeout_ = tcpHalfCloseTimeout_;
      result.tcpCloseTimeout_ = tcpCloseTimeout_;
      result.tcpDorpTimeout_ = tcpDorpTimeout_;
      result.udpDropTimeout_ = udpDropTimeout_;
      result.icmpDropTimeout_ = icmpDropTimeout_;
      result.otherDropTimeout_ = otherDropTimeout_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.cloud.v1alpha1.SecurityProfileSpec) {
        return mergeFrom((opi_api.network.cloud.v1alpha1.SecurityProfileSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.cloud.v1alpha1.SecurityProfileSpec other) {
      if (other == opi_api.network.cloud.v1alpha1.SecurityProfileSpec.getDefaultInstance()) return this;
      if (other.hasId()) {
        mergeId(other.getId());
      }
      if (other.getConnectionTrackingEnable() != false) {
        setConnectionTrackingEnable(other.getConnectionTrackingEnable());
      }
      if (other.getRuleStatsEnable() != false) {
        setRuleStatsEnable(other.getRuleStatsEnable());
      }
      if (other.defaultFirewallAction_ != 0) {
        setDefaultFirewallActionValue(other.getDefaultFirewallActionValue());
      }
      if (other.getTcpIdleTimeout() != 0) {
        setTcpIdleTimeout(other.getTcpIdleTimeout());
      }
      if (other.getUdpIdleTimeout() != 0) {
        setUdpIdleTimeout(other.getUdpIdleTimeout());
      }
      if (other.getIcmpIdleTimeout() != 0) {
        setIcmpIdleTimeout(other.getIcmpIdleTimeout());
      }
      if (other.getOtherIdleTimeout() != 0) {
        setOtherIdleTimeout(other.getOtherIdleTimeout());
      }
      if (other.getTcpConnectionSetupTimeout() != 0) {
        setTcpConnectionSetupTimeout(other.getTcpConnectionSetupTimeout());
      }
      if (other.getTcpHalfCloseTimeout() != 0) {
        setTcpHalfCloseTimeout(other.getTcpHalfCloseTimeout());
      }
      if (other.getTcpCloseTimeout() != 0) {
        setTcpCloseTimeout(other.getTcpCloseTimeout());
      }
      if (other.getTcpDorpTimeout() != 0) {
        setTcpDorpTimeout(other.getTcpDorpTimeout());
      }
      if (other.getUdpDropTimeout() != 0) {
        setUdpDropTimeout(other.getUdpDropTimeout());
      }
      if (other.getIcmpDropTimeout() != 0) {
        setIcmpDropTimeout(other.getIcmpDropTimeout());
      }
      if (other.getOtherDropTimeout() != 0) {
        setOtherDropTimeout(other.getOtherDropTimeout());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.cloud.v1alpha1.SecurityProfileSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.cloud.v1alpha1.SecurityProfileSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private opi_api.common.v1.ObjectKey id_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> idBuilder_;
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return idBuilder_ != null || id_ != null;
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     * @return The id.
     */
    public opi_api.common.v1.ObjectKey getId() {
      if (idBuilder_ == null) {
        return id_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
      } else {
        return idBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder setId(opi_api.common.v1.ObjectKey value) {
      if (idBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        id_ = value;
        onChanged();
      } else {
        idBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder setId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (idBuilder_ == null) {
        id_ = builderForValue.build();
        onChanged();
      } else {
        idBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder mergeId(opi_api.common.v1.ObjectKey value) {
      if (idBuilder_ == null) {
        if (id_ != null) {
          id_ =
            opi_api.common.v1.ObjectKey.newBuilder(id_).mergeFrom(value).buildPartial();
        } else {
          id_ = value;
        }
        onChanged();
      } else {
        idBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder clearId() {
      if (idBuilder_ == null) {
        id_ = null;
        onChanged();
      } else {
        id_ = null;
        idBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getIdBuilder() {
      
      onChanged();
      return getIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder() {
      if (idBuilder_ != null) {
        return idBuilder_.getMessageOrBuilder();
      } else {
        return id_ == null ?
            opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
      }
    }
    /**
     * <pre>
     * unique identifier of security profile
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getIdFieldBuilder() {
      if (idBuilder_ == null) {
        idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                getId(),
                getParentForChildren(),
                isClean());
        id_ = null;
      }
      return idBuilder_;
    }

    private boolean connectionTrackingEnable_ ;
    /**
     * <pre>
     * ConnTrackEn, if set to true, will enable full connection tracking
     * if connection_tracking_enable is modified on the fly, it will take affect only
     * on sessions created thereafter and doesn't affect existing sessions
     * </pre>
     *
     * <code>bool connection_tracking_enable = 2;</code>
     * @return The connectionTrackingEnable.
     */
    @java.lang.Override
    public boolean getConnectionTrackingEnable() {
      return connectionTrackingEnable_;
    }
    /**
     * <pre>
     * ConnTrackEn, if set to true, will enable full connection tracking
     * if connection_tracking_enable is modified on the fly, it will take affect only
     * on sessions created thereafter and doesn't affect existing sessions
     * </pre>
     *
     * <code>bool connection_tracking_enable = 2;</code>
     * @param value The connectionTrackingEnable to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionTrackingEnable(boolean value) {
      
      connectionTrackingEnable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ConnTrackEn, if set to true, will enable full connection tracking
     * if connection_tracking_enable is modified on the fly, it will take affect only
     * on sessions created thereafter and doesn't affect existing sessions
     * </pre>
     *
     * <code>bool connection_tracking_enable = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectionTrackingEnable() {
      
      connectionTrackingEnable_ = false;
      onChanged();
      return this;
    }

    private boolean ruleStatsEnable_ ;
    /**
     * <pre>
     * rule_stats_enable, if set to true, will enable per security policy rule
     * statistics feature in the datapath (by default rule stats functionality is
     * turned off and can be enabled on the fly for debugging)
     * </pre>
     *
     * <code>bool rule_stats_enable = 3;</code>
     * @return The ruleStatsEnable.
     */
    @java.lang.Override
    public boolean getRuleStatsEnable() {
      return ruleStatsEnable_;
    }
    /**
     * <pre>
     * rule_stats_enable, if set to true, will enable per security policy rule
     * statistics feature in the datapath (by default rule stats functionality is
     * turned off and can be enabled on the fly for debugging)
     * </pre>
     *
     * <code>bool rule_stats_enable = 3;</code>
     * @param value The ruleStatsEnable to set.
     * @return This builder for chaining.
     */
    public Builder setRuleStatsEnable(boolean value) {
      
      ruleStatsEnable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rule_stats_enable, if set to true, will enable per security policy rule
     * statistics feature in the datapath (by default rule stats functionality is
     * turned off and can be enabled on the fly for debugging)
     * </pre>
     *
     * <code>bool rule_stats_enable = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRuleStatsEnable() {
      
      ruleStatsEnable_ = false;
      onChanged();
      return this;
    }

    private int defaultFirewallAction_ = 0;
    /**
     * <pre>
     * default_firewall_action is the action taken by the smartnic when policies are
     * configured on the subnet or vnic, no rule matches and default action for policy is none
     * this will have effect iff policy is attached on either vnic or subnet.
     * if no action is specified  in security profile, default action is "deny"
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
     * @return The enum numeric value on the wire for defaultFirewallAction.
     */
    @java.lang.Override public int getDefaultFirewallActionValue() {
      return defaultFirewallAction_;
    }
    /**
     * <pre>
     * default_firewall_action is the action taken by the smartnic when policies are
     * configured on the subnet or vnic, no rule matches and default action for policy is none
     * this will have effect iff policy is attached on either vnic or subnet.
     * if no action is specified  in security profile, default action is "deny"
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
     * @param value The enum numeric value on the wire for defaultFirewallAction to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultFirewallActionValue(int value) {
      
      defaultFirewallAction_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * default_firewall_action is the action taken by the smartnic when policies are
     * configured on the subnet or vnic, no rule matches and default action for policy is none
     * this will have effect iff policy is attached on either vnic or subnet.
     * if no action is specified  in security profile, default action is "deny"
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
     * @return The defaultFirewallAction.
     */
    @java.lang.Override
    public opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction getDefaultFirewallAction() {
      @SuppressWarnings("deprecation")
      opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction result = opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction.valueOf(defaultFirewallAction_);
      return result == null ? opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * default_firewall_action is the action taken by the smartnic when policies are
     * configured on the subnet or vnic, no rule matches and default action for policy is none
     * this will have effect iff policy is attached on either vnic or subnet.
     * if no action is specified  in security profile, default action is "deny"
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
     * @param value The defaultFirewallAction to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultFirewallAction(opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      defaultFirewallAction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * default_firewall_action is the action taken by the smartnic when policies are
     * configured on the subnet or vnic, no rule matches and default action for policy is none
     * this will have effect iff policy is attached on either vnic or subnet.
     * if no action is specified  in security profile, default action is "deny"
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.SecurityRuleAction default_firewall_action = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefaultFirewallAction() {
      
      defaultFirewallAction_ = 0;
      onChanged();
      return this;
    }

    private int tcpIdleTimeout_ ;
    /**
     * <pre>
     * timeouts for established sessions per TCP/UDP/ICMP and other protocols
     * range:1-86400, default=600
     * </pre>
     *
     * <code>int32 tcp_idle_timeout = 5;</code>
     * @return The tcpIdleTimeout.
     */
    @java.lang.Override
    public int getTcpIdleTimeout() {
      return tcpIdleTimeout_;
    }
    /**
     * <pre>
     * timeouts for established sessions per TCP/UDP/ICMP and other protocols
     * range:1-86400, default=600
     * </pre>
     *
     * <code>int32 tcp_idle_timeout = 5;</code>
     * @param value The tcpIdleTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setTcpIdleTimeout(int value) {
      
      tcpIdleTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * timeouts for established sessions per TCP/UDP/ICMP and other protocols
     * range:1-86400, default=600
     * </pre>
     *
     * <code>int32 tcp_idle_timeout = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTcpIdleTimeout() {
      
      tcpIdleTimeout_ = 0;
      onChanged();
      return this;
    }

    private int udpIdleTimeout_ ;
    /**
     * <pre>
     * range:1-86400, default=120
     * </pre>
     *
     * <code>int32 udp_idle_timeout = 6;</code>
     * @return The udpIdleTimeout.
     */
    @java.lang.Override
    public int getUdpIdleTimeout() {
      return udpIdleTimeout_;
    }
    /**
     * <pre>
     * range:1-86400, default=120
     * </pre>
     *
     * <code>int32 udp_idle_timeout = 6;</code>
     * @param value The udpIdleTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setUdpIdleTimeout(int value) {
      
      udpIdleTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range:1-86400, default=120
     * </pre>
     *
     * <code>int32 udp_idle_timeout = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearUdpIdleTimeout() {
      
      udpIdleTimeout_ = 0;
      onChanged();
      return this;
    }

    private int icmpIdleTimeout_ ;
    /**
     * <pre>
     * range:1-86400, default=15
     * </pre>
     *
     * <code>int32 icmp_idle_timeout = 7;</code>
     * @return The icmpIdleTimeout.
     */
    @java.lang.Override
    public int getIcmpIdleTimeout() {
      return icmpIdleTimeout_;
    }
    /**
     * <pre>
     * range:1-86400, default=15
     * </pre>
     *
     * <code>int32 icmp_idle_timeout = 7;</code>
     * @param value The icmpIdleTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setIcmpIdleTimeout(int value) {
      
      icmpIdleTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range:1-86400, default=15
     * </pre>
     *
     * <code>int32 icmp_idle_timeout = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearIcmpIdleTimeout() {
      
      icmpIdleTimeout_ = 0;
      onChanged();
      return this;
    }

    private int otherIdleTimeout_ ;
    /**
     * <pre>
     * range:1-86400, default=90
     * </pre>
     *
     * <code>int32 other_idle_timeout = 8;</code>
     * @return The otherIdleTimeout.
     */
    @java.lang.Override
    public int getOtherIdleTimeout() {
      return otherIdleTimeout_;
    }
    /**
     * <pre>
     * range:1-86400, default=90
     * </pre>
     *
     * <code>int32 other_idle_timeout = 8;</code>
     * @param value The otherIdleTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setOtherIdleTimeout(int value) {
      
      otherIdleTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range:1-86400, default=90
     * </pre>
     *
     * <code>int32 other_idle_timeout = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearOtherIdleTimeout() {
      
      otherIdleTimeout_ = 0;
      onChanged();
      return this;
    }

    private int tcpConnectionSetupTimeout_ ;
    /**
     * <pre>
     * TCP specific timeouts
     * tcp_connection_setup_timeout is the maximum allowed time since first SYN seen to
     * 3-way handshake completion, session gets cleaned up if 3-way handshake is
     * not completed and session moves to ESTABLISHED state by then.  range:1-60, default=10
     * </pre>
     *
     * <code>int32 tcp_connection_setup_timeout = 9;</code>
     * @return The tcpConnectionSetupTimeout.
     */
    @java.lang.Override
    public int getTcpConnectionSetupTimeout() {
      return tcpConnectionSetupTimeout_;
    }
    /**
     * <pre>
     * TCP specific timeouts
     * tcp_connection_setup_timeout is the maximum allowed time since first SYN seen to
     * 3-way handshake completion, session gets cleaned up if 3-way handshake is
     * not completed and session moves to ESTABLISHED state by then.  range:1-60, default=10
     * </pre>
     *
     * <code>int32 tcp_connection_setup_timeout = 9;</code>
     * @param value The tcpConnectionSetupTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setTcpConnectionSetupTimeout(int value) {
      
      tcpConnectionSetupTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TCP specific timeouts
     * tcp_connection_setup_timeout is the maximum allowed time since first SYN seen to
     * 3-way handshake completion, session gets cleaned up if 3-way handshake is
     * not completed and session moves to ESTABLISHED state by then.  range:1-60, default=10
     * </pre>
     *
     * <code>int32 tcp_connection_setup_timeout = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTcpConnectionSetupTimeout() {
      
      tcpConnectionSetupTimeout_ = 0;
      onChanged();
      return this;
    }

    private int tcpHalfCloseTimeout_ ;
    /**
     * <pre>
     * tcp_half_close_timeout is the maximum allowed time since first FIN seen to
     * 3/4way close, session gets cleaned up if this timer elapses. range:1-172800, default=120
     * </pre>
     *
     * <code>int32 tcp_half_close_timeout = 10;</code>
     * @return The tcpHalfCloseTimeout.
     */
    @java.lang.Override
    public int getTcpHalfCloseTimeout() {
      return tcpHalfCloseTimeout_;
    }
    /**
     * <pre>
     * tcp_half_close_timeout is the maximum allowed time since first FIN seen to
     * 3/4way close, session gets cleaned up if this timer elapses. range:1-172800, default=120
     * </pre>
     *
     * <code>int32 tcp_half_close_timeout = 10;</code>
     * @param value The tcpHalfCloseTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setTcpHalfCloseTimeout(int value) {
      
      tcpHalfCloseTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tcp_half_close_timeout is the maximum allowed time since first FIN seen to
     * 3/4way close, session gets cleaned up if this timer elapses. range:1-172800, default=120
     * </pre>
     *
     * <code>int32 tcp_half_close_timeout = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTcpHalfCloseTimeout() {
      
      tcpHalfCloseTimeout_ = 0;
      onChanged();
      return this;
    }

    private int tcpCloseTimeout_ ;
    /**
     * <pre>
     * tcp_close_timeout is wait time since FIN is seen from *both* sides (or RST)
     * before cleaning up the session range:1-300, default=15
     * </pre>
     *
     * <code>int32 tcp_close_timeout = 11;</code>
     * @return The tcpCloseTimeout.
     */
    @java.lang.Override
    public int getTcpCloseTimeout() {
      return tcpCloseTimeout_;
    }
    /**
     * <pre>
     * tcp_close_timeout is wait time since FIN is seen from *both* sides (or RST)
     * before cleaning up the session range:1-300, default=15
     * </pre>
     *
     * <code>int32 tcp_close_timeout = 11;</code>
     * @param value The tcpCloseTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setTcpCloseTimeout(int value) {
      
      tcpCloseTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tcp_close_timeout is wait time since FIN is seen from *both* sides (or RST)
     * before cleaning up the session range:1-300, default=15
     * </pre>
     *
     * <code>int32 tcp_close_timeout = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearTcpCloseTimeout() {
      
      tcpCloseTimeout_ = 0;
      onChanged();
      return this;
    }

    private int tcpDorpTimeout_ ;
    /**
     * <pre>
     * timeouts applicable to sessions installed with drop action
     * range:1-300, default=90
     * </pre>
     *
     * <code>int32 tcp_dorp_timeout = 12;</code>
     * @return The tcpDorpTimeout.
     */
    @java.lang.Override
    public int getTcpDorpTimeout() {
      return tcpDorpTimeout_;
    }
    /**
     * <pre>
     * timeouts applicable to sessions installed with drop action
     * range:1-300, default=90
     * </pre>
     *
     * <code>int32 tcp_dorp_timeout = 12;</code>
     * @param value The tcpDorpTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setTcpDorpTimeout(int value) {
      
      tcpDorpTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * timeouts applicable to sessions installed with drop action
     * range:1-300, default=90
     * </pre>
     *
     * <code>int32 tcp_dorp_timeout = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTcpDorpTimeout() {
      
      tcpDorpTimeout_ = 0;
      onChanged();
      return this;
    }

    private int udpDropTimeout_ ;
    /**
     * <pre>
     * range:1-172800, default=60
     * </pre>
     *
     * <code>int32 udp_drop_timeout = 13;</code>
     * @return The udpDropTimeout.
     */
    @java.lang.Override
    public int getUdpDropTimeout() {
      return udpDropTimeout_;
    }
    /**
     * <pre>
     * range:1-172800, default=60
     * </pre>
     *
     * <code>int32 udp_drop_timeout = 13;</code>
     * @param value The udpDropTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setUdpDropTimeout(int value) {
      
      udpDropTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range:1-172800, default=60
     * </pre>
     *
     * <code>int32 udp_drop_timeout = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearUdpDropTimeout() {
      
      udpDropTimeout_ = 0;
      onChanged();
      return this;
    }

    private int icmpDropTimeout_ ;
    /**
     * <pre>
     * range:1-300, default=30
     * </pre>
     *
     * <code>int32 icmp_drop_timeout = 14;</code>
     * @return The icmpDropTimeout.
     */
    @java.lang.Override
    public int getIcmpDropTimeout() {
      return icmpDropTimeout_;
    }
    /**
     * <pre>
     * range:1-300, default=30
     * </pre>
     *
     * <code>int32 icmp_drop_timeout = 14;</code>
     * @param value The icmpDropTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setIcmpDropTimeout(int value) {
      
      icmpDropTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range:1-300, default=30
     * </pre>
     *
     * <code>int32 icmp_drop_timeout = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearIcmpDropTimeout() {
      
      icmpDropTimeout_ = 0;
      onChanged();
      return this;
    }

    private int otherDropTimeout_ ;
    /**
     * <pre>
     * range:1-300, default=60
     * </pre>
     *
     * <code>int32 other_drop_timeout = 15;</code>
     * @return The otherDropTimeout.
     */
    @java.lang.Override
    public int getOtherDropTimeout() {
      return otherDropTimeout_;
    }
    /**
     * <pre>
     * range:1-300, default=60
     * </pre>
     *
     * <code>int32 other_drop_timeout = 15;</code>
     * @param value The otherDropTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setOtherDropTimeout(int value) {
      
      otherDropTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range:1-300, default=60
     * </pre>
     *
     * <code>int32 other_drop_timeout = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearOtherDropTimeout() {
      
      otherDropTimeout_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.cloud.v1alpha1.SecurityProfileSpec)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.SecurityProfileSpec)
  private static final opi_api.network.cloud.v1alpha1.SecurityProfileSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.cloud.v1alpha1.SecurityProfileSpec();
  }

  public static opi_api.network.cloud.v1alpha1.SecurityProfileSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SecurityProfileSpec>
      PARSER = new com.google.protobuf.AbstractParser<SecurityProfileSpec>() {
    @java.lang.Override
    public SecurityProfileSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SecurityProfileSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SecurityProfileSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SecurityProfileSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.SecurityProfileSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

