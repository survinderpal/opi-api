// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vnic.proto

package opi_api.network.cloud.v1alpha1;

public final class VnicProto {
  private VnicProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_cloud_v1alpha1_Vnic_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_cloud_v1alpha1_Vnic_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_cloud_v1alpha1_VnicSpec_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_cloud_v1alpha1_VnicSpec_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_cloud_v1alpha1_VnicStatus_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_cloud_v1alpha1_VnicStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nvnic.proto\022\036opi_api.network.cloud.v1al" +
      "pha1\032\020object_key.proto\032\022networktypes.pro" +
      "to\"z\n\004Vnic\0226\n\004spec\030\001 \001(\0132(.opi_api.netwo" +
      "rk.cloud.v1alpha1.VnicSpec\022:\n\006status\030\002 \001" +
      "(\0132*.opi_api.network.cloud.v1alpha1.Vnic" +
      "Status\"\374\010\n\010VnicSpec\022(\n\002id\030\001 \001(\0132\034.opi_ap" +
      "i.common.v1.ObjectKey\022/\n\tsubnet_id\030\002 \001(\013" +
      "2\034.opi_api.common.v1.ObjectKey\022@\n\nvnic_e" +
      "ncap\030\003 \001(\0132,.opi_api.network.opinetcommo" +
      "n.v1alpha1.Encap\022\023\n\013mac_address\030\004 \001(\014\022\033\n" +
      "\023source_guard_enable\030\005 \001(\010\022B\n\014fabric_enc" +
      "ap\030\006 \001(\0132,.opi_api.network.opinetcommon." +
      "v1alpha1.Encap\022\013\n\003vnf\030\007 \001(\010\022C\n\035ingress_v" +
      "4_security_policy_id\030\010 \003(\0132\034.opi_api.com" +
      "mon.v1.ObjectKey\022C\n\035ingress_v6_security_" +
      "policy_id\030\t \003(\0132\034.opi_api.common.v1.Obje" +
      "ctKey\022B\n\034egress_v4_security_policy_id\030\n " +
      "\003(\0132\034.opi_api.common.v1.ObjectKey\022B\n\034egr" +
      "ess_v6_security_policy_id\030\013 \003(\0132\034.opi_ap" +
      "i.common.v1.ObjectKey\0222\n\nhost_if_id\030\014 \001(" +
      "\0132\034.opi_api.common.v1.ObjectKeyH\000\0221\n\ttun" +
      "nel_id\030\017 \001(\0132\034.opi_api.common.v1.ObjectK" +
      "eyH\000\022\024\n\014max_sessions\030\024 \001(\005\022\032\n\022public_mac" +
      "_address\030\031 \001(\014\022\035\n\025allow_internet_access\030" +
      "\034 \001(\010\022\017\n\007max_cps\030\035 \001(\005\022\021\n\tcps_burst\030\036 \001(" +
      "\005\0225\n\017primary_vnic_id\030  \001(\0132\034.opi_api.com" +
      "mon.v1.ObjectKey\0227\n\021v4_route_table_id\030! " +
      "\001(\0132\034.opi_api.common.v1.ObjectKey\0227\n\021v6_" +
      "route_table_id\030\" \001(\0132\034.opi_api.common.v1" +
      ".ObjectKey\022D\n\nservice_ip\030$ \001(\01320.opi_api" +
      ".network.opinetcommon.v1alpha1.IPAddress" +
      "\022\030\n\020max_tcp_sessions\030& \001(\005\022\030\n\020max_udp_se" +
      "ssions\030\' \001(\005\022\031\n\021max_icmp_sessions\030( \001(\005\022" +
      "\032\n\022max_other_sessions\030) \001(\005B\010\n\006ifinfo\"\264\002" +
      "\n\nVnicStatus\022\035\n\025max_session_limit_hit\030\r " +
      "\001(\010\022!\n\031max_tcp_session_limit_hit\030\016 \001(\010\022!" +
      "\n\031max_udp_session_limit_hit\030\017 \001(\010\022\"\n\032max" +
      "_icmp_session_limit_hit\030\020 \001(\010\022#\n\033max_oth" +
      "er_session_limit_hit\030\021 \001(\010\022\016\n\006hw_idx\030\001 \001" +
      "(\005\022\026\n\016nexthop_hw_idx\030\002 \001(\005\022\027\n\017cps_copp_h" +
      "w_idx\030\n \001(\005\0227\n\021secondary_vnic_id\030\013 \001(\0132\034" +
      ".opi_api.common.v1.ObjectKeyBj\n\036opi_api." +
      "network.cloud.v1alpha1B\tVnicProtoP\001Z;git" +
      "hub.com/opiproject/opi-api/network/cloud" +
      "/v1alpha1/gen/gob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          opi_api.common.v1.ObjectKeyProto.getDescriptor(),
          opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.getDescriptor(),
        });
    internal_static_opi_api_network_cloud_v1alpha1_Vnic_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opi_api_network_cloud_v1alpha1_Vnic_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_cloud_v1alpha1_Vnic_descriptor,
        new java.lang.String[] { "Spec", "Status", });
    internal_static_opi_api_network_cloud_v1alpha1_VnicSpec_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opi_api_network_cloud_v1alpha1_VnicSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_cloud_v1alpha1_VnicSpec_descriptor,
        new java.lang.String[] { "Id", "SubnetId", "VnicEncap", "MacAddress", "SourceGuardEnable", "FabricEncap", "Vnf", "IngressV4SecurityPolicyId", "IngressV6SecurityPolicyId", "EgressV4SecurityPolicyId", "EgressV6SecurityPolicyId", "HostIfId", "TunnelId", "MaxSessions", "PublicMacAddress", "AllowInternetAccess", "MaxCps", "CpsBurst", "PrimaryVnicId", "V4RouteTableId", "V6RouteTableId", "ServiceIp", "MaxTcpSessions", "MaxUdpSessions", "MaxIcmpSessions", "MaxOtherSessions", "Ifinfo", });
    internal_static_opi_api_network_cloud_v1alpha1_VnicStatus_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_opi_api_network_cloud_v1alpha1_VnicStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_cloud_v1alpha1_VnicStatus_descriptor,
        new java.lang.String[] { "MaxSessionLimitHit", "MaxTcpSessionLimitHit", "MaxUdpSessionLimitHit", "MaxIcmpSessionLimitHit", "MaxOtherSessionLimitHit", "HwIdx", "NexthopHwIdx", "CpsCoppHwIdx", "SecondaryVnicId", });
    opi_api.common.v1.ObjectKeyProto.getDescriptor();
    opi_api.network.opinetcommon.v1alpha1.NetworkTypesProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
