// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bgp.proto

package opi_api.network.cloud.v1alpha1;

public interface BgpSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.cloud.v1alpha1.BgpSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique key/identifier of BGP config
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * unique key/identifier of BGP config
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  opi_api.common.v1.ObjectKey getId();
  /**
   * <pre>
   * unique key/identifier of BGP config
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * the local autonomous system number
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: must use uint32 per BGP spec. --)
   * </pre>
   *
   * <code>uint32 local_asn = 2;</code>
   * @return The localAsn.
   */
  int getLocalAsn();

  /**
   * <pre>
   * router ID for this bgp instance
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: must use fixed32 per BGP spec. --)
   * </pre>
   *
   * <code>fixed32 router_id = 3;</code>
   * @return The routerId.
   */
  int getRouterId();

  /**
   * <pre>
   * cluster ID of the local router. router ID will be used as cluster ID
   * if cluster ID is not configured or configured to zero
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: must use fixed32 per BGP spec. --)
   * </pre>
   *
   * <code>fixed32 cluster_id = 4;</code>
   * @return The clusterId.
   */
  int getClusterId();

  /**
   * <pre>
   * disable/enable BGP
   * </pre>
   *
   * <code>bool disable = 5;</code>
   * @return The disable.
   */
  boolean getDisable();

  /**
   * <pre>
   * exclude default route from being used to resolve nexthop reachability in the underlay
   * changing this will deactivate and activate the routing stack RIB
   * </pre>
   *
   * <code>bool suppress_default_resolution = 6;</code>
   * @return The suppressDefaultResolution.
   */
  boolean getSuppressDefaultResolution();
}
