// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mapping.proto

package opi_api.network.cloud.v1alpha1;

public interface MappingSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.cloud.v1alpha1.MappingSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique mapping id
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * unique mapping id
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  opi_api.common.v1.ObjectKey getId();
  /**
   * <pre>
   * unique mapping id
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * IP mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 2;</code>
   * @return Whether the ipKey field is set.
   */
  boolean hasIpKey();
  /**
   * <pre>
   * IP mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 2;</code>
   * @return The ipKey.
   */
  opi_api.network.cloud.v1alpha1.L3MappingKey getIpKey();
  /**
   * <pre>
   * IP mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L3MappingKey ip_key = 2;</code>
   */
  opi_api.network.cloud.v1alpha1.L3MappingKeyOrBuilder getIpKeyOrBuilder();

  /**
   * <pre>
   * MAC mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 3;</code>
   * @return Whether the macKey field is set.
   */
  boolean hasMacKey();
  /**
   * <pre>
   * MAC mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 3;</code>
   * @return The macKey.
   */
  opi_api.network.cloud.v1alpha1.L2MappingKey getMacKey();
  /**
   * <pre>
   * MAC mapping key
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.L2MappingKey mac_key = 3;</code>
   */
  opi_api.network.cloud.v1alpha1.L2MappingKeyOrBuilder getMacKeyOrBuilder();

  /**
   * <pre>
   * subnet this mapping is in
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey subnet_id = 4;</code>
   * @return Whether the subnetId field is set.
   */
  boolean hasSubnetId();
  /**
   * <pre>
   * subnet this mapping is in
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey subnet_id = 4;</code>
   * @return The subnetId.
   */
  opi_api.common.v1.ObjectKey getSubnetId();
  /**
   * <pre>
   * subnet this mapping is in
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey subnet_id = 4;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getSubnetIdOrBuilder();

  /**
   * <pre>
   * if IP is that of local vnic, corresponding vnic id
   * this is mandatory attribute for local IP mappings
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vnic_id = 5;</code>
   * @return Whether the vnicId field is set.
   */
  boolean hasVnicId();
  /**
   * <pre>
   * if IP is that of local vnic, corresponding vnic id
   * this is mandatory attribute for local IP mappings
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vnic_id = 5;</code>
   * @return The vnicId.
   */
  opi_api.common.v1.ObjectKey getVnicId();
  /**
   * <pre>
   * if IP is that of local vnic, corresponding vnic id
   * this is mandatory attribute for local IP mappings
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vnic_id = 5;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getVnicIdOrBuilder();

  /**
   * <pre>
   * Tunnel ID of the remote TEP for remote mapping
   * this is mandatory attribute for remote MAC/IP mappings for
   * non-ECMP cases
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey tunnel_id = 6;</code>
   * @return Whether the tunnelId field is set.
   */
  boolean hasTunnelId();
  /**
   * <pre>
   * Tunnel ID of the remote TEP for remote mapping
   * this is mandatory attribute for remote MAC/IP mappings for
   * non-ECMP cases
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey tunnel_id = 6;</code>
   * @return The tunnelId.
   */
  opi_api.common.v1.ObjectKey getTunnelId();
  /**
   * <pre>
   * Tunnel ID of the remote TEP for remote mapping
   * this is mandatory attribute for remote MAC/IP mappings for
   * non-ECMP cases
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey tunnel_id = 6;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getTunnelIdOrBuilder();

  /**
   * <pre>
   * overlay nexthop/TEP group for remote mappings
   * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nh_group_id = 7;</code>
   * @return Whether the nhGroupId field is set.
   */
  boolean hasNhGroupId();
  /**
   * <pre>
   * overlay nexthop/TEP group for remote mappings
   * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nh_group_id = 7;</code>
   * @return The nhGroupId.
   */
  opi_api.common.v1.ObjectKey getNhGroupId();
  /**
   * <pre>
   * overlay nexthop/TEP group for remote mappings
   * this is mandatory attribute for remote MAC/IP mappings for ECMP cases
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey nh_group_id = 7;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getNhGroupIdOrBuilder();

  /**
   * <pre>
   * overlay MAC address of this mapping
   * </pre>
   *
   * <code>bytes mac_addr = 8;</code>
   * @return The macAddr.
   */
  com.google.protobuf.ByteString getMacAddr();

  /**
   * <pre>
   * fabric encap information specific to this mapping, if any
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 9;</code>
   * @return Whether the encap field is set.
   */
  boolean hasEncap();
  /**
   * <pre>
   * fabric encap information specific to this mapping, if any
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 9;</code>
   * @return The encap.
   */
  opi_api.network.opinetcommon.v1alpha1.Encap getEncap();
  /**
   * <pre>
   * fabric encap information specific to this mapping, if any
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 9;</code>
   */
  opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder getEncapOrBuilder();

  /**
   * <pre>
   * public IP, if overlay IP has corresponding public IP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 10;</code>
   * @return Whether the publicIp field is set.
   */
  boolean hasPublicIp();
  /**
   * <pre>
   * public IP, if overlay IP has corresponding public IP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 10;</code>
   * @return The publicIp.
   */
  opi_api.network.opinetcommon.v1alpha1.IPAddress getPublicIp();
  /**
   * <pre>
   * public IP, if overlay IP has corresponding public IP
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress public_ip = 10;</code>
   */
  opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getPublicIpOrBuilder();

  /**
   * <pre>
   * tag/label/security group of this IP mapping, these tags/labels/SGs can be
   * used in defining security policy rules
   * range: 1 - 4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
   * </pre>
   *
   * <code>repeated uint32 tags = 11;</code>
   * @return A list containing the tags.
   */
  java.util.List<java.lang.Integer> getTagsList();
  /**
   * <pre>
   * tag/label/security group of this IP mapping, these tags/labels/SGs can be
   * used in defining security policy rules
   * range: 1 - 4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
   * </pre>
   *
   * <code>repeated uint32 tags = 11;</code>
   * @return The count of tags.
   */
  int getTagsCount();
  /**
   * <pre>
   * tag/label/security group of this IP mapping, these tags/labels/SGs can be
   * used in defining security policy rules
   * range: 1 - 4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: the allowed values need it to be uint32. --)
   * </pre>
   *
   * <code>repeated uint32 tags = 11;</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  int getTags(int index);

  /**
   * <pre>
   * type of the IP mapping endpoint, default is vpc mapping
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 12;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * type of the IP mapping endpoint, default is vpc mapping
   * </pre>
   *
   * <code>.opi_api.network.cloud.v1alpha1.MappingType type = 12;</code>
   * @return The type.
   */
  opi_api.network.cloud.v1alpha1.MappingType getType();

  public opi_api.network.cloud.v1alpha1.MappingSpec.MacOrIpCase getMacOrIpCase();

  public opi_api.network.cloud.v1alpha1.MappingSpec.DstinfoCase getDstinfoCase();
}
