// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkpolicy.proto

package opi_api.network.cloud.v1alpha1;

public interface DNSOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.cloud.v1alpha1.DNSOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *  when DropMultiQueryMessage is set, drop DNS query messages that contain
   *  more than one DNS query in same packet
   * </pre>
   *
   * <code>bool drop_multi_query_messages = 1;</code>
   * @return The dropMultiQueryMessages.
   */
  boolean getDropMultiQueryMessages();

  /**
   * <pre>
   * when DropLargeDomainNameMessage is set, DNS mwessages containing domain
   * name exceeding 255 bytes are dropped
   * </pre>
   *
   * <code>bool drop_large_domain_name_messages = 2;</code>
   * @return The dropLargeDomainNameMessages.
   */
  boolean getDropLargeDomainNameMessages();

  /**
   * <pre>
   * when DropLongLabelMessage is set, DNS messages containing labels
   * exceeding 63 bytes are dropped
   * </pre>
   *
   * <code>bool drop_long_label_messages = 3;</code>
   * @return The dropLongLabelMessages.
   */
  boolean getDropLongLabelMessages();

  /**
   * <pre>
   * when DropMultiZoneMessagesis set, DNS messages containing more than one
   * zone are dropped
   * </pre>
   *
   * <code>bool drop_multi_zone_messages = 4;</code>
   * @return The dropMultiZoneMessages.
   */
  boolean getDropMultiZoneMessages();

  /**
   * <pre>
   * DNS session will be closed if response is not seen for a DNS query within
   * ResponseTimeout seconds, default 60
   * </pre>
   *
   * <code>int32 response_timeout = 5;</code>
   * @return The responseTimeout.
   */
  int getResponseTimeout();

  /**
   * <pre>
   * MaxMessageLength defines the maximum length of the DNS query/response
   * message the ALG will handle range:512-8192,default=512
   * </pre>
   *
   * <code>int32 max_message_length = 6;</code>
   * @return The maxMessageLength.
   */
  int getMaxMessageLength();
}
