// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interface.proto

package opi_api.network.cloud.v1alpha1;

public interface L3IfSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.cloud.v1alpha1.L3IfSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * vpc/vrf this L3 interface belongs to
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vpc_id = 1;</code>
   * @return Whether the vpcId field is set.
   */
  boolean hasVpcId();
  /**
   * <pre>
   * vpc/vrf this L3 interface belongs to
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vpc_id = 1;</code>
   * @return The vpcId.
   */
  opi_api.common.v1.ObjectKey getVpcId();
  /**
   * <pre>
   * vpc/vrf this L3 interface belongs to
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey vpc_id = 1;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getVpcIdOrBuilder();

  /**
   * <pre>
   * Physical port of this L3 interface
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey port_id = 3;</code>
   * @return Whether the portId field is set.
   */
  boolean hasPortId();
  /**
   * <pre>
   * Physical port of this L3 interface
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey port_id = 3;</code>
   * @return The portId.
   */
  opi_api.common.v1.ObjectKey getPortId();
  /**
   * <pre>
   * Physical port of this L3 interface
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey port_id = 3;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getPortIdOrBuilder();

  /**
   * <pre>
   * IP address, prefix of this L3 interface
   * </pre>
   *
   * <code>repeated .opi_api.network.opinetcommon.v1alpha1.IPPrefix prefix = 2;</code>
   */
  java.util.List<opi_api.network.opinetcommon.v1alpha1.IPPrefix> 
      getPrefixList();
  /**
   * <pre>
   * IP address, prefix of this L3 interface
   * </pre>
   *
   * <code>repeated .opi_api.network.opinetcommon.v1alpha1.IPPrefix prefix = 2;</code>
   */
  opi_api.network.opinetcommon.v1alpha1.IPPrefix getPrefix(int index);
  /**
   * <pre>
   * IP address, prefix of this L3 interface
   * </pre>
   *
   * <code>repeated .opi_api.network.opinetcommon.v1alpha1.IPPrefix prefix = 2;</code>
   */
  int getPrefixCount();
  /**
   * <pre>
   * IP address, prefix of this L3 interface
   * </pre>
   *
   * <code>repeated .opi_api.network.opinetcommon.v1alpha1.IPPrefix prefix = 2;</code>
   */
  java.util.List<? extends opi_api.network.opinetcommon.v1alpha1.IPPrefixOrBuilder> 
      getPrefixOrBuilderList();
  /**
   * <pre>
   * IP address, prefix of this L3 interface
   * </pre>
   *
   * <code>repeated .opi_api.network.opinetcommon.v1alpha1.IPPrefix prefix = 2;</code>
   */
  opi_api.network.opinetcommon.v1alpha1.IPPrefixOrBuilder getPrefixOrBuilder(
      int index);

  /**
   * <pre>
   * encap used for packet rewrites if this is a L3 sub interface
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 4;</code>
   * @return Whether the encap field is set.
   */
  boolean hasEncap();
  /**
   * <pre>
   * encap used for packet rewrites if this is a L3 sub interface
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 4;</code>
   * @return The encap.
   */
  opi_api.network.opinetcommon.v1alpha1.Encap getEncap();
  /**
   * <pre>
   * encap used for packet rewrites if this is a L3 sub interface
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.Encap encap = 4;</code>
   */
  opi_api.network.opinetcommon.v1alpha1.EncapOrBuilder getEncapOrBuilder();

  /**
   * <pre>
   * MAC address of this L3 interface; can be set only once
   * </pre>
   *
   * <code>bytes mac_address = 5;</code>
   * @return The macAddress.
   */
  com.google.protobuf.ByteString getMacAddress();
}
