// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: networkpolicy.proto

package opi_api.network.cloud.v1alpha1;

/**
 * <pre>
 * PolicyLookupMatch captures all the policy lookup match conditions
 * </pre>
 *
 * Protobuf type {@code opi_api.network.cloud.v1alpha1.PolicyLookupMatch}
 */
public final class PolicyLookupMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.cloud.v1alpha1.PolicyLookupMatch)
    PolicyLookupMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PolicyLookupMatch.newBuilder() to construct.
  private PolicyLookupMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PolicyLookupMatch() {
    sourceTags_ = emptyIntList();
    destinationTags_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PolicyLookupMatch();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PolicyLookupMatch(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder subBuilder = null;
            if (sourceIp_ != null) {
              subBuilder = sourceIp_.toBuilder();
            }
            sourceIp_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.IPAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sourceIp_);
              sourceIp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sourceTags_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            sourceTags_.addInt(input.readUInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              sourceTags_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              sourceTags_.addInt(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 26: {
            opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder subBuilder = null;
            if (destinationIp_ != null) {
              subBuilder = destinationIp_.toBuilder();
            }
            destinationIp_ = input.readMessage(opi_api.network.opinetcommon.v1alpha1.IPAddress.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(destinationIp_);
              destinationIp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              destinationTags_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            destinationTags_.addInt(input.readUInt32());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              destinationTags_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              destinationTags_.addInt(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 40: {

            protocol_ = input.readInt32();
            break;
          }
          case 48: {

            sourcePort_ = input.readInt32();
            break;
          }
          case 56: {

            destinationPort_ = input.readInt32();
            break;
          }
          case 64: {

            icmpType_ = input.readInt32();
            break;
          }
          case 72: {

            icmpCode_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sourceTags_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        destinationTags_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_PolicyLookupMatch_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_PolicyLookupMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.cloud.v1alpha1.PolicyLookupMatch.class, opi_api.network.cloud.v1alpha1.PolicyLookupMatch.Builder.class);
  }

  public static final int SOURCE_IP_FIELD_NUMBER = 1;
  private opi_api.network.opinetcommon.v1alpha1.IPAddress sourceIp_;
  /**
   * <pre>
   * source IP address
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
   * @return Whether the sourceIp field is set.
   */
  @java.lang.Override
  public boolean hasSourceIp() {
    return sourceIp_ != null;
  }
  /**
   * <pre>
   * source IP address
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
   * @return The sourceIp.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddress getSourceIp() {
    return sourceIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : sourceIp_;
  }
  /**
   * <pre>
   * source IP address
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getSourceIpOrBuilder() {
    return getSourceIp();
  }

  public static final int SOURCE_TAGS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList sourceTags_;
  /**
   * <pre>
   * tags corresponding to the source; an implementation may limit the maximum number of tags
   * range:1-4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: tags are 32bit values. --)
   * </pre>
   *
   * <code>repeated uint32 source_tags = 2;</code>
   * @return A list containing the sourceTags.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getSourceTagsList() {
    return sourceTags_;
  }
  /**
   * <pre>
   * tags corresponding to the source; an implementation may limit the maximum number of tags
   * range:1-4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: tags are 32bit values. --)
   * </pre>
   *
   * <code>repeated uint32 source_tags = 2;</code>
   * @return The count of sourceTags.
   */
  public int getSourceTagsCount() {
    return sourceTags_.size();
  }
  /**
   * <pre>
   * tags corresponding to the source; an implementation may limit the maximum number of tags
   * range:1-4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: tags are 32bit values. --)
   * </pre>
   *
   * <code>repeated uint32 source_tags = 2;</code>
   * @param index The index of the element to return.
   * @return The sourceTags at the given index.
   */
  public int getSourceTags(int index) {
    return sourceTags_.getInt(index);
  }
  private int sourceTagsMemoizedSerializedSize = -1;

  public static final int DESTINATION_IP_FIELD_NUMBER = 3;
  private opi_api.network.opinetcommon.v1alpha1.IPAddress destinationIp_;
  /**
   * <pre>
   * destination IP address
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
   * @return Whether the destinationIp field is set.
   */
  @java.lang.Override
  public boolean hasDestinationIp() {
    return destinationIp_ != null;
  }
  /**
   * <pre>
   * destination IP address
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
   * @return The destinationIp.
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddress getDestinationIp() {
    return destinationIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : destinationIp_;
  }
  /**
   * <pre>
   * destination IP address
   * </pre>
   *
   * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
   */
  @java.lang.Override
  public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getDestinationIpOrBuilder() {
    return getDestinationIp();
  }

  public static final int DESTINATION_TAGS_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.IntList destinationTags_;
  /**
   * <pre>
   * tags corresponding to the destination; an implementation may limit the maximum number of tags
   * range:1-4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: tags are 32bit values. --)
   * </pre>
   *
   * <code>repeated uint32 destination_tags = 4;</code>
   * @return A list containing the destinationTags.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getDestinationTagsList() {
    return destinationTags_;
  }
  /**
   * <pre>
   * tags corresponding to the destination; an implementation may limit the maximum number of tags
   * range:1-4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: tags are 32bit values. --)
   * </pre>
   *
   * <code>repeated uint32 destination_tags = 4;</code>
   * @return The count of destinationTags.
   */
  public int getDestinationTagsCount() {
    return destinationTags_.size();
  }
  /**
   * <pre>
   * tags corresponding to the destination; an implementation may limit the maximum number of tags
   * range:1-4294967294
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: tags are 32bit values. --)
   * </pre>
   *
   * <code>repeated uint32 destination_tags = 4;</code>
   * @param index The index of the element to return.
   * @return The destinationTags at the given index.
   */
  public int getDestinationTags(int index) {
    return destinationTags_.getInt(index);
  }
  private int destinationTagsMemoizedSerializedSize = -1;

  public static final int PROTOCOL_FIELD_NUMBER = 5;
  private int protocol_;
  /**
   * <pre>
   * IP protocol
   * </pre>
   *
   * <code>int32 protocol = 5;</code>
   * @return The protocol.
   */
  @java.lang.Override
  public int getProtocol() {
    return protocol_;
  }

  public static final int SOURCE_PORT_FIELD_NUMBER = 6;
  private int sourcePort_;
  /**
   * <pre>
   * source port, valid only for TCP and UDP
   * </pre>
   *
   * <code>int32 source_port = 6;</code>
   * @return The sourcePort.
   */
  @java.lang.Override
  public int getSourcePort() {
    return sourcePort_;
  }

  public static final int DESTINATION_PORT_FIELD_NUMBER = 7;
  private int destinationPort_;
  /**
   * <pre>
   * destination port, valid only for TCP and UDP
   * </pre>
   *
   * <code>int32 destination_port = 7;</code>
   * @return The destinationPort.
   */
  @java.lang.Override
  public int getDestinationPort() {
    return destinationPort_;
  }

  public static final int ICMP_TYPE_FIELD_NUMBER = 8;
  private int icmpType_;
  /**
   * <pre>
   * valid only for ICMPv4 and ICMPv6
   * </pre>
   *
   * <code>int32 icmp_type = 8;</code>
   * @return The icmpType.
   */
  @java.lang.Override
  public int getIcmpType() {
    return icmpType_;
  }

  public static final int ICMP_CODE_FIELD_NUMBER = 9;
  private int icmpCode_;
  /**
   * <pre>
   * valid only for ICMPv4 and ICMPv6
   * </pre>
   *
   * <code>int32 icmp_code = 9;</code>
   * @return The icmpCode.
   */
  @java.lang.Override
  public int getIcmpCode() {
    return icmpCode_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (sourceIp_ != null) {
      output.writeMessage(1, getSourceIp());
    }
    if (getSourceTagsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(sourceTagsMemoizedSerializedSize);
    }
    for (int i = 0; i < sourceTags_.size(); i++) {
      output.writeUInt32NoTag(sourceTags_.getInt(i));
    }
    if (destinationIp_ != null) {
      output.writeMessage(3, getDestinationIp());
    }
    if (getDestinationTagsList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(destinationTagsMemoizedSerializedSize);
    }
    for (int i = 0; i < destinationTags_.size(); i++) {
      output.writeUInt32NoTag(destinationTags_.getInt(i));
    }
    if (protocol_ != 0) {
      output.writeInt32(5, protocol_);
    }
    if (sourcePort_ != 0) {
      output.writeInt32(6, sourcePort_);
    }
    if (destinationPort_ != 0) {
      output.writeInt32(7, destinationPort_);
    }
    if (icmpType_ != 0) {
      output.writeInt32(8, icmpType_);
    }
    if (icmpCode_ != 0) {
      output.writeInt32(9, icmpCode_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sourceIp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSourceIp());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sourceTags_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(sourceTags_.getInt(i));
      }
      size += dataSize;
      if (!getSourceTagsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sourceTagsMemoizedSerializedSize = dataSize;
    }
    if (destinationIp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDestinationIp());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < destinationTags_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(destinationTags_.getInt(i));
      }
      size += dataSize;
      if (!getDestinationTagsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      destinationTagsMemoizedSerializedSize = dataSize;
    }
    if (protocol_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, protocol_);
    }
    if (sourcePort_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, sourcePort_);
    }
    if (destinationPort_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, destinationPort_);
    }
    if (icmpType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, icmpType_);
    }
    if (icmpCode_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, icmpCode_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.cloud.v1alpha1.PolicyLookupMatch)) {
      return super.equals(obj);
    }
    opi_api.network.cloud.v1alpha1.PolicyLookupMatch other = (opi_api.network.cloud.v1alpha1.PolicyLookupMatch) obj;

    if (hasSourceIp() != other.hasSourceIp()) return false;
    if (hasSourceIp()) {
      if (!getSourceIp()
          .equals(other.getSourceIp())) return false;
    }
    if (!getSourceTagsList()
        .equals(other.getSourceTagsList())) return false;
    if (hasDestinationIp() != other.hasDestinationIp()) return false;
    if (hasDestinationIp()) {
      if (!getDestinationIp()
          .equals(other.getDestinationIp())) return false;
    }
    if (!getDestinationTagsList()
        .equals(other.getDestinationTagsList())) return false;
    if (getProtocol()
        != other.getProtocol()) return false;
    if (getSourcePort()
        != other.getSourcePort()) return false;
    if (getDestinationPort()
        != other.getDestinationPort()) return false;
    if (getIcmpType()
        != other.getIcmpType()) return false;
    if (getIcmpCode()
        != other.getIcmpCode()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSourceIp()) {
      hash = (37 * hash) + SOURCE_IP_FIELD_NUMBER;
      hash = (53 * hash) + getSourceIp().hashCode();
    }
    if (getSourceTagsCount() > 0) {
      hash = (37 * hash) + SOURCE_TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getSourceTagsList().hashCode();
    }
    if (hasDestinationIp()) {
      hash = (37 * hash) + DESTINATION_IP_FIELD_NUMBER;
      hash = (53 * hash) + getDestinationIp().hashCode();
    }
    if (getDestinationTagsCount() > 0) {
      hash = (37 * hash) + DESTINATION_TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getDestinationTagsList().hashCode();
    }
    hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + getProtocol();
    hash = (37 * hash) + SOURCE_PORT_FIELD_NUMBER;
    hash = (53 * hash) + getSourcePort();
    hash = (37 * hash) + DESTINATION_PORT_FIELD_NUMBER;
    hash = (53 * hash) + getDestinationPort();
    hash = (37 * hash) + ICMP_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getIcmpType();
    hash = (37 * hash) + ICMP_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getIcmpCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.cloud.v1alpha1.PolicyLookupMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * PolicyLookupMatch captures all the policy lookup match conditions
   * </pre>
   *
   * Protobuf type {@code opi_api.network.cloud.v1alpha1.PolicyLookupMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.cloud.v1alpha1.PolicyLookupMatch)
      opi_api.network.cloud.v1alpha1.PolicyLookupMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_PolicyLookupMatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_PolicyLookupMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.cloud.v1alpha1.PolicyLookupMatch.class, opi_api.network.cloud.v1alpha1.PolicyLookupMatch.Builder.class);
    }

    // Construct using opi_api.network.cloud.v1alpha1.PolicyLookupMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (sourceIpBuilder_ == null) {
        sourceIp_ = null;
      } else {
        sourceIp_ = null;
        sourceIpBuilder_ = null;
      }
      sourceTags_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      if (destinationIpBuilder_ == null) {
        destinationIp_ = null;
      } else {
        destinationIp_ = null;
        destinationIpBuilder_ = null;
      }
      destinationTags_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      protocol_ = 0;

      sourcePort_ = 0;

      destinationPort_ = 0;

      icmpType_ = 0;

      icmpCode_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.cloud.v1alpha1.NetworkPolicyProto.internal_static_opi_api_network_cloud_v1alpha1_PolicyLookupMatch_descriptor;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.PolicyLookupMatch getDefaultInstanceForType() {
      return opi_api.network.cloud.v1alpha1.PolicyLookupMatch.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.PolicyLookupMatch build() {
      opi_api.network.cloud.v1alpha1.PolicyLookupMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.cloud.v1alpha1.PolicyLookupMatch buildPartial() {
      opi_api.network.cloud.v1alpha1.PolicyLookupMatch result = new opi_api.network.cloud.v1alpha1.PolicyLookupMatch(this);
      int from_bitField0_ = bitField0_;
      if (sourceIpBuilder_ == null) {
        result.sourceIp_ = sourceIp_;
      } else {
        result.sourceIp_ = sourceIpBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        sourceTags_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.sourceTags_ = sourceTags_;
      if (destinationIpBuilder_ == null) {
        result.destinationIp_ = destinationIp_;
      } else {
        result.destinationIp_ = destinationIpBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        destinationTags_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.destinationTags_ = destinationTags_;
      result.protocol_ = protocol_;
      result.sourcePort_ = sourcePort_;
      result.destinationPort_ = destinationPort_;
      result.icmpType_ = icmpType_;
      result.icmpCode_ = icmpCode_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.cloud.v1alpha1.PolicyLookupMatch) {
        return mergeFrom((opi_api.network.cloud.v1alpha1.PolicyLookupMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.cloud.v1alpha1.PolicyLookupMatch other) {
      if (other == opi_api.network.cloud.v1alpha1.PolicyLookupMatch.getDefaultInstance()) return this;
      if (other.hasSourceIp()) {
        mergeSourceIp(other.getSourceIp());
      }
      if (!other.sourceTags_.isEmpty()) {
        if (sourceTags_.isEmpty()) {
          sourceTags_ = other.sourceTags_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureSourceTagsIsMutable();
          sourceTags_.addAll(other.sourceTags_);
        }
        onChanged();
      }
      if (other.hasDestinationIp()) {
        mergeDestinationIp(other.getDestinationIp());
      }
      if (!other.destinationTags_.isEmpty()) {
        if (destinationTags_.isEmpty()) {
          destinationTags_ = other.destinationTags_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureDestinationTagsIsMutable();
          destinationTags_.addAll(other.destinationTags_);
        }
        onChanged();
      }
      if (other.getProtocol() != 0) {
        setProtocol(other.getProtocol());
      }
      if (other.getSourcePort() != 0) {
        setSourcePort(other.getSourcePort());
      }
      if (other.getDestinationPort() != 0) {
        setDestinationPort(other.getDestinationPort());
      }
      if (other.getIcmpType() != 0) {
        setIcmpType(other.getIcmpType());
      }
      if (other.getIcmpCode() != 0) {
        setIcmpCode(other.getIcmpCode());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.cloud.v1alpha1.PolicyLookupMatch parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.cloud.v1alpha1.PolicyLookupMatch) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private opi_api.network.opinetcommon.v1alpha1.IPAddress sourceIp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> sourceIpBuilder_;
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     * @return Whether the sourceIp field is set.
     */
    public boolean hasSourceIp() {
      return sourceIpBuilder_ != null || sourceIp_ != null;
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     * @return The sourceIp.
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress getSourceIp() {
      if (sourceIpBuilder_ == null) {
        return sourceIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : sourceIp_;
      } else {
        return sourceIpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    public Builder setSourceIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (sourceIpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourceIp_ = value;
        onChanged();
      } else {
        sourceIpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    public Builder setSourceIp(
        opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder builderForValue) {
      if (sourceIpBuilder_ == null) {
        sourceIp_ = builderForValue.build();
        onChanged();
      } else {
        sourceIpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    public Builder mergeSourceIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (sourceIpBuilder_ == null) {
        if (sourceIp_ != null) {
          sourceIp_ =
            opi_api.network.opinetcommon.v1alpha1.IPAddress.newBuilder(sourceIp_).mergeFrom(value).buildPartial();
        } else {
          sourceIp_ = value;
        }
        onChanged();
      } else {
        sourceIpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    public Builder clearSourceIp() {
      if (sourceIpBuilder_ == null) {
        sourceIp_ = null;
        onChanged();
      } else {
        sourceIp_ = null;
        sourceIpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder getSourceIpBuilder() {
      
      onChanged();
      return getSourceIpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getSourceIpOrBuilder() {
      if (sourceIpBuilder_ != null) {
        return sourceIpBuilder_.getMessageOrBuilder();
      } else {
        return sourceIp_ == null ?
            opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : sourceIp_;
      }
    }
    /**
     * <pre>
     * source IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress source_ip = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> 
        getSourceIpFieldBuilder() {
      if (sourceIpBuilder_ == null) {
        sourceIpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder>(
                getSourceIp(),
                getParentForChildren(),
                isClean());
        sourceIp_ = null;
      }
      return sourceIpBuilder_;
    }

    private com.google.protobuf.Internal.IntList sourceTags_ = emptyIntList();
    private void ensureSourceTagsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sourceTags_ = mutableCopy(sourceTags_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @return A list containing the sourceTags.
     */
    public java.util.List<java.lang.Integer>
        getSourceTagsList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(sourceTags_) : sourceTags_;
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @return The count of sourceTags.
     */
    public int getSourceTagsCount() {
      return sourceTags_.size();
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @param index The index of the element to return.
     * @return The sourceTags at the given index.
     */
    public int getSourceTags(int index) {
      return sourceTags_.getInt(index);
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @param index The index to set the value at.
     * @param value The sourceTags to set.
     * @return This builder for chaining.
     */
    public Builder setSourceTags(
        int index, int value) {
      ensureSourceTagsIsMutable();
      sourceTags_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @param value The sourceTags to add.
     * @return This builder for chaining.
     */
    public Builder addSourceTags(int value) {
      ensureSourceTagsIsMutable();
      sourceTags_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @param values The sourceTags to add.
     * @return This builder for chaining.
     */
    public Builder addAllSourceTags(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSourceTagsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, sourceTags_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tags corresponding to the source; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 source_tags = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceTags() {
      sourceTags_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private opi_api.network.opinetcommon.v1alpha1.IPAddress destinationIp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> destinationIpBuilder_;
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     * @return Whether the destinationIp field is set.
     */
    public boolean hasDestinationIp() {
      return destinationIpBuilder_ != null || destinationIp_ != null;
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     * @return The destinationIp.
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress getDestinationIp() {
      if (destinationIpBuilder_ == null) {
        return destinationIp_ == null ? opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : destinationIp_;
      } else {
        return destinationIpBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    public Builder setDestinationIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (destinationIpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        destinationIp_ = value;
        onChanged();
      } else {
        destinationIpBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    public Builder setDestinationIp(
        opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder builderForValue) {
      if (destinationIpBuilder_ == null) {
        destinationIp_ = builderForValue.build();
        onChanged();
      } else {
        destinationIpBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    public Builder mergeDestinationIp(opi_api.network.opinetcommon.v1alpha1.IPAddress value) {
      if (destinationIpBuilder_ == null) {
        if (destinationIp_ != null) {
          destinationIp_ =
            opi_api.network.opinetcommon.v1alpha1.IPAddress.newBuilder(destinationIp_).mergeFrom(value).buildPartial();
        } else {
          destinationIp_ = value;
        }
        onChanged();
      } else {
        destinationIpBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    public Builder clearDestinationIp() {
      if (destinationIpBuilder_ == null) {
        destinationIp_ = null;
        onChanged();
      } else {
        destinationIp_ = null;
        destinationIpBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder getDestinationIpBuilder() {
      
      onChanged();
      return getDestinationIpFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    public opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder getDestinationIpOrBuilder() {
      if (destinationIpBuilder_ != null) {
        return destinationIpBuilder_.getMessageOrBuilder();
      } else {
        return destinationIp_ == null ?
            opi_api.network.opinetcommon.v1alpha1.IPAddress.getDefaultInstance() : destinationIp_;
      }
    }
    /**
     * <pre>
     * destination IP address
     * </pre>
     *
     * <code>.opi_api.network.opinetcommon.v1alpha1.IPAddress destination_ip = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder> 
        getDestinationIpFieldBuilder() {
      if (destinationIpBuilder_ == null) {
        destinationIpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.opinetcommon.v1alpha1.IPAddress, opi_api.network.opinetcommon.v1alpha1.IPAddress.Builder, opi_api.network.opinetcommon.v1alpha1.IPAddressOrBuilder>(
                getDestinationIp(),
                getParentForChildren(),
                isClean());
        destinationIp_ = null;
      }
      return destinationIpBuilder_;
    }

    private com.google.protobuf.Internal.IntList destinationTags_ = emptyIntList();
    private void ensureDestinationTagsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        destinationTags_ = mutableCopy(destinationTags_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @return A list containing the destinationTags.
     */
    public java.util.List<java.lang.Integer>
        getDestinationTagsList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(destinationTags_) : destinationTags_;
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @return The count of destinationTags.
     */
    public int getDestinationTagsCount() {
      return destinationTags_.size();
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @param index The index of the element to return.
     * @return The destinationTags at the given index.
     */
    public int getDestinationTags(int index) {
      return destinationTags_.getInt(index);
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @param index The index to set the value at.
     * @param value The destinationTags to set.
     * @return This builder for chaining.
     */
    public Builder setDestinationTags(
        int index, int value) {
      ensureDestinationTagsIsMutable();
      destinationTags_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @param value The destinationTags to add.
     * @return This builder for chaining.
     */
    public Builder addDestinationTags(int value) {
      ensureDestinationTagsIsMutable();
      destinationTags_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @param values The destinationTags to add.
     * @return This builder for chaining.
     */
    public Builder addAllDestinationTags(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDestinationTagsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, destinationTags_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tags corresponding to the destination; an implementation may limit the maximum number of tags
     * range:1-4294967294
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: tags are 32bit values. --)
     * </pre>
     *
     * <code>repeated uint32 destination_tags = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDestinationTags() {
      destinationTags_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private int protocol_ ;
    /**
     * <pre>
     * IP protocol
     * </pre>
     *
     * <code>int32 protocol = 5;</code>
     * @return The protocol.
     */
    @java.lang.Override
    public int getProtocol() {
      return protocol_;
    }
    /**
     * <pre>
     * IP protocol
     * </pre>
     *
     * <code>int32 protocol = 5;</code>
     * @param value The protocol to set.
     * @return This builder for chaining.
     */
    public Builder setProtocol(int value) {
      
      protocol_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IP protocol
     * </pre>
     *
     * <code>int32 protocol = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearProtocol() {
      
      protocol_ = 0;
      onChanged();
      return this;
    }

    private int sourcePort_ ;
    /**
     * <pre>
     * source port, valid only for TCP and UDP
     * </pre>
     *
     * <code>int32 source_port = 6;</code>
     * @return The sourcePort.
     */
    @java.lang.Override
    public int getSourcePort() {
      return sourcePort_;
    }
    /**
     * <pre>
     * source port, valid only for TCP and UDP
     * </pre>
     *
     * <code>int32 source_port = 6;</code>
     * @param value The sourcePort to set.
     * @return This builder for chaining.
     */
    public Builder setSourcePort(int value) {
      
      sourcePort_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * source port, valid only for TCP and UDP
     * </pre>
     *
     * <code>int32 source_port = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourcePort() {
      
      sourcePort_ = 0;
      onChanged();
      return this;
    }

    private int destinationPort_ ;
    /**
     * <pre>
     * destination port, valid only for TCP and UDP
     * </pre>
     *
     * <code>int32 destination_port = 7;</code>
     * @return The destinationPort.
     */
    @java.lang.Override
    public int getDestinationPort() {
      return destinationPort_;
    }
    /**
     * <pre>
     * destination port, valid only for TCP and UDP
     * </pre>
     *
     * <code>int32 destination_port = 7;</code>
     * @param value The destinationPort to set.
     * @return This builder for chaining.
     */
    public Builder setDestinationPort(int value) {
      
      destinationPort_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * destination port, valid only for TCP and UDP
     * </pre>
     *
     * <code>int32 destination_port = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDestinationPort() {
      
      destinationPort_ = 0;
      onChanged();
      return this;
    }

    private int icmpType_ ;
    /**
     * <pre>
     * valid only for ICMPv4 and ICMPv6
     * </pre>
     *
     * <code>int32 icmp_type = 8;</code>
     * @return The icmpType.
     */
    @java.lang.Override
    public int getIcmpType() {
      return icmpType_;
    }
    /**
     * <pre>
     * valid only for ICMPv4 and ICMPv6
     * </pre>
     *
     * <code>int32 icmp_type = 8;</code>
     * @param value The icmpType to set.
     * @return This builder for chaining.
     */
    public Builder setIcmpType(int value) {
      
      icmpType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * valid only for ICMPv4 and ICMPv6
     * </pre>
     *
     * <code>int32 icmp_type = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearIcmpType() {
      
      icmpType_ = 0;
      onChanged();
      return this;
    }

    private int icmpCode_ ;
    /**
     * <pre>
     * valid only for ICMPv4 and ICMPv6
     * </pre>
     *
     * <code>int32 icmp_code = 9;</code>
     * @return The icmpCode.
     */
    @java.lang.Override
    public int getIcmpCode() {
      return icmpCode_;
    }
    /**
     * <pre>
     * valid only for ICMPv4 and ICMPv6
     * </pre>
     *
     * <code>int32 icmp_code = 9;</code>
     * @param value The icmpCode to set.
     * @return This builder for chaining.
     */
    public Builder setIcmpCode(int value) {
      
      icmpCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * valid only for ICMPv4 and ICMPv6
     * </pre>
     *
     * <code>int32 icmp_code = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearIcmpCode() {
      
      icmpCode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.cloud.v1alpha1.PolicyLookupMatch)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.PolicyLookupMatch)
  private static final opi_api.network.cloud.v1alpha1.PolicyLookupMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.cloud.v1alpha1.PolicyLookupMatch();
  }

  public static opi_api.network.cloud.v1alpha1.PolicyLookupMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PolicyLookupMatch>
      PARSER = new com.google.protobuf.AbstractParser<PolicyLookupMatch>() {
    @java.lang.Override
    public PolicyLookupMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PolicyLookupMatch(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PolicyLookupMatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PolicyLookupMatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.cloud.v1alpha1.PolicyLookupMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

