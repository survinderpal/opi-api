// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: frontend_virtio_scsi.proto
// Original file comments:
// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.
//
#ifndef GRPC_frontend_5fvirtio_5fscsi_2eproto__INCLUDED
#define GRPC_frontend_5fvirtio_5fscsi_2eproto__INCLUDED

#include "frontend_virtio_scsi.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace opi_api {
namespace storage {
namespace v1 {

// Front End (host-facing) APIs. Mostly used for Virtio-scsi emulation and host presentation as alternative to Virtio-blk.
class FrontendVirtioScsiService final {
 public:
  static constexpr char const* service_full_name() {
    return "opi_api.storage.v1.FrontendVirtioScsiService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::opi_api::storage::v1::VirtioScsiTarget* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>> AsyncCreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>>(AsyncCreateVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>> PrepareAsyncCreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>>(PrepareAsyncCreateVirtioScsiTargetRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteVirtioScsiTargetRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::opi_api::storage::v1::VirtioScsiTarget* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>> AsyncUpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>>(AsyncUpdateVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>> PrepareAsyncUpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>>(PrepareAsyncUpdateVirtioScsiTargetRaw(context, request, cq));
    }
    virtual ::grpc::Status ListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>> AsyncListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>>(AsyncListVirtioScsiTargetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>> PrepareAsyncListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>>(PrepareAsyncListVirtioScsiTargetsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::opi_api::storage::v1::VirtioScsiTarget* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>> AsyncGetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>>(AsyncGetVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>> PrepareAsyncGetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>>(PrepareAsyncGetVirtioScsiTargetRaw(context, request, cq));
    }
    virtual ::grpc::Status VirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>> AsyncVirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>>(AsyncVirtioScsiTargetStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>> PrepareAsyncVirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>>(PrepareAsyncVirtioScsiTargetStatsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::opi_api::storage::v1::VirtioScsiController* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>> AsyncCreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>>(AsyncCreateVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>> PrepareAsyncCreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>>(PrepareAsyncCreateVirtioScsiControllerRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteVirtioScsiControllerRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::opi_api::storage::v1::VirtioScsiController* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>> AsyncUpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>>(AsyncUpdateVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>> PrepareAsyncUpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>>(PrepareAsyncUpdateVirtioScsiControllerRaw(context, request, cq));
    }
    virtual ::grpc::Status ListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>> AsyncListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>>(AsyncListVirtioScsiControllersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>> PrepareAsyncListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>>(PrepareAsyncListVirtioScsiControllersRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::opi_api::storage::v1::VirtioScsiController* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>> AsyncGetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>>(AsyncGetVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>> PrepareAsyncGetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>>(PrepareAsyncGetVirtioScsiControllerRaw(context, request, cq));
    }
    virtual ::grpc::Status VirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>> AsyncVirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>>(AsyncVirtioScsiControllerStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>> PrepareAsyncVirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>>(PrepareAsyncVirtioScsiControllerStatsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::opi_api::storage::v1::VirtioScsiLun* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>> AsyncCreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>>(AsyncCreateVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>> PrepareAsyncCreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>>(PrepareAsyncCreateVirtioScsiLunRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteVirtioScsiLunRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::opi_api::storage::v1::VirtioScsiLun* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>> AsyncUpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>>(AsyncUpdateVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>> PrepareAsyncUpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>>(PrepareAsyncUpdateVirtioScsiLunRaw(context, request, cq));
    }
    virtual ::grpc::Status ListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>> AsyncListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>>(AsyncListVirtioScsiLunsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>> PrepareAsyncListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>>(PrepareAsyncListVirtioScsiLunsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::opi_api::storage::v1::VirtioScsiLun* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>> AsyncGetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>>(AsyncGetVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>> PrepareAsyncGetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>>(PrepareAsyncGetVirtioScsiLunRaw(context, request, cq));
    }
    virtual ::grpc::Status VirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>> AsyncVirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>>(AsyncVirtioScsiLunStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>> PrepareAsyncVirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>>(PrepareAsyncVirtioScsiLunStatsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void VirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void VirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void VirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>* AsyncCreateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>* PrepareAsyncCreateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>* AsyncUpdateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>* PrepareAsyncUpdateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* AsyncListVirtioScsiTargetsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* PrepareAsyncListVirtioScsiTargetsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>* AsyncGetVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTarget>* PrepareAsyncGetVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* AsyncVirtioScsiTargetStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* PrepareAsyncVirtioScsiTargetStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>* AsyncCreateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>* PrepareAsyncCreateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>* AsyncUpdateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>* PrepareAsyncUpdateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* AsyncListVirtioScsiControllersRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* PrepareAsyncListVirtioScsiControllersRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>* AsyncGetVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiController>* PrepareAsyncGetVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* AsyncVirtioScsiControllerStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* PrepareAsyncVirtioScsiControllerStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>* AsyncCreateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>* PrepareAsyncCreateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>* AsyncUpdateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>* PrepareAsyncUpdateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* AsyncListVirtioScsiLunsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* PrepareAsyncListVirtioScsiLunsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>* AsyncGetVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLun>* PrepareAsyncGetVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* AsyncVirtioScsiLunStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* PrepareAsyncVirtioScsiLunStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::opi_api::storage::v1::VirtioScsiTarget* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>> AsyncCreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>>(AsyncCreateVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>> PrepareAsyncCreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>>(PrepareAsyncCreateVirtioScsiTargetRaw(context, request, cq));
    }
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteVirtioScsiTargetRaw(context, request, cq));
    }
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::opi_api::storage::v1::VirtioScsiTarget* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>> AsyncUpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>>(AsyncUpdateVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>> PrepareAsyncUpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>>(PrepareAsyncUpdateVirtioScsiTargetRaw(context, request, cq));
    }
    ::grpc::Status ListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>> AsyncListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>>(AsyncListVirtioScsiTargetsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>> PrepareAsyncListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>>(PrepareAsyncListVirtioScsiTargetsRaw(context, request, cq));
    }
    ::grpc::Status GetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::opi_api::storage::v1::VirtioScsiTarget* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>> AsyncGetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>>(AsyncGetVirtioScsiTargetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>> PrepareAsyncGetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>>(PrepareAsyncGetVirtioScsiTargetRaw(context, request, cq));
    }
    ::grpc::Status VirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>> AsyncVirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>>(AsyncVirtioScsiTargetStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>> PrepareAsyncVirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>>(PrepareAsyncVirtioScsiTargetStatsRaw(context, request, cq));
    }
    ::grpc::Status CreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::opi_api::storage::v1::VirtioScsiController* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>> AsyncCreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>>(AsyncCreateVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>> PrepareAsyncCreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>>(PrepareAsyncCreateVirtioScsiControllerRaw(context, request, cq));
    }
    ::grpc::Status DeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteVirtioScsiControllerRaw(context, request, cq));
    }
    ::grpc::Status UpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::opi_api::storage::v1::VirtioScsiController* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>> AsyncUpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>>(AsyncUpdateVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>> PrepareAsyncUpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>>(PrepareAsyncUpdateVirtioScsiControllerRaw(context, request, cq));
    }
    ::grpc::Status ListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>> AsyncListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>>(AsyncListVirtioScsiControllersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>> PrepareAsyncListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>>(PrepareAsyncListVirtioScsiControllersRaw(context, request, cq));
    }
    ::grpc::Status GetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::opi_api::storage::v1::VirtioScsiController* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>> AsyncGetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>>(AsyncGetVirtioScsiControllerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>> PrepareAsyncGetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>>(PrepareAsyncGetVirtioScsiControllerRaw(context, request, cq));
    }
    ::grpc::Status VirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>> AsyncVirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>>(AsyncVirtioScsiControllerStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>> PrepareAsyncVirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>>(PrepareAsyncVirtioScsiControllerStatsRaw(context, request, cq));
    }
    ::grpc::Status CreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::opi_api::storage::v1::VirtioScsiLun* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>> AsyncCreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>>(AsyncCreateVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>> PrepareAsyncCreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>>(PrepareAsyncCreateVirtioScsiLunRaw(context, request, cq));
    }
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteVirtioScsiLunRaw(context, request, cq));
    }
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::opi_api::storage::v1::VirtioScsiLun* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>> AsyncUpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>>(AsyncUpdateVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>> PrepareAsyncUpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>>(PrepareAsyncUpdateVirtioScsiLunRaw(context, request, cq));
    }
    ::grpc::Status ListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>> AsyncListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>>(AsyncListVirtioScsiLunsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>> PrepareAsyncListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>>(PrepareAsyncListVirtioScsiLunsRaw(context, request, cq));
    }
    ::grpc::Status GetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::opi_api::storage::v1::VirtioScsiLun* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>> AsyncGetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>>(AsyncGetVirtioScsiLunRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>> PrepareAsyncGetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>>(PrepareAsyncGetVirtioScsiLunRaw(context, request, cq));
    }
    ::grpc::Status VirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>> AsyncVirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>>(AsyncVirtioScsiLunStatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>> PrepareAsyncVirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>>(PrepareAsyncVirtioScsiLunStatsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, std::function<void(::grpc::Status)>) override;
      void CreateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, std::function<void(::grpc::Status)>) override;
      void UpdateVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListVirtioScsiTargets(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, std::function<void(::grpc::Status)>) override;
      void GetVirtioScsiTarget(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response, ::grpc::ClientUnaryReactor* reactor) override;
      void VirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response, std::function<void(::grpc::Status)>) override;
      void VirtioScsiTargetStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, std::function<void(::grpc::Status)>) override;
      void CreateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, std::function<void(::grpc::Status)>) override;
      void UpdateVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response, std::function<void(::grpc::Status)>) override;
      void ListVirtioScsiControllers(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, std::function<void(::grpc::Status)>) override;
      void GetVirtioScsiController(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response, ::grpc::ClientUnaryReactor* reactor) override;
      void VirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response, std::function<void(::grpc::Status)>) override;
      void VirtioScsiControllerStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, std::function<void(::grpc::Status)>) override;
      void CreateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, std::function<void(::grpc::Status)>) override;
      void UpdateVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListVirtioScsiLuns(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, std::function<void(::grpc::Status)>) override;
      void GetVirtioScsiLun(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response, ::grpc::ClientUnaryReactor* reactor) override;
      void VirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response, std::function<void(::grpc::Status)>) override;
      void VirtioScsiLunStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>* AsyncCreateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>* PrepareAsyncCreateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>* AsyncUpdateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>* PrepareAsyncUpdateVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* AsyncListVirtioScsiTargetsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* PrepareAsyncListVirtioScsiTargetsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>* AsyncGetVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTarget>* PrepareAsyncGetVirtioScsiTargetRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* AsyncVirtioScsiTargetStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* PrepareAsyncVirtioScsiTargetStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>* AsyncCreateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>* PrepareAsyncCreateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>* AsyncUpdateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>* PrepareAsyncUpdateVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* AsyncListVirtioScsiControllersRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* PrepareAsyncListVirtioScsiControllersRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>* AsyncGetVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiController>* PrepareAsyncGetVirtioScsiControllerRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* AsyncVirtioScsiControllerStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* PrepareAsyncVirtioScsiControllerStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>* AsyncCreateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>* PrepareAsyncCreateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>* AsyncUpdateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>* PrepareAsyncUpdateVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* AsyncListVirtioScsiLunsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* PrepareAsyncListVirtioScsiLunsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>* AsyncGetVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLun>* PrepareAsyncGetVirtioScsiLunRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* AsyncVirtioScsiLunStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* PrepareAsyncVirtioScsiLunStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateVirtioScsiTarget_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteVirtioScsiTarget_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateVirtioScsiTarget_;
    const ::grpc::internal::RpcMethod rpcmethod_ListVirtioScsiTargets_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVirtioScsiTarget_;
    const ::grpc::internal::RpcMethod rpcmethod_VirtioScsiTargetStats_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateVirtioScsiController_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteVirtioScsiController_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateVirtioScsiController_;
    const ::grpc::internal::RpcMethod rpcmethod_ListVirtioScsiControllers_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVirtioScsiController_;
    const ::grpc::internal::RpcMethod rpcmethod_VirtioScsiControllerStats_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateVirtioScsiLun_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteVirtioScsiLun_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateVirtioScsiLun_;
    const ::grpc::internal::RpcMethod rpcmethod_ListVirtioScsiLuns_;
    const ::grpc::internal::RpcMethod rpcmethod_GetVirtioScsiLun_;
    const ::grpc::internal::RpcMethod rpcmethod_VirtioScsiLunStats_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response);
    virtual ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response);
    virtual ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response);
    virtual ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response);
    virtual ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response);
    virtual ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response);
    virtual ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response);
    virtual ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response);
    virtual ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response);
    virtual ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response);
    virtual ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response);
    virtual ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response);
    virtual ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response);
    virtual ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response);
    virtual ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVirtioScsiTarget(::grpc::ServerContext* context, ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiTarget>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteVirtioScsiTarget() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVirtioScsiTarget(::grpc::ServerContext* context, ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVirtioScsiTarget(::grpc::ServerContext* context, ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiTarget>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListVirtioScsiTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListVirtioScsiTargets() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListVirtioScsiTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListVirtioScsiTargets(::grpc::ServerContext* context, ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetVirtioScsiTarget() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtioScsiTarget(::grpc::ServerContext* context, ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiTarget>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VirtioScsiTargetStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VirtioScsiTargetStats() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_VirtioScsiTargetStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVirtioScsiTargetStats(::grpc::ServerContext* context, ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateVirtioScsiController() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVirtioScsiController(::grpc::ServerContext* context, ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiController>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteVirtioScsiController() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_DeleteVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVirtioScsiController(::grpc::ServerContext* context, ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateVirtioScsiController() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVirtioScsiController(::grpc::ServerContext* context, ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiController>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListVirtioScsiControllers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListVirtioScsiControllers() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListVirtioScsiControllers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListVirtioScsiControllers(::grpc::ServerContext* context, ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetVirtioScsiController() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtioScsiController(::grpc::ServerContext* context, ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiController>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VirtioScsiControllerStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VirtioScsiControllerStats() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_VirtioScsiControllerStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVirtioScsiControllerStats(::grpc::ServerContext* context, ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateVirtioScsiLun() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_CreateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVirtioScsiLun(::grpc::ServerContext* context, ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiLun>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteVirtioScsiLun() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_DeleteVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVirtioScsiLun(::grpc::ServerContext* context, ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateVirtioScsiLun() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_UpdateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVirtioScsiLun(::grpc::ServerContext* context, ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiLun>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListVirtioScsiLuns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListVirtioScsiLuns() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_ListVirtioScsiLuns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListVirtioScsiLuns(::grpc::ServerContext* context, ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetVirtioScsiLun() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtioScsiLun(::grpc::ServerContext* context, ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiLun>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VirtioScsiLunStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VirtioScsiLunStats() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_VirtioScsiLunStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVirtioScsiLunStats(::grpc::ServerContext* context, ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::grpc::ServerAsyncResponseWriter< ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateVirtioScsiTarget<WithAsyncMethod_DeleteVirtioScsiTarget<WithAsyncMethod_UpdateVirtioScsiTarget<WithAsyncMethod_ListVirtioScsiTargets<WithAsyncMethod_GetVirtioScsiTarget<WithAsyncMethod_VirtioScsiTargetStats<WithAsyncMethod_CreateVirtioScsiController<WithAsyncMethod_DeleteVirtioScsiController<WithAsyncMethod_UpdateVirtioScsiController<WithAsyncMethod_ListVirtioScsiControllers<WithAsyncMethod_GetVirtioScsiController<WithAsyncMethod_VirtioScsiControllerStats<WithAsyncMethod_CreateVirtioScsiLun<WithAsyncMethod_DeleteVirtioScsiLun<WithAsyncMethod_UpdateVirtioScsiLun<WithAsyncMethod_ListVirtioScsiLuns<WithAsyncMethod_GetVirtioScsiLun<WithAsyncMethod_VirtioScsiLunStats<Service > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response) { return this->CreateVirtioScsiTarget(context, request, response); }));}
    void SetMessageAllocatorFor_CreateVirtioScsiTarget(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::CreateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteVirtioScsiTarget() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* request, ::google::protobuf::Empty* response) { return this->DeleteVirtioScsiTarget(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteVirtioScsiTarget(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response) { return this->UpdateVirtioScsiTarget(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateVirtioScsiTarget(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListVirtioScsiTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListVirtioScsiTargets() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListVirtioScsiTargetsRequest, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* request, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* response) { return this->ListVirtioScsiTargets(context, request, response); }));}
    void SetMessageAllocatorFor_ListVirtioScsiTargets(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::ListVirtioScsiTargetsRequest, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListVirtioScsiTargetsRequest, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListVirtioScsiTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListVirtioScsiTargets(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetVirtioScsiTarget() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* request, ::opi_api::storage::v1::VirtioScsiTarget* response) { return this->GetVirtioScsiTarget(context, request, response); }));}
    void SetMessageAllocatorFor_GetVirtioScsiTarget(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::GetVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_VirtioScsiTargetStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_VirtioScsiTargetStats() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::VirtioScsiTargetStatsRequest, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* request, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* response) { return this->VirtioScsiTargetStats(context, request, response); }));}
    void SetMessageAllocatorFor_VirtioScsiTargetStats(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::VirtioScsiTargetStatsRequest, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::VirtioScsiTargetStatsRequest, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_VirtioScsiTargetStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VirtioScsiTargetStats(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateVirtioScsiController() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response) { return this->CreateVirtioScsiController(context, request, response); }));}
    void SetMessageAllocatorFor_CreateVirtioScsiController(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::CreateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteVirtioScsiController() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* request, ::google::protobuf::Empty* response) { return this->DeleteVirtioScsiController(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteVirtioScsiController(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateVirtioScsiController() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response) { return this->UpdateVirtioScsiController(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateVirtioScsiController(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListVirtioScsiControllers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListVirtioScsiControllers() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListVirtioScsiControllersRequest, ::opi_api::storage::v1::ListVirtioScsiControllersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* request, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* response) { return this->ListVirtioScsiControllers(context, request, response); }));}
    void SetMessageAllocatorFor_ListVirtioScsiControllers(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::ListVirtioScsiControllersRequest, ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListVirtioScsiControllersRequest, ::opi_api::storage::v1::ListVirtioScsiControllersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListVirtioScsiControllers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListVirtioScsiControllers(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetVirtioScsiController() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* request, ::opi_api::storage::v1::VirtioScsiController* response) { return this->GetVirtioScsiController(context, request, response); }));}
    void SetMessageAllocatorFor_GetVirtioScsiController(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::GetVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_VirtioScsiControllerStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_VirtioScsiControllerStats() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::VirtioScsiControllerStatsRequest, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* request, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* response) { return this->VirtioScsiControllerStats(context, request, response); }));}
    void SetMessageAllocatorFor_VirtioScsiControllerStats(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::VirtioScsiControllerStatsRequest, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::VirtioScsiControllerStatsRequest, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_VirtioScsiControllerStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VirtioScsiControllerStats(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateVirtioScsiLun() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response) { return this->CreateVirtioScsiLun(context, request, response); }));}
    void SetMessageAllocatorFor_CreateVirtioScsiLun(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::CreateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::CreateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteVirtioScsiLun() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteVirtioScsiLunRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* request, ::google::protobuf::Empty* response) { return this->DeleteVirtioScsiLun(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteVirtioScsiLun(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::DeleteVirtioScsiLunRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::DeleteVirtioScsiLunRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateVirtioScsiLun() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response) { return this->UpdateVirtioScsiLun(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateVirtioScsiLun(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::UpdateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::UpdateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListVirtioScsiLuns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListVirtioScsiLuns() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListVirtioScsiLunsRequest, ::opi_api::storage::v1::ListVirtioScsiLunsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* request, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* response) { return this->ListVirtioScsiLuns(context, request, response); }));}
    void SetMessageAllocatorFor_ListVirtioScsiLuns(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::ListVirtioScsiLunsRequest, ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::ListVirtioScsiLunsRequest, ::opi_api::storage::v1::ListVirtioScsiLunsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListVirtioScsiLuns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListVirtioScsiLuns(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetVirtioScsiLun() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* request, ::opi_api::storage::v1::VirtioScsiLun* response) { return this->GetVirtioScsiLun(context, request, response); }));}
    void SetMessageAllocatorFor_GetVirtioScsiLun(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::GetVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::GetVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_VirtioScsiLunStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_VirtioScsiLunStats() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::VirtioScsiLunStatsRequest, ::opi_api::storage::v1::VirtioScsiLunStatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* request, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* response) { return this->VirtioScsiLunStats(context, request, response); }));}
    void SetMessageAllocatorFor_VirtioScsiLunStats(
        ::grpc::MessageAllocator< ::opi_api::storage::v1::VirtioScsiLunStatsRequest, ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::opi_api::storage::v1::VirtioScsiLunStatsRequest, ::opi_api::storage::v1::VirtioScsiLunStatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_VirtioScsiLunStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VirtioScsiLunStats(
      ::grpc::CallbackServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateVirtioScsiTarget<WithCallbackMethod_DeleteVirtioScsiTarget<WithCallbackMethod_UpdateVirtioScsiTarget<WithCallbackMethod_ListVirtioScsiTargets<WithCallbackMethod_GetVirtioScsiTarget<WithCallbackMethod_VirtioScsiTargetStats<WithCallbackMethod_CreateVirtioScsiController<WithCallbackMethod_DeleteVirtioScsiController<WithCallbackMethod_UpdateVirtioScsiController<WithCallbackMethod_ListVirtioScsiControllers<WithCallbackMethod_GetVirtioScsiController<WithCallbackMethod_VirtioScsiControllerStats<WithCallbackMethod_CreateVirtioScsiLun<WithCallbackMethod_DeleteVirtioScsiLun<WithCallbackMethod_UpdateVirtioScsiLun<WithCallbackMethod_ListVirtioScsiLuns<WithCallbackMethod_GetVirtioScsiLun<WithCallbackMethod_VirtioScsiLunStats<Service > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteVirtioScsiTarget() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListVirtioScsiTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListVirtioScsiTargets() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListVirtioScsiTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetVirtioScsiTarget() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VirtioScsiTargetStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VirtioScsiTargetStats() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_VirtioScsiTargetStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateVirtioScsiController() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteVirtioScsiController() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_DeleteVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateVirtioScsiController() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListVirtioScsiControllers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListVirtioScsiControllers() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListVirtioScsiControllers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetVirtioScsiController() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VirtioScsiControllerStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VirtioScsiControllerStats() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_VirtioScsiControllerStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateVirtioScsiLun() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_CreateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteVirtioScsiLun() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_DeleteVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateVirtioScsiLun() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_UpdateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListVirtioScsiLuns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListVirtioScsiLuns() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_ListVirtioScsiLuns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetVirtioScsiLun() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VirtioScsiLunStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VirtioScsiLunStats() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_VirtioScsiLunStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListVirtioScsiTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListVirtioScsiTargets() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListVirtioScsiTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListVirtioScsiTargets(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VirtioScsiTargetStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VirtioScsiTargetStats() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_VirtioScsiTargetStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVirtioScsiTargetStats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateVirtioScsiController() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVirtioScsiController(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteVirtioScsiController() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_DeleteVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVirtioScsiController(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateVirtioScsiController() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UpdateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVirtioScsiController(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListVirtioScsiControllers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListVirtioScsiControllers() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListVirtioScsiControllers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListVirtioScsiControllers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetVirtioScsiController() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtioScsiController(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VirtioScsiControllerStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VirtioScsiControllerStats() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_VirtioScsiControllerStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVirtioScsiControllerStats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateVirtioScsiLun() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_CreateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteVirtioScsiLun() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_DeleteVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateVirtioScsiLun() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_UpdateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListVirtioScsiLuns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListVirtioScsiLuns() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_ListVirtioScsiLuns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListVirtioScsiLuns(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetVirtioScsiLun() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VirtioScsiLunStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VirtioScsiLunStats() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_VirtioScsiLunStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVirtioScsiLunStats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateVirtioScsiTarget(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteVirtioScsiTarget(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateVirtioScsiTarget(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListVirtioScsiTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListVirtioScsiTargets() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListVirtioScsiTargets(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListVirtioScsiTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListVirtioScsiTargets(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetVirtioScsiTarget() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetVirtioScsiTarget(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtioScsiTarget(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_VirtioScsiTargetStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_VirtioScsiTargetStats() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VirtioScsiTargetStats(context, request, response); }));
    }
    ~WithRawCallbackMethod_VirtioScsiTargetStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VirtioScsiTargetStats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateVirtioScsiController() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateVirtioScsiController(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteVirtioScsiController() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteVirtioScsiController(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateVirtioScsiController() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateVirtioScsiController(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListVirtioScsiControllers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListVirtioScsiControllers() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListVirtioScsiControllers(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListVirtioScsiControllers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListVirtioScsiControllers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetVirtioScsiController() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetVirtioScsiController(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtioScsiController(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_VirtioScsiControllerStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_VirtioScsiControllerStats() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VirtioScsiControllerStats(context, request, response); }));
    }
    ~WithRawCallbackMethod_VirtioScsiControllerStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VirtioScsiControllerStats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateVirtioScsiLun() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateVirtioScsiLun(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteVirtioScsiLun() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteVirtioScsiLun(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateVirtioScsiLun() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateVirtioScsiLun(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListVirtioScsiLuns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListVirtioScsiLuns() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListVirtioScsiLuns(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListVirtioScsiLuns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListVirtioScsiLuns(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetVirtioScsiLun() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetVirtioScsiLun(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetVirtioScsiLun(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_VirtioScsiLunStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_VirtioScsiLunStats() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VirtioScsiLunStats(context, request, response); }));
    }
    ~WithRawCallbackMethod_VirtioScsiLunStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VirtioScsiLunStats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::CreateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::CreateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>* streamer) {
                       return this->StreamedCreateVirtioScsiTarget(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::CreateVirtioScsiTargetRequest,::opi_api::storage::v1::VirtioScsiTarget>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteVirtioScsiTarget() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteVirtioScsiTarget(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::DeleteVirtioScsiTargetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateVirtioScsiTarget() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>* streamer) {
                       return this->StreamedUpdateVirtioScsiTarget(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::UpdateVirtioScsiTargetRequest,::opi_api::storage::v1::VirtioScsiTarget>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListVirtioScsiTargets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListVirtioScsiTargets() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::ListVirtioScsiTargetsRequest, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::ListVirtioScsiTargetsRequest, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* streamer) {
                       return this->StreamedListVirtioScsiTargets(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListVirtioScsiTargets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListVirtioScsiTargets(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiTargetsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiTargetsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListVirtioScsiTargets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::ListVirtioScsiTargetsRequest,::opi_api::storage::v1::ListVirtioScsiTargetsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVirtioScsiTarget : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetVirtioScsiTarget() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::GetVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::GetVirtioScsiTargetRequest, ::opi_api::storage::v1::VirtioScsiTarget>* streamer) {
                       return this->StreamedGetVirtioScsiTarget(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetVirtioScsiTarget() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVirtioScsiTarget(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiTargetRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTarget* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVirtioScsiTarget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::GetVirtioScsiTargetRequest,::opi_api::storage::v1::VirtioScsiTarget>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VirtioScsiTargetStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VirtioScsiTargetStats() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::VirtioScsiTargetStatsRequest, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::VirtioScsiTargetStatsRequest, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* streamer) {
                       return this->StreamedVirtioScsiTargetStats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VirtioScsiTargetStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VirtioScsiTargetStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiTargetStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiTargetStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVirtioScsiTargetStats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::VirtioScsiTargetStatsRequest,::opi_api::storage::v1::VirtioScsiTargetStatsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateVirtioScsiController() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::CreateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::CreateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>* streamer) {
                       return this->StreamedCreateVirtioScsiController(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateVirtioScsiController(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::CreateVirtioScsiControllerRequest,::opi_api::storage::v1::VirtioScsiController>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteVirtioScsiController() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteVirtioScsiController(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteVirtioScsiController(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::DeleteVirtioScsiControllerRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateVirtioScsiController() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>* streamer) {
                       return this->StreamedUpdateVirtioScsiController(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateVirtioScsiController(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::UpdateVirtioScsiControllerRequest,::opi_api::storage::v1::VirtioScsiController>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListVirtioScsiControllers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListVirtioScsiControllers() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::ListVirtioScsiControllersRequest, ::opi_api::storage::v1::ListVirtioScsiControllersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::ListVirtioScsiControllersRequest, ::opi_api::storage::v1::ListVirtioScsiControllersResponse>* streamer) {
                       return this->StreamedListVirtioScsiControllers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListVirtioScsiControllers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListVirtioScsiControllers(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiControllersRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiControllersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListVirtioScsiControllers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::ListVirtioScsiControllersRequest,::opi_api::storage::v1::ListVirtioScsiControllersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVirtioScsiController : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetVirtioScsiController() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::GetVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::GetVirtioScsiControllerRequest, ::opi_api::storage::v1::VirtioScsiController>* streamer) {
                       return this->StreamedGetVirtioScsiController(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetVirtioScsiController() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVirtioScsiController(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiControllerRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiController* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVirtioScsiController(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::GetVirtioScsiControllerRequest,::opi_api::storage::v1::VirtioScsiController>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VirtioScsiControllerStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VirtioScsiControllerStats() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::VirtioScsiControllerStatsRequest, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::VirtioScsiControllerStatsRequest, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* streamer) {
                       return this->StreamedVirtioScsiControllerStats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VirtioScsiControllerStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VirtioScsiControllerStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiControllerStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiControllerStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVirtioScsiControllerStats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::VirtioScsiControllerStatsRequest,::opi_api::storage::v1::VirtioScsiControllerStatsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateVirtioScsiLun() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::CreateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::CreateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>* streamer) {
                       return this->StreamedCreateVirtioScsiLun(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::CreateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::CreateVirtioScsiLunRequest,::opi_api::storage::v1::VirtioScsiLun>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteVirtioScsiLun() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::DeleteVirtioScsiLunRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::DeleteVirtioScsiLunRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteVirtioScsiLun(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::DeleteVirtioScsiLunRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::DeleteVirtioScsiLunRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateVirtioScsiLun() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::UpdateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::UpdateVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>* streamer) {
                       return this->StreamedUpdateVirtioScsiLun(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::UpdateVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::UpdateVirtioScsiLunRequest,::opi_api::storage::v1::VirtioScsiLun>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListVirtioScsiLuns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListVirtioScsiLuns() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::ListVirtioScsiLunsRequest, ::opi_api::storage::v1::ListVirtioScsiLunsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::ListVirtioScsiLunsRequest, ::opi_api::storage::v1::ListVirtioScsiLunsResponse>* streamer) {
                       return this->StreamedListVirtioScsiLuns(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListVirtioScsiLuns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListVirtioScsiLuns(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::ListVirtioScsiLunsRequest* /*request*/, ::opi_api::storage::v1::ListVirtioScsiLunsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListVirtioScsiLuns(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::ListVirtioScsiLunsRequest,::opi_api::storage::v1::ListVirtioScsiLunsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVirtioScsiLun : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetVirtioScsiLun() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::GetVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::GetVirtioScsiLunRequest, ::opi_api::storage::v1::VirtioScsiLun>* streamer) {
                       return this->StreamedGetVirtioScsiLun(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetVirtioScsiLun() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVirtioScsiLun(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::GetVirtioScsiLunRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLun* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVirtioScsiLun(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::GetVirtioScsiLunRequest,::opi_api::storage::v1::VirtioScsiLun>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VirtioScsiLunStats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VirtioScsiLunStats() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::opi_api::storage::v1::VirtioScsiLunStatsRequest, ::opi_api::storage::v1::VirtioScsiLunStatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::opi_api::storage::v1::VirtioScsiLunStatsRequest, ::opi_api::storage::v1::VirtioScsiLunStatsResponse>* streamer) {
                       return this->StreamedVirtioScsiLunStats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VirtioScsiLunStats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VirtioScsiLunStats(::grpc::ServerContext* /*context*/, const ::opi_api::storage::v1::VirtioScsiLunStatsRequest* /*request*/, ::opi_api::storage::v1::VirtioScsiLunStatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVirtioScsiLunStats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::opi_api::storage::v1::VirtioScsiLunStatsRequest,::opi_api::storage::v1::VirtioScsiLunStatsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateVirtioScsiTarget<WithStreamedUnaryMethod_DeleteVirtioScsiTarget<WithStreamedUnaryMethod_UpdateVirtioScsiTarget<WithStreamedUnaryMethod_ListVirtioScsiTargets<WithStreamedUnaryMethod_GetVirtioScsiTarget<WithStreamedUnaryMethod_VirtioScsiTargetStats<WithStreamedUnaryMethod_CreateVirtioScsiController<WithStreamedUnaryMethod_DeleteVirtioScsiController<WithStreamedUnaryMethod_UpdateVirtioScsiController<WithStreamedUnaryMethod_ListVirtioScsiControllers<WithStreamedUnaryMethod_GetVirtioScsiController<WithStreamedUnaryMethod_VirtioScsiControllerStats<WithStreamedUnaryMethod_CreateVirtioScsiLun<WithStreamedUnaryMethod_DeleteVirtioScsiLun<WithStreamedUnaryMethod_UpdateVirtioScsiLun<WithStreamedUnaryMethod_ListVirtioScsiLuns<WithStreamedUnaryMethod_GetVirtioScsiLun<WithStreamedUnaryMethod_VirtioScsiLunStats<Service > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateVirtioScsiTarget<WithStreamedUnaryMethod_DeleteVirtioScsiTarget<WithStreamedUnaryMethod_UpdateVirtioScsiTarget<WithStreamedUnaryMethod_ListVirtioScsiTargets<WithStreamedUnaryMethod_GetVirtioScsiTarget<WithStreamedUnaryMethod_VirtioScsiTargetStats<WithStreamedUnaryMethod_CreateVirtioScsiController<WithStreamedUnaryMethod_DeleteVirtioScsiController<WithStreamedUnaryMethod_UpdateVirtioScsiController<WithStreamedUnaryMethod_ListVirtioScsiControllers<WithStreamedUnaryMethod_GetVirtioScsiController<WithStreamedUnaryMethod_VirtioScsiControllerStats<WithStreamedUnaryMethod_CreateVirtioScsiLun<WithStreamedUnaryMethod_DeleteVirtioScsiLun<WithStreamedUnaryMethod_UpdateVirtioScsiLun<WithStreamedUnaryMethod_ListVirtioScsiLuns<WithStreamedUnaryMethod_GetVirtioScsiLun<WithStreamedUnaryMethod_VirtioScsiLunStats<Service > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace storage
}  // namespace opi_api


#endif  // GRPC_frontend_5fvirtio_5fscsi_2eproto__INCLUDED
