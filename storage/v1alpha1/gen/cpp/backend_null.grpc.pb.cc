// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: backend_null.proto

#include "backend_null.pb.h"
#include "backend_null.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace opi_api {
namespace storage {
namespace v1 {

static const char* NullDebugService_method_names[] = {
  "/opi_api.storage.v1.NullDebugService/CreateNullDebug",
  "/opi_api.storage.v1.NullDebugService/DeleteNullDebug",
  "/opi_api.storage.v1.NullDebugService/UpdateNullDebug",
  "/opi_api.storage.v1.NullDebugService/ListNullDebugs",
  "/opi_api.storage.v1.NullDebugService/GetNullDebug",
  "/opi_api.storage.v1.NullDebugService/NullDebugStats",
};

std::unique_ptr< NullDebugService::Stub> NullDebugService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< NullDebugService::Stub> stub(new NullDebugService::Stub(channel, options));
  return stub;
}

NullDebugService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_CreateNullDebug_(NullDebugService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNullDebug_(NullDebugService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateNullDebug_(NullDebugService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNullDebugs_(NullDebugService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNullDebug_(NullDebugService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_NullDebugStats_(NullDebugService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status NullDebugService::Stub::CreateNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullDebugRequest& request, ::opi_api::storage::v1::NullDebug* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::CreateNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateNullDebug_, context, request, response);
}

void NullDebugService::Stub::async::CreateNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::CreateNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateNullDebug_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::CreateNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateNullDebug_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::PrepareAsyncCreateNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebug, ::opi_api::storage::v1::CreateNullDebugRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateNullDebug_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::AsyncCreateNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::CreateNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateNullDebugRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::DeleteNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullDebugRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::DeleteNullDebugRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteNullDebug_, context, request, response);
}

void NullDebugService::Stub::async::DeleteNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullDebugRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::DeleteNullDebugRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNullDebug_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::DeleteNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullDebugRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNullDebug_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* NullDebugService::Stub::PrepareAsyncDeleteNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::opi_api::storage::v1::DeleteNullDebugRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteNullDebug_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* NullDebugService::Stub::AsyncDeleteNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::DeleteNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteNullDebugRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::UpdateNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullDebugRequest& request, ::opi_api::storage::v1::NullDebug* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::UpdateNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateNullDebug_, context, request, response);
}

void NullDebugService::Stub::async::UpdateNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::UpdateNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNullDebug_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::UpdateNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNullDebug_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::PrepareAsyncUpdateNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebug, ::opi_api::storage::v1::UpdateNullDebugRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateNullDebug_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::AsyncUpdateNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::UpdateNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateNullDebugRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::ListNullDebugs(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullDebugsRequest& request, ::opi_api::storage::v1::ListNullDebugsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::ListNullDebugsRequest, ::opi_api::storage::v1::ListNullDebugsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListNullDebugs_, context, request, response);
}

void NullDebugService::Stub::async::ListNullDebugs(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullDebugsRequest* request, ::opi_api::storage::v1::ListNullDebugsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::ListNullDebugsRequest, ::opi_api::storage::v1::ListNullDebugsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNullDebugs_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::ListNullDebugs(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullDebugsRequest* request, ::opi_api::storage::v1::ListNullDebugsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNullDebugs_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullDebugsResponse>* NullDebugService::Stub::PrepareAsyncListNullDebugsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullDebugsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::ListNullDebugsResponse, ::opi_api::storage::v1::ListNullDebugsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListNullDebugs_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::ListNullDebugsResponse>* NullDebugService::Stub::AsyncListNullDebugsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::ListNullDebugsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListNullDebugsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::GetNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullDebugRequest& request, ::opi_api::storage::v1::NullDebug* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::GetNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetNullDebug_, context, request, response);
}

void NullDebugService::Stub::async::GetNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::GetNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNullDebug_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::GetNullDebug(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNullDebug_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::PrepareAsyncGetNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebug, ::opi_api::storage::v1::GetNullDebugRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetNullDebug_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebug>* NullDebugService::Stub::AsyncGetNullDebugRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::GetNullDebugRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetNullDebugRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NullDebugService::Stub::NullDebugStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest& request, ::opi_api::storage::v1::NullDebugStatsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::opi_api::storage::v1::NullDebugStatsRequest, ::opi_api::storage::v1::NullDebugStatsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_NullDebugStats_, context, request, response);
}

void NullDebugService::Stub::async::NullDebugStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest* request, ::opi_api::storage::v1::NullDebugStatsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::opi_api::storage::v1::NullDebugStatsRequest, ::opi_api::storage::v1::NullDebugStatsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugStats_, context, request, response, std::move(f));
}

void NullDebugService::Stub::async::NullDebugStats(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest* request, ::opi_api::storage::v1::NullDebugStatsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_NullDebugStats_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebugStatsResponse>* NullDebugService::Stub::PrepareAsyncNullDebugStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::opi_api::storage::v1::NullDebugStatsResponse, ::opi_api::storage::v1::NullDebugStatsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_NullDebugStats_, context, request);
}

::grpc::ClientAsyncResponseReader< ::opi_api::storage::v1::NullDebugStatsResponse>* NullDebugService::Stub::AsyncNullDebugStatsRaw(::grpc::ClientContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncNullDebugStatsRaw(context, request, cq);
  result->StartCall();
  return result;
}

NullDebugService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::CreateNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::CreateNullDebugRequest* req,
             ::opi_api::storage::v1::NullDebug* resp) {
               return service->CreateNullDebug(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::DeleteNullDebugRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::DeleteNullDebugRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteNullDebug(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::UpdateNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::UpdateNullDebugRequest* req,
             ::opi_api::storage::v1::NullDebug* resp) {
               return service->UpdateNullDebug(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::ListNullDebugsRequest, ::opi_api::storage::v1::ListNullDebugsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::ListNullDebugsRequest* req,
             ::opi_api::storage::v1::ListNullDebugsResponse* resp) {
               return service->ListNullDebugs(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::GetNullDebugRequest, ::opi_api::storage::v1::NullDebug, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::GetNullDebugRequest* req,
             ::opi_api::storage::v1::NullDebug* resp) {
               return service->GetNullDebug(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NullDebugService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NullDebugService::Service, ::opi_api::storage::v1::NullDebugStatsRequest, ::opi_api::storage::v1::NullDebugStatsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NullDebugService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::opi_api::storage::v1::NullDebugStatsRequest* req,
             ::opi_api::storage::v1::NullDebugStatsResponse* resp) {
               return service->NullDebugStats(ctx, req, resp);
             }, this)));
}

NullDebugService::Service::~Service() {
}

::grpc::Status NullDebugService::Service::CreateNullDebug(::grpc::ServerContext* context, const ::opi_api::storage::v1::CreateNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::DeleteNullDebug(::grpc::ServerContext* context, const ::opi_api::storage::v1::DeleteNullDebugRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::UpdateNullDebug(::grpc::ServerContext* context, const ::opi_api::storage::v1::UpdateNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::ListNullDebugs(::grpc::ServerContext* context, const ::opi_api::storage::v1::ListNullDebugsRequest* request, ::opi_api::storage::v1::ListNullDebugsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::GetNullDebug(::grpc::ServerContext* context, const ::opi_api::storage::v1::GetNullDebugRequest* request, ::opi_api::storage::v1::NullDebug* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NullDebugService::Service::NullDebugStats(::grpc::ServerContext* context, const ::opi_api::storage::v1::NullDebugStatsRequest* request, ::opi_api::storage::v1::NullDebugStatsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace opi_api
}  // namespace storage
}  // namespace v1

