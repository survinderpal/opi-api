// SPDX-License-Identifier: Apache-2.0
// Copyright (c) 2022 Dell Inc, or its subsidiaries.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: frontend_virtio_scsi.proto

package _go

import (
	context "context"
	_go "github.com/opiproject/opi-api/common/v1/gen/go"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtioScsiTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// maximum LUNs within a target
	MaxLuns int32 `protobuf:"varint,2,opt,name=max_luns,json=maxLuns,proto3" json:"max_luns,omitempty"`
}

func (x *VirtioScsiTarget) Reset() {
	*x = VirtioScsiTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiTarget) ProtoMessage() {}

func (x *VirtioScsiTarget) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiTarget.ProtoReflect.Descriptor instead.
func (*VirtioScsiTarget) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{0}
}

func (x *VirtioScsiTarget) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiTarget) GetMaxLuns() int32 {
	if x != nil {
		return x.MaxLuns
	}
	return 0
}

type VirtioScsiController struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// xPU's PCI ID for the controller
	PcieId *PciEndpoint `protobuf:"bytes,2,opt,name=pcie_id,json=pcieId,proto3" json:"pcie_id,omitempty"`
}

func (x *VirtioScsiController) Reset() {
	*x = VirtioScsiController{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiController) ProtoMessage() {}

func (x *VirtioScsiController) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiController.ProtoReflect.Descriptor instead.
func (*VirtioScsiController) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{1}
}

func (x *VirtioScsiController) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiController) GetPcieId() *PciEndpoint {
	if x != nil {
		return x.PcieId
	}
	return nil
}

type VirtioScsiLun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The target that this LUN is in
	TargetId *_go.ObjectKey `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// The middle/back-end volume for this LLUN
	VolumeId *_go.ObjectKey `protobuf:"bytes,3,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
}

func (x *VirtioScsiLun) Reset() {
	*x = VirtioScsiLun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLun) ProtoMessage() {}

func (x *VirtioScsiLun) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLun.ProtoReflect.Descriptor instead.
func (*VirtioScsiLun) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{2}
}

func (x *VirtioScsiLun) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiLun) GetTargetId() *_go.ObjectKey {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *VirtioScsiLun) GetVolumeId() *_go.ObjectKey {
	if x != nil {
		return x.VolumeId
	}
	return nil
}

type CreateVirtioScsiTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent             string            `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	VirtioScsiTarget   *VirtioScsiTarget `protobuf:"bytes,2,opt,name=virtio_scsi_target,json=virtioScsiTarget,proto3" json:"virtio_scsi_target,omitempty"`
	VirtioScsiTargetId string            `protobuf:"bytes,3,opt,name=virtio_scsi_target_id,json=virtioScsiTargetId,proto3" json:"virtio_scsi_target_id,omitempty"`
}

func (x *CreateVirtioScsiTargetRequest) Reset() {
	*x = CreateVirtioScsiTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtioScsiTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtioScsiTargetRequest) ProtoMessage() {}

func (x *CreateVirtioScsiTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtioScsiTargetRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtioScsiTargetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVirtioScsiTargetRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateVirtioScsiTargetRequest) GetVirtioScsiTarget() *VirtioScsiTarget {
	if x != nil {
		return x.VirtioScsiTarget
	}
	return nil
}

func (x *CreateVirtioScsiTargetRequest) GetVirtioScsiTargetId() string {
	if x != nil {
		return x.VirtioScsiTargetId
	}
	return ""
}

type DeleteVirtioScsiTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If set to true, and the resource is not found, the request will succeed
	// but no action will be taken on the server
	AllowMissing bool `protobuf:"varint,2,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *DeleteVirtioScsiTargetRequest) Reset() {
	*x = DeleteVirtioScsiTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtioScsiTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtioScsiTargetRequest) ProtoMessage() {}

func (x *DeleteVirtioScsiTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtioScsiTargetRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtioScsiTargetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteVirtioScsiTargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteVirtioScsiTargetRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type UpdateVirtioScsiTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtioScsiTarget *VirtioScsiTarget `protobuf:"bytes,1,opt,name=virtio_scsi_target,json=virtioScsiTarget,proto3" json:"virtio_scsi_target,omitempty"`
	// The list of fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateVirtioScsiTargetRequest) Reset() {
	*x = UpdateVirtioScsiTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtioScsiTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtioScsiTargetRequest) ProtoMessage() {}

func (x *UpdateVirtioScsiTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtioScsiTargetRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtioScsiTargetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVirtioScsiTargetRequest) GetVirtioScsiTarget() *VirtioScsiTarget {
	if x != nil {
		return x.VirtioScsiTarget
	}
	return nil
}

func (x *UpdateVirtioScsiTargetRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type ListVirtioScsiTargetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent    string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListVirtioScsiTargetsRequest) Reset() {
	*x = ListVirtioScsiTargetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioScsiTargetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioScsiTargetsRequest) ProtoMessage() {}

func (x *ListVirtioScsiTargetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioScsiTargetsRequest.ProtoReflect.Descriptor instead.
func (*ListVirtioScsiTargetsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{6}
}

func (x *ListVirtioScsiTargetsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListVirtioScsiTargetsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVirtioScsiTargetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVirtioScsiTargetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtioScsiTargets []*VirtioScsiTarget `protobuf:"bytes,1,rep,name=virtio_scsi_targets,json=virtioScsiTargets,proto3" json:"virtio_scsi_targets,omitempty"`
	NextPageToken     string              `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListVirtioScsiTargetsResponse) Reset() {
	*x = ListVirtioScsiTargetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioScsiTargetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioScsiTargetsResponse) ProtoMessage() {}

func (x *ListVirtioScsiTargetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioScsiTargetsResponse.ProtoReflect.Descriptor instead.
func (*ListVirtioScsiTargetsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{7}
}

func (x *ListVirtioScsiTargetsResponse) GetVirtioScsiTargets() []*VirtioScsiTarget {
	if x != nil {
		return x.VirtioScsiTargets
	}
	return nil
}

func (x *ListVirtioScsiTargetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetVirtioScsiTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVirtioScsiTargetRequest) Reset() {
	*x = GetVirtioScsiTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtioScsiTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtioScsiTargetRequest) ProtoMessage() {}

func (x *GetVirtioScsiTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtioScsiTargetRequest.ProtoReflect.Descriptor instead.
func (*GetVirtioScsiTargetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{8}
}

func (x *GetVirtioScsiTargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VirtioScsiTargetStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId *_go.ObjectKey `protobuf:"bytes,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *VirtioScsiTargetStatsRequest) Reset() {
	*x = VirtioScsiTargetStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiTargetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiTargetStatsRequest) ProtoMessage() {}

func (x *VirtioScsiTargetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiTargetStatsRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiTargetStatsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{9}
}

func (x *VirtioScsiTargetStatsRequest) GetTargetId() *_go.ObjectKey {
	if x != nil {
		return x.TargetId
	}
	return nil
}

type VirtioScsiTargetStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stats *VolumeStats   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *VirtioScsiTargetStatsResponse) Reset() {
	*x = VirtioScsiTargetStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiTargetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiTargetStatsResponse) ProtoMessage() {}

func (x *VirtioScsiTargetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiTargetStatsResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiTargetStatsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{10}
}

func (x *VirtioScsiTargetStatsResponse) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiTargetStatsResponse) GetStats() *VolumeStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CreateVirtioScsiControllerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                 string                `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	VirtioScsiController   *VirtioScsiController `protobuf:"bytes,2,opt,name=virtio_scsi_controller,json=virtioScsiController,proto3" json:"virtio_scsi_controller,omitempty"`
	VirtioScsiControllerId string                `protobuf:"bytes,3,opt,name=virtio_scsi_controller_id,json=virtioScsiControllerId,proto3" json:"virtio_scsi_controller_id,omitempty"`
}

func (x *CreateVirtioScsiControllerRequest) Reset() {
	*x = CreateVirtioScsiControllerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtioScsiControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtioScsiControllerRequest) ProtoMessage() {}

func (x *CreateVirtioScsiControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtioScsiControllerRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtioScsiControllerRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{11}
}

func (x *CreateVirtioScsiControllerRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateVirtioScsiControllerRequest) GetVirtioScsiController() *VirtioScsiController {
	if x != nil {
		return x.VirtioScsiController
	}
	return nil
}

func (x *CreateVirtioScsiControllerRequest) GetVirtioScsiControllerId() string {
	if x != nil {
		return x.VirtioScsiControllerId
	}
	return ""
}

type DeleteVirtioScsiControllerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If set to true, and the resource is not found, the request will succeed
	// but no action will be taken on the server
	AllowMissing bool `protobuf:"varint,2,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *DeleteVirtioScsiControllerRequest) Reset() {
	*x = DeleteVirtioScsiControllerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtioScsiControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtioScsiControllerRequest) ProtoMessage() {}

func (x *DeleteVirtioScsiControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtioScsiControllerRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtioScsiControllerRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteVirtioScsiControllerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteVirtioScsiControllerRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type UpdateVirtioScsiControllerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtioScsiController *VirtioScsiController `protobuf:"bytes,1,opt,name=virtio_scsi_controller,json=virtioScsiController,proto3" json:"virtio_scsi_controller,omitempty"`
	// The list of fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateVirtioScsiControllerRequest) Reset() {
	*x = UpdateVirtioScsiControllerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtioScsiControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtioScsiControllerRequest) ProtoMessage() {}

func (x *UpdateVirtioScsiControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtioScsiControllerRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtioScsiControllerRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateVirtioScsiControllerRequest) GetVirtioScsiController() *VirtioScsiController {
	if x != nil {
		return x.VirtioScsiController
	}
	return nil
}

func (x *UpdateVirtioScsiControllerRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type ListVirtioScsiControllersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent    string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListVirtioScsiControllersRequest) Reset() {
	*x = ListVirtioScsiControllersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioScsiControllersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioScsiControllersRequest) ProtoMessage() {}

func (x *ListVirtioScsiControllersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioScsiControllersRequest.ProtoReflect.Descriptor instead.
func (*ListVirtioScsiControllersRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{14}
}

func (x *ListVirtioScsiControllersRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListVirtioScsiControllersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVirtioScsiControllersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVirtioScsiControllersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtioScsiControllers []*VirtioScsiController `protobuf:"bytes,1,rep,name=virtio_scsi_controllers,json=virtioScsiControllers,proto3" json:"virtio_scsi_controllers,omitempty"`
	NextPageToken         string                  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListVirtioScsiControllersResponse) Reset() {
	*x = ListVirtioScsiControllersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioScsiControllersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioScsiControllersResponse) ProtoMessage() {}

func (x *ListVirtioScsiControllersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioScsiControllersResponse.ProtoReflect.Descriptor instead.
func (*ListVirtioScsiControllersResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{15}
}

func (x *ListVirtioScsiControllersResponse) GetVirtioScsiControllers() []*VirtioScsiController {
	if x != nil {
		return x.VirtioScsiControllers
	}
	return nil
}

func (x *ListVirtioScsiControllersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetVirtioScsiControllerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVirtioScsiControllerRequest) Reset() {
	*x = GetVirtioScsiControllerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtioScsiControllerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtioScsiControllerRequest) ProtoMessage() {}

func (x *GetVirtioScsiControllerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtioScsiControllerRequest.ProtoReflect.Descriptor instead.
func (*GetVirtioScsiControllerRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{16}
}

func (x *GetVirtioScsiControllerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VirtioScsiControllerStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
}

func (x *VirtioScsiControllerStatsRequest) Reset() {
	*x = VirtioScsiControllerStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerStatsRequest) ProtoMessage() {}

func (x *VirtioScsiControllerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerStatsRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerStatsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{17}
}

func (x *VirtioScsiControllerStatsRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

type VirtioScsiControllerStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stats *VolumeStats   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *VirtioScsiControllerStatsResponse) Reset() {
	*x = VirtioScsiControllerStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiControllerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiControllerStatsResponse) ProtoMessage() {}

func (x *VirtioScsiControllerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiControllerStatsResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiControllerStatsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{18}
}

func (x *VirtioScsiControllerStatsResponse) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiControllerStatsResponse) GetStats() *VolumeStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CreateVirtioScsiLunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent          string         `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	VirtioScsiLun   *VirtioScsiLun `protobuf:"bytes,2,opt,name=virtio_scsi_lun,json=virtioScsiLun,proto3" json:"virtio_scsi_lun,omitempty"`
	VirtioScsiLunId string         `protobuf:"bytes,3,opt,name=virtio_scsi_lun_id,json=virtioScsiLunId,proto3" json:"virtio_scsi_lun_id,omitempty"`
}

func (x *CreateVirtioScsiLunRequest) Reset() {
	*x = CreateVirtioScsiLunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtioScsiLunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtioScsiLunRequest) ProtoMessage() {}

func (x *CreateVirtioScsiLunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtioScsiLunRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtioScsiLunRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{19}
}

func (x *CreateVirtioScsiLunRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateVirtioScsiLunRequest) GetVirtioScsiLun() *VirtioScsiLun {
	if x != nil {
		return x.VirtioScsiLun
	}
	return nil
}

func (x *CreateVirtioScsiLunRequest) GetVirtioScsiLunId() string {
	if x != nil {
		return x.VirtioScsiLunId
	}
	return ""
}

type DeleteVirtioScsiLunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If set to true, and the resource is not found, the request will succeed
	// but no action will be taken on the server
	AllowMissing bool `protobuf:"varint,2,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
}

func (x *DeleteVirtioScsiLunRequest) Reset() {
	*x = DeleteVirtioScsiLunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtioScsiLunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtioScsiLunRequest) ProtoMessage() {}

func (x *DeleteVirtioScsiLunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtioScsiLunRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtioScsiLunRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteVirtioScsiLunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteVirtioScsiLunRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type UpdateVirtioScsiLunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtioScsiLun *VirtioScsiLun `protobuf:"bytes,1,opt,name=virtio_scsi_lun,json=virtioScsiLun,proto3" json:"virtio_scsi_lun,omitempty"`
	// The list of fields to update.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateVirtioScsiLunRequest) Reset() {
	*x = UpdateVirtioScsiLunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtioScsiLunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtioScsiLunRequest) ProtoMessage() {}

func (x *UpdateVirtioScsiLunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtioScsiLunRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtioScsiLunRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateVirtioScsiLunRequest) GetVirtioScsiLun() *VirtioScsiLun {
	if x != nil {
		return x.VirtioScsiLun
	}
	return nil
}

func (x *UpdateVirtioScsiLunRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type ListVirtioScsiLunsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent    string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListVirtioScsiLunsRequest) Reset() {
	*x = ListVirtioScsiLunsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioScsiLunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioScsiLunsRequest) ProtoMessage() {}

func (x *ListVirtioScsiLunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioScsiLunsRequest.ProtoReflect.Descriptor instead.
func (*ListVirtioScsiLunsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{22}
}

func (x *ListVirtioScsiLunsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListVirtioScsiLunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVirtioScsiLunsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVirtioScsiLunsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtioScsiLuns []*VirtioScsiLun `protobuf:"bytes,1,rep,name=virtio_scsi_luns,json=virtioScsiLuns,proto3" json:"virtio_scsi_luns,omitempty"`
	NextPageToken  string           `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListVirtioScsiLunsResponse) Reset() {
	*x = ListVirtioScsiLunsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVirtioScsiLunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtioScsiLunsResponse) ProtoMessage() {}

func (x *ListVirtioScsiLunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtioScsiLunsResponse.ProtoReflect.Descriptor instead.
func (*ListVirtioScsiLunsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{23}
}

func (x *ListVirtioScsiLunsResponse) GetVirtioScsiLuns() []*VirtioScsiLun {
	if x != nil {
		return x.VirtioScsiLuns
	}
	return nil
}

func (x *ListVirtioScsiLunsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetVirtioScsiLunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetVirtioScsiLunRequest) Reset() {
	*x = GetVirtioScsiLunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVirtioScsiLunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtioScsiLunRequest) ProtoMessage() {}

func (x *GetVirtioScsiLunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtioScsiLunRequest.ProtoReflect.Descriptor instead.
func (*GetVirtioScsiLunRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{24}
}

func (x *GetVirtioScsiLunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VirtioScsiLunStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId *_go.ObjectKey `protobuf:"bytes,1,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
	LunId        *_go.ObjectKey `protobuf:"bytes,2,opt,name=lun_id,json=lunId,proto3" json:"lun_id,omitempty"`
}

func (x *VirtioScsiLunStatsRequest) Reset() {
	*x = VirtioScsiLunStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunStatsRequest) ProtoMessage() {}

func (x *VirtioScsiLunStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunStatsRequest.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunStatsRequest) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{25}
}

func (x *VirtioScsiLunStatsRequest) GetControllerId() *_go.ObjectKey {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

func (x *VirtioScsiLunStatsRequest) GetLunId() *_go.ObjectKey {
	if x != nil {
		return x.LunId
	}
	return nil
}

type VirtioScsiLunStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *_go.ObjectKey `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Stats *VolumeStats   `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *VirtioScsiLunStatsResponse) Reset() {
	*x = VirtioScsiLunStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_virtio_scsi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtioScsiLunStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtioScsiLunStatsResponse) ProtoMessage() {}

func (x *VirtioScsiLunStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_virtio_scsi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtioScsiLunStatsResponse.ProtoReflect.Descriptor instead.
func (*VirtioScsiLunStatsResponse) Descriptor() ([]byte, []int) {
	return file_frontend_virtio_scsi_proto_rawDescGZIP(), []int{26}
}

func (x *VirtioScsiLunStatsResponse) GetId() *_go.ObjectKey {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VirtioScsiLunStatsResponse) GetStats() *VolumeStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

var File_frontend_virtio_scsi_proto protoreflect.FileDescriptor

var file_frontend_virtio_scsi_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x0f, 0x6f, 0x70, 0x69, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x10, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x6c,
	0x75, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4c, 0x75,
	0x6e, 0x73, 0x22, 0x7e, 0x0a, 0x14, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x63, 0x69, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x63, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x63, 0x69, 0x65,
	0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x4c, 0x75, 0x6e, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x08,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe0, 0x41, 0x02, 0xfa,
	0x41, 0x25, 0x0a, 0x23, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x57, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x76, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe0, 0x41, 0x02,
	0xfa, 0x41, 0x25, 0x0a, 0x23, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f,
	0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x10, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x25, 0x0a,
	0x23, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x76, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x11, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x25, 0x0a, 0x23, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x1c, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1d, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x21, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2f, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x29, 0x0a, 0x27, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x16, 0x76, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x14, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x19, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xe0, 0x41,
	0x02, 0xfa, 0x41, 0x29, 0x0a, 0x27, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e,
	0x0a, 0x16, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x14, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xa7, 0x01, 0x0a, 0x20,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x47, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2f, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x29, 0x0a, 0x27, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x17, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x15, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x65, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2f, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x29, 0x0a, 0x27, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x20,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x21, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xdb,
	0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xe0,
	0x41, 0x02, 0xfa, 0x41, 0x22, 0x0a, 0x20, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x4e, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c,
	0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12,
	0x2b, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c,
	0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x4c, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x22,
	0x0a, 0x20, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c,
	0x75, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x22, 0xa4, 0x01,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0f,
	0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c, 0x75, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x73, 0x6b, 0x22, 0x99, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x28, 0xe0, 0x41, 0x02, 0xfa, 0x41, 0x22, 0x0a, 0x20, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x91, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x10, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c,
	0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x0e, 0x76, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xe0,
	0x41, 0x02, 0xfa, 0x41, 0x22, 0x0a, 0x20, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01,
	0x0a, 0x19, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x06, 0x6c, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x6c, 0x75,
	0x6e, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x32, 0xa1, 0x19, 0x0a, 0x19, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xd8, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x31, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2d, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x73,
	0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x12, 0x76, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0xda, 0x41,
	0x2f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73,
	0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2c, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x12, 0x9c, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x31, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x2a, 0x28,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x7d, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73,
	0x69, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x7d, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0xd8, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x31, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x32, 0x28, 0x2f, 0x76, 0x31,
	0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63,
	0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0xda, 0x41, 0x1e, 0x76, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0xa6, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x73,
	0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0xda, 0x41, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0xa4, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d,
	0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x7d, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xf0, 0x01, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x71, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x31, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d,
	0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x16, 0x76, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0xda, 0x41, 0x37, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x76, 0x69, 0x72,
	0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2c, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0xa7, 0x01,
	0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x2a, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x73, 0x7d, 0x2f,
	0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x7d,
	0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xf0, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x71, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x32,
	0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73,
	0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x16, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0xda, 0x41, 0x22, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73,
	0x63, 0x73, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0xb2, 0x01, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0xda, 0x41, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0xae, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x12, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73, 0x75, 0x62,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x73, 0x63, 0x73, 0x69, 0x63, 0x74, 0x72, 0x6c, 0x7d, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x8a, 0x01, 0x0a, 0x19, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x34,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc6, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x22, 0x5c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a,
	0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x73, 0x75,
	0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c, 0x75, 0x6e, 0xda, 0x41, 0x29, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x2c, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f,
	0x6c, 0x75, 0x6e, 0x2c, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f,
	0x6c, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x97, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12, 0x2e,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x2a, 0x29,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x73, 0x7d, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x7d, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0xc6, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x22, 0x5c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x38, 0x32, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x76, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c, 0x75, 0x6e, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73,
	0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x3a, 0x0f, 0x76, 0x69, 0x72, 0x74,
	0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c, 0x75, 0x6e, 0xda, 0x41, 0x1b, 0x76, 0x69,
	0x72, 0x74, 0x69, 0x6f, 0x5f, 0x73, 0x63, 0x73, 0x69, 0x5f, 0x6c, 0x75, 0x6e, 0x2c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x9d, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x73,
	0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f,
	0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53,
	0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d,
	0xda, 0x41, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x12, 0x2b,
	0x2e, 0x6f, 0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73,
	0x69, 0x4c, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x70,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x6e, 0x61, 0x6d,
	0x65, 0x3d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x7d, 0x2f, 0x7b, 0x76,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x73, 0x63, 0x73, 0x69, 0x6c, 0x75, 0x6e, 0x7d, 0xda, 0x41, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63,
	0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6f, 0x70, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x69, 0x6f, 0x53, 0x63, 0x73, 0x69, 0x4c, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x66, 0x0a, 0x12, 0x6f,
	0x70, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x42, 0x17, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x69,
	0x6f, 0x53, 0x63, 0x73, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x69, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x6f, 0x70, 0x69, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frontend_virtio_scsi_proto_rawDescOnce sync.Once
	file_frontend_virtio_scsi_proto_rawDescData = file_frontend_virtio_scsi_proto_rawDesc
)

func file_frontend_virtio_scsi_proto_rawDescGZIP() []byte {
	file_frontend_virtio_scsi_proto_rawDescOnce.Do(func() {
		file_frontend_virtio_scsi_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontend_virtio_scsi_proto_rawDescData)
	})
	return file_frontend_virtio_scsi_proto_rawDescData
}

var file_frontend_virtio_scsi_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_frontend_virtio_scsi_proto_goTypes = []interface{}{
	(*VirtioScsiTarget)(nil),                  // 0: opi_api.storage.v1.VirtioScsiTarget
	(*VirtioScsiController)(nil),              // 1: opi_api.storage.v1.VirtioScsiController
	(*VirtioScsiLun)(nil),                     // 2: opi_api.storage.v1.VirtioScsiLun
	(*CreateVirtioScsiTargetRequest)(nil),     // 3: opi_api.storage.v1.CreateVirtioScsiTargetRequest
	(*DeleteVirtioScsiTargetRequest)(nil),     // 4: opi_api.storage.v1.DeleteVirtioScsiTargetRequest
	(*UpdateVirtioScsiTargetRequest)(nil),     // 5: opi_api.storage.v1.UpdateVirtioScsiTargetRequest
	(*ListVirtioScsiTargetsRequest)(nil),      // 6: opi_api.storage.v1.ListVirtioScsiTargetsRequest
	(*ListVirtioScsiTargetsResponse)(nil),     // 7: opi_api.storage.v1.ListVirtioScsiTargetsResponse
	(*GetVirtioScsiTargetRequest)(nil),        // 8: opi_api.storage.v1.GetVirtioScsiTargetRequest
	(*VirtioScsiTargetStatsRequest)(nil),      // 9: opi_api.storage.v1.VirtioScsiTargetStatsRequest
	(*VirtioScsiTargetStatsResponse)(nil),     // 10: opi_api.storage.v1.VirtioScsiTargetStatsResponse
	(*CreateVirtioScsiControllerRequest)(nil), // 11: opi_api.storage.v1.CreateVirtioScsiControllerRequest
	(*DeleteVirtioScsiControllerRequest)(nil), // 12: opi_api.storage.v1.DeleteVirtioScsiControllerRequest
	(*UpdateVirtioScsiControllerRequest)(nil), // 13: opi_api.storage.v1.UpdateVirtioScsiControllerRequest
	(*ListVirtioScsiControllersRequest)(nil),  // 14: opi_api.storage.v1.ListVirtioScsiControllersRequest
	(*ListVirtioScsiControllersResponse)(nil), // 15: opi_api.storage.v1.ListVirtioScsiControllersResponse
	(*GetVirtioScsiControllerRequest)(nil),    // 16: opi_api.storage.v1.GetVirtioScsiControllerRequest
	(*VirtioScsiControllerStatsRequest)(nil),  // 17: opi_api.storage.v1.VirtioScsiControllerStatsRequest
	(*VirtioScsiControllerStatsResponse)(nil), // 18: opi_api.storage.v1.VirtioScsiControllerStatsResponse
	(*CreateVirtioScsiLunRequest)(nil),        // 19: opi_api.storage.v1.CreateVirtioScsiLunRequest
	(*DeleteVirtioScsiLunRequest)(nil),        // 20: opi_api.storage.v1.DeleteVirtioScsiLunRequest
	(*UpdateVirtioScsiLunRequest)(nil),        // 21: opi_api.storage.v1.UpdateVirtioScsiLunRequest
	(*ListVirtioScsiLunsRequest)(nil),         // 22: opi_api.storage.v1.ListVirtioScsiLunsRequest
	(*ListVirtioScsiLunsResponse)(nil),        // 23: opi_api.storage.v1.ListVirtioScsiLunsResponse
	(*GetVirtioScsiLunRequest)(nil),           // 24: opi_api.storage.v1.GetVirtioScsiLunRequest
	(*VirtioScsiLunStatsRequest)(nil),         // 25: opi_api.storage.v1.VirtioScsiLunStatsRequest
	(*VirtioScsiLunStatsResponse)(nil),        // 26: opi_api.storage.v1.VirtioScsiLunStatsResponse
	(*_go.ObjectKey)(nil),                     // 27: opi_api.common.v1.ObjectKey
	(*PciEndpoint)(nil),                       // 28: opi_api.storage.v1.PciEndpoint
	(*fieldmaskpb.FieldMask)(nil),             // 29: google.protobuf.FieldMask
	(*VolumeStats)(nil),                       // 30: opi_api.storage.v1.VolumeStats
	(*emptypb.Empty)(nil),                     // 31: google.protobuf.Empty
}
var file_frontend_virtio_scsi_proto_depIdxs = []int32{
	27, // 0: opi_api.storage.v1.VirtioScsiTarget.id:type_name -> opi_api.common.v1.ObjectKey
	27, // 1: opi_api.storage.v1.VirtioScsiController.id:type_name -> opi_api.common.v1.ObjectKey
	28, // 2: opi_api.storage.v1.VirtioScsiController.pcie_id:type_name -> opi_api.storage.v1.PciEndpoint
	27, // 3: opi_api.storage.v1.VirtioScsiLun.id:type_name -> opi_api.common.v1.ObjectKey
	27, // 4: opi_api.storage.v1.VirtioScsiLun.target_id:type_name -> opi_api.common.v1.ObjectKey
	27, // 5: opi_api.storage.v1.VirtioScsiLun.volume_id:type_name -> opi_api.common.v1.ObjectKey
	0,  // 6: opi_api.storage.v1.CreateVirtioScsiTargetRequest.virtio_scsi_target:type_name -> opi_api.storage.v1.VirtioScsiTarget
	0,  // 7: opi_api.storage.v1.UpdateVirtioScsiTargetRequest.virtio_scsi_target:type_name -> opi_api.storage.v1.VirtioScsiTarget
	29, // 8: opi_api.storage.v1.UpdateVirtioScsiTargetRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 9: opi_api.storage.v1.ListVirtioScsiTargetsResponse.virtio_scsi_targets:type_name -> opi_api.storage.v1.VirtioScsiTarget
	27, // 10: opi_api.storage.v1.VirtioScsiTargetStatsRequest.target_id:type_name -> opi_api.common.v1.ObjectKey
	27, // 11: opi_api.storage.v1.VirtioScsiTargetStatsResponse.id:type_name -> opi_api.common.v1.ObjectKey
	30, // 12: opi_api.storage.v1.VirtioScsiTargetStatsResponse.stats:type_name -> opi_api.storage.v1.VolumeStats
	1,  // 13: opi_api.storage.v1.CreateVirtioScsiControllerRequest.virtio_scsi_controller:type_name -> opi_api.storage.v1.VirtioScsiController
	1,  // 14: opi_api.storage.v1.UpdateVirtioScsiControllerRequest.virtio_scsi_controller:type_name -> opi_api.storage.v1.VirtioScsiController
	29, // 15: opi_api.storage.v1.UpdateVirtioScsiControllerRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 16: opi_api.storage.v1.ListVirtioScsiControllersResponse.virtio_scsi_controllers:type_name -> opi_api.storage.v1.VirtioScsiController
	27, // 17: opi_api.storage.v1.VirtioScsiControllerStatsRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	27, // 18: opi_api.storage.v1.VirtioScsiControllerStatsResponse.id:type_name -> opi_api.common.v1.ObjectKey
	30, // 19: opi_api.storage.v1.VirtioScsiControllerStatsResponse.stats:type_name -> opi_api.storage.v1.VolumeStats
	2,  // 20: opi_api.storage.v1.CreateVirtioScsiLunRequest.virtio_scsi_lun:type_name -> opi_api.storage.v1.VirtioScsiLun
	2,  // 21: opi_api.storage.v1.UpdateVirtioScsiLunRequest.virtio_scsi_lun:type_name -> opi_api.storage.v1.VirtioScsiLun
	29, // 22: opi_api.storage.v1.UpdateVirtioScsiLunRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 23: opi_api.storage.v1.ListVirtioScsiLunsResponse.virtio_scsi_luns:type_name -> opi_api.storage.v1.VirtioScsiLun
	27, // 24: opi_api.storage.v1.VirtioScsiLunStatsRequest.controller_id:type_name -> opi_api.common.v1.ObjectKey
	27, // 25: opi_api.storage.v1.VirtioScsiLunStatsRequest.lun_id:type_name -> opi_api.common.v1.ObjectKey
	27, // 26: opi_api.storage.v1.VirtioScsiLunStatsResponse.id:type_name -> opi_api.common.v1.ObjectKey
	30, // 27: opi_api.storage.v1.VirtioScsiLunStatsResponse.stats:type_name -> opi_api.storage.v1.VolumeStats
	3,  // 28: opi_api.storage.v1.FrontendVirtioScsiService.CreateVirtioScsiTarget:input_type -> opi_api.storage.v1.CreateVirtioScsiTargetRequest
	4,  // 29: opi_api.storage.v1.FrontendVirtioScsiService.DeleteVirtioScsiTarget:input_type -> opi_api.storage.v1.DeleteVirtioScsiTargetRequest
	5,  // 30: opi_api.storage.v1.FrontendVirtioScsiService.UpdateVirtioScsiTarget:input_type -> opi_api.storage.v1.UpdateVirtioScsiTargetRequest
	6,  // 31: opi_api.storage.v1.FrontendVirtioScsiService.ListVirtioScsiTargets:input_type -> opi_api.storage.v1.ListVirtioScsiTargetsRequest
	8,  // 32: opi_api.storage.v1.FrontendVirtioScsiService.GetVirtioScsiTarget:input_type -> opi_api.storage.v1.GetVirtioScsiTargetRequest
	9,  // 33: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiTargetStats:input_type -> opi_api.storage.v1.VirtioScsiTargetStatsRequest
	11, // 34: opi_api.storage.v1.FrontendVirtioScsiService.CreateVirtioScsiController:input_type -> opi_api.storage.v1.CreateVirtioScsiControllerRequest
	12, // 35: opi_api.storage.v1.FrontendVirtioScsiService.DeleteVirtioScsiController:input_type -> opi_api.storage.v1.DeleteVirtioScsiControllerRequest
	13, // 36: opi_api.storage.v1.FrontendVirtioScsiService.UpdateVirtioScsiController:input_type -> opi_api.storage.v1.UpdateVirtioScsiControllerRequest
	14, // 37: opi_api.storage.v1.FrontendVirtioScsiService.ListVirtioScsiControllers:input_type -> opi_api.storage.v1.ListVirtioScsiControllersRequest
	16, // 38: opi_api.storage.v1.FrontendVirtioScsiService.GetVirtioScsiController:input_type -> opi_api.storage.v1.GetVirtioScsiControllerRequest
	17, // 39: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerStats:input_type -> opi_api.storage.v1.VirtioScsiControllerStatsRequest
	19, // 40: opi_api.storage.v1.FrontendVirtioScsiService.CreateVirtioScsiLun:input_type -> opi_api.storage.v1.CreateVirtioScsiLunRequest
	20, // 41: opi_api.storage.v1.FrontendVirtioScsiService.DeleteVirtioScsiLun:input_type -> opi_api.storage.v1.DeleteVirtioScsiLunRequest
	21, // 42: opi_api.storage.v1.FrontendVirtioScsiService.UpdateVirtioScsiLun:input_type -> opi_api.storage.v1.UpdateVirtioScsiLunRequest
	22, // 43: opi_api.storage.v1.FrontendVirtioScsiService.ListVirtioScsiLuns:input_type -> opi_api.storage.v1.ListVirtioScsiLunsRequest
	24, // 44: opi_api.storage.v1.FrontendVirtioScsiService.GetVirtioScsiLun:input_type -> opi_api.storage.v1.GetVirtioScsiLunRequest
	25, // 45: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunStats:input_type -> opi_api.storage.v1.VirtioScsiLunStatsRequest
	0,  // 46: opi_api.storage.v1.FrontendVirtioScsiService.CreateVirtioScsiTarget:output_type -> opi_api.storage.v1.VirtioScsiTarget
	31, // 47: opi_api.storage.v1.FrontendVirtioScsiService.DeleteVirtioScsiTarget:output_type -> google.protobuf.Empty
	0,  // 48: opi_api.storage.v1.FrontendVirtioScsiService.UpdateVirtioScsiTarget:output_type -> opi_api.storage.v1.VirtioScsiTarget
	7,  // 49: opi_api.storage.v1.FrontendVirtioScsiService.ListVirtioScsiTargets:output_type -> opi_api.storage.v1.ListVirtioScsiTargetsResponse
	0,  // 50: opi_api.storage.v1.FrontendVirtioScsiService.GetVirtioScsiTarget:output_type -> opi_api.storage.v1.VirtioScsiTarget
	10, // 51: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiTargetStats:output_type -> opi_api.storage.v1.VirtioScsiTargetStatsResponse
	1,  // 52: opi_api.storage.v1.FrontendVirtioScsiService.CreateVirtioScsiController:output_type -> opi_api.storage.v1.VirtioScsiController
	31, // 53: opi_api.storage.v1.FrontendVirtioScsiService.DeleteVirtioScsiController:output_type -> google.protobuf.Empty
	1,  // 54: opi_api.storage.v1.FrontendVirtioScsiService.UpdateVirtioScsiController:output_type -> opi_api.storage.v1.VirtioScsiController
	15, // 55: opi_api.storage.v1.FrontendVirtioScsiService.ListVirtioScsiControllers:output_type -> opi_api.storage.v1.ListVirtioScsiControllersResponse
	1,  // 56: opi_api.storage.v1.FrontendVirtioScsiService.GetVirtioScsiController:output_type -> opi_api.storage.v1.VirtioScsiController
	18, // 57: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiControllerStats:output_type -> opi_api.storage.v1.VirtioScsiControllerStatsResponse
	2,  // 58: opi_api.storage.v1.FrontendVirtioScsiService.CreateVirtioScsiLun:output_type -> opi_api.storage.v1.VirtioScsiLun
	31, // 59: opi_api.storage.v1.FrontendVirtioScsiService.DeleteVirtioScsiLun:output_type -> google.protobuf.Empty
	2,  // 60: opi_api.storage.v1.FrontendVirtioScsiService.UpdateVirtioScsiLun:output_type -> opi_api.storage.v1.VirtioScsiLun
	23, // 61: opi_api.storage.v1.FrontendVirtioScsiService.ListVirtioScsiLuns:output_type -> opi_api.storage.v1.ListVirtioScsiLunsResponse
	2,  // 62: opi_api.storage.v1.FrontendVirtioScsiService.GetVirtioScsiLun:output_type -> opi_api.storage.v1.VirtioScsiLun
	26, // 63: opi_api.storage.v1.FrontendVirtioScsiService.VirtioScsiLunStats:output_type -> opi_api.storage.v1.VirtioScsiLunStatsResponse
	46, // [46:64] is the sub-list for method output_type
	28, // [28:46] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_frontend_virtio_scsi_proto_init() }
func file_frontend_virtio_scsi_proto_init() {
	if File_frontend_virtio_scsi_proto != nil {
		return
	}
	file_opicommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_frontend_virtio_scsi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiController); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtioScsiTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtioScsiTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtioScsiTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioScsiTargetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioScsiTargetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtioScsiTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiTargetStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiTargetStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtioScsiControllerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtioScsiControllerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtioScsiControllerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioScsiControllersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioScsiControllersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtioScsiControllerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiControllerStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtioScsiLunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtioScsiLunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtioScsiLunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioScsiLunsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVirtioScsiLunsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVirtioScsiLunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_virtio_scsi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtioScsiLunStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontend_virtio_scsi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frontend_virtio_scsi_proto_goTypes,
		DependencyIndexes: file_frontend_virtio_scsi_proto_depIdxs,
		MessageInfos:      file_frontend_virtio_scsi_proto_msgTypes,
	}.Build()
	File_frontend_virtio_scsi_proto = out.File
	file_frontend_virtio_scsi_proto_rawDesc = nil
	file_frontend_virtio_scsi_proto_goTypes = nil
	file_frontend_virtio_scsi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FrontendVirtioScsiServiceClient is the client API for FrontendVirtioScsiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrontendVirtioScsiServiceClient interface {
	CreateVirtioScsiTarget(ctx context.Context, in *CreateVirtioScsiTargetRequest, opts ...grpc.CallOption) (*VirtioScsiTarget, error)
	DeleteVirtioScsiTarget(ctx context.Context, in *DeleteVirtioScsiTargetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateVirtioScsiTarget(ctx context.Context, in *UpdateVirtioScsiTargetRequest, opts ...grpc.CallOption) (*VirtioScsiTarget, error)
	ListVirtioScsiTargets(ctx context.Context, in *ListVirtioScsiTargetsRequest, opts ...grpc.CallOption) (*ListVirtioScsiTargetsResponse, error)
	GetVirtioScsiTarget(ctx context.Context, in *GetVirtioScsiTargetRequest, opts ...grpc.CallOption) (*VirtioScsiTarget, error)
	VirtioScsiTargetStats(ctx context.Context, in *VirtioScsiTargetStatsRequest, opts ...grpc.CallOption) (*VirtioScsiTargetStatsResponse, error)
	CreateVirtioScsiController(ctx context.Context, in *CreateVirtioScsiControllerRequest, opts ...grpc.CallOption) (*VirtioScsiController, error)
	DeleteVirtioScsiController(ctx context.Context, in *DeleteVirtioScsiControllerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateVirtioScsiController(ctx context.Context, in *UpdateVirtioScsiControllerRequest, opts ...grpc.CallOption) (*VirtioScsiController, error)
	ListVirtioScsiControllers(ctx context.Context, in *ListVirtioScsiControllersRequest, opts ...grpc.CallOption) (*ListVirtioScsiControllersResponse, error)
	GetVirtioScsiController(ctx context.Context, in *GetVirtioScsiControllerRequest, opts ...grpc.CallOption) (*VirtioScsiController, error)
	VirtioScsiControllerStats(ctx context.Context, in *VirtioScsiControllerStatsRequest, opts ...grpc.CallOption) (*VirtioScsiControllerStatsResponse, error)
	CreateVirtioScsiLun(ctx context.Context, in *CreateVirtioScsiLunRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error)
	DeleteVirtioScsiLun(ctx context.Context, in *DeleteVirtioScsiLunRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateVirtioScsiLun(ctx context.Context, in *UpdateVirtioScsiLunRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error)
	ListVirtioScsiLuns(ctx context.Context, in *ListVirtioScsiLunsRequest, opts ...grpc.CallOption) (*ListVirtioScsiLunsResponse, error)
	GetVirtioScsiLun(ctx context.Context, in *GetVirtioScsiLunRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error)
	VirtioScsiLunStats(ctx context.Context, in *VirtioScsiLunStatsRequest, opts ...grpc.CallOption) (*VirtioScsiLunStatsResponse, error)
}

type frontendVirtioScsiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFrontendVirtioScsiServiceClient(cc grpc.ClientConnInterface) FrontendVirtioScsiServiceClient {
	return &frontendVirtioScsiServiceClient{cc}
}

func (c *frontendVirtioScsiServiceClient) CreateVirtioScsiTarget(ctx context.Context, in *CreateVirtioScsiTargetRequest, opts ...grpc.CallOption) (*VirtioScsiTarget, error) {
	out := new(VirtioScsiTarget)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) DeleteVirtioScsiTarget(ctx context.Context, in *DeleteVirtioScsiTargetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) UpdateVirtioScsiTarget(ctx context.Context, in *UpdateVirtioScsiTargetRequest, opts ...grpc.CallOption) (*VirtioScsiTarget, error) {
	out := new(VirtioScsiTarget)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) ListVirtioScsiTargets(ctx context.Context, in *ListVirtioScsiTargetsRequest, opts ...grpc.CallOption) (*ListVirtioScsiTargetsResponse, error) {
	out := new(ListVirtioScsiTargetsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiTargets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) GetVirtioScsiTarget(ctx context.Context, in *GetVirtioScsiTargetRequest, opts ...grpc.CallOption) (*VirtioScsiTarget, error) {
	out := new(VirtioScsiTarget)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiTarget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiTargetStats(ctx context.Context, in *VirtioScsiTargetStatsRequest, opts ...grpc.CallOption) (*VirtioScsiTargetStatsResponse, error) {
	out := new(VirtioScsiTargetStatsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiTargetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) CreateVirtioScsiController(ctx context.Context, in *CreateVirtioScsiControllerRequest, opts ...grpc.CallOption) (*VirtioScsiController, error) {
	out := new(VirtioScsiController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiController", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) DeleteVirtioScsiController(ctx context.Context, in *DeleteVirtioScsiControllerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiController", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) UpdateVirtioScsiController(ctx context.Context, in *UpdateVirtioScsiControllerRequest, opts ...grpc.CallOption) (*VirtioScsiController, error) {
	out := new(VirtioScsiController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiController", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) ListVirtioScsiControllers(ctx context.Context, in *ListVirtioScsiControllersRequest, opts ...grpc.CallOption) (*ListVirtioScsiControllersResponse, error) {
	out := new(ListVirtioScsiControllersResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiControllers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) GetVirtioScsiController(ctx context.Context, in *GetVirtioScsiControllerRequest, opts ...grpc.CallOption) (*VirtioScsiController, error) {
	out := new(VirtioScsiController)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiController", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiControllerStats(ctx context.Context, in *VirtioScsiControllerStatsRequest, opts ...grpc.CallOption) (*VirtioScsiControllerStatsResponse, error) {
	out := new(VirtioScsiControllerStatsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) CreateVirtioScsiLun(ctx context.Context, in *CreateVirtioScsiLunRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error) {
	out := new(VirtioScsiLun)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiLun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) DeleteVirtioScsiLun(ctx context.Context, in *DeleteVirtioScsiLunRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiLun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) UpdateVirtioScsiLun(ctx context.Context, in *UpdateVirtioScsiLunRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error) {
	out := new(VirtioScsiLun)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiLun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) ListVirtioScsiLuns(ctx context.Context, in *ListVirtioScsiLunsRequest, opts ...grpc.CallOption) (*ListVirtioScsiLunsResponse, error) {
	out := new(ListVirtioScsiLunsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiLuns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) GetVirtioScsiLun(ctx context.Context, in *GetVirtioScsiLunRequest, opts ...grpc.CallOption) (*VirtioScsiLun, error) {
	out := new(VirtioScsiLun)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiLun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendVirtioScsiServiceClient) VirtioScsiLunStats(ctx context.Context, in *VirtioScsiLunStatsRequest, opts ...grpc.CallOption) (*VirtioScsiLunStatsResponse, error) {
	out := new(VirtioScsiLunStatsResponse)
	err := c.cc.Invoke(ctx, "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrontendVirtioScsiServiceServer is the server API for FrontendVirtioScsiService service.
type FrontendVirtioScsiServiceServer interface {
	CreateVirtioScsiTarget(context.Context, *CreateVirtioScsiTargetRequest) (*VirtioScsiTarget, error)
	DeleteVirtioScsiTarget(context.Context, *DeleteVirtioScsiTargetRequest) (*emptypb.Empty, error)
	UpdateVirtioScsiTarget(context.Context, *UpdateVirtioScsiTargetRequest) (*VirtioScsiTarget, error)
	ListVirtioScsiTargets(context.Context, *ListVirtioScsiTargetsRequest) (*ListVirtioScsiTargetsResponse, error)
	GetVirtioScsiTarget(context.Context, *GetVirtioScsiTargetRequest) (*VirtioScsiTarget, error)
	VirtioScsiTargetStats(context.Context, *VirtioScsiTargetStatsRequest) (*VirtioScsiTargetStatsResponse, error)
	CreateVirtioScsiController(context.Context, *CreateVirtioScsiControllerRequest) (*VirtioScsiController, error)
	DeleteVirtioScsiController(context.Context, *DeleteVirtioScsiControllerRequest) (*emptypb.Empty, error)
	UpdateVirtioScsiController(context.Context, *UpdateVirtioScsiControllerRequest) (*VirtioScsiController, error)
	ListVirtioScsiControllers(context.Context, *ListVirtioScsiControllersRequest) (*ListVirtioScsiControllersResponse, error)
	GetVirtioScsiController(context.Context, *GetVirtioScsiControllerRequest) (*VirtioScsiController, error)
	VirtioScsiControllerStats(context.Context, *VirtioScsiControllerStatsRequest) (*VirtioScsiControllerStatsResponse, error)
	CreateVirtioScsiLun(context.Context, *CreateVirtioScsiLunRequest) (*VirtioScsiLun, error)
	DeleteVirtioScsiLun(context.Context, *DeleteVirtioScsiLunRequest) (*emptypb.Empty, error)
	UpdateVirtioScsiLun(context.Context, *UpdateVirtioScsiLunRequest) (*VirtioScsiLun, error)
	ListVirtioScsiLuns(context.Context, *ListVirtioScsiLunsRequest) (*ListVirtioScsiLunsResponse, error)
	GetVirtioScsiLun(context.Context, *GetVirtioScsiLunRequest) (*VirtioScsiLun, error)
	VirtioScsiLunStats(context.Context, *VirtioScsiLunStatsRequest) (*VirtioScsiLunStatsResponse, error)
}

// UnimplementedFrontendVirtioScsiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFrontendVirtioScsiServiceServer struct {
}

func (*UnimplementedFrontendVirtioScsiServiceServer) CreateVirtioScsiTarget(context.Context, *CreateVirtioScsiTargetRequest) (*VirtioScsiTarget, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtioScsiTarget not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) DeleteVirtioScsiTarget(context.Context, *DeleteVirtioScsiTargetRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtioScsiTarget not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) UpdateVirtioScsiTarget(context.Context, *UpdateVirtioScsiTargetRequest) (*VirtioScsiTarget, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtioScsiTarget not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) ListVirtioScsiTargets(context.Context, *ListVirtioScsiTargetsRequest) (*ListVirtioScsiTargetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtioScsiTargets not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) GetVirtioScsiTarget(context.Context, *GetVirtioScsiTargetRequest) (*VirtioScsiTarget, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtioScsiTarget not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiTargetStats(context.Context, *VirtioScsiTargetStatsRequest) (*VirtioScsiTargetStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiTargetStats not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) CreateVirtioScsiController(context.Context, *CreateVirtioScsiControllerRequest) (*VirtioScsiController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtioScsiController not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) DeleteVirtioScsiController(context.Context, *DeleteVirtioScsiControllerRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtioScsiController not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) UpdateVirtioScsiController(context.Context, *UpdateVirtioScsiControllerRequest) (*VirtioScsiController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtioScsiController not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) ListVirtioScsiControllers(context.Context, *ListVirtioScsiControllersRequest) (*ListVirtioScsiControllersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtioScsiControllers not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) GetVirtioScsiController(context.Context, *GetVirtioScsiControllerRequest) (*VirtioScsiController, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtioScsiController not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiControllerStats(context.Context, *VirtioScsiControllerStatsRequest) (*VirtioScsiControllerStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiControllerStats not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) CreateVirtioScsiLun(context.Context, *CreateVirtioScsiLunRequest) (*VirtioScsiLun, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtioScsiLun not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) DeleteVirtioScsiLun(context.Context, *DeleteVirtioScsiLunRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtioScsiLun not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) UpdateVirtioScsiLun(context.Context, *UpdateVirtioScsiLunRequest) (*VirtioScsiLun, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtioScsiLun not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) ListVirtioScsiLuns(context.Context, *ListVirtioScsiLunsRequest) (*ListVirtioScsiLunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtioScsiLuns not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) GetVirtioScsiLun(context.Context, *GetVirtioScsiLunRequest) (*VirtioScsiLun, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtioScsiLun not implemented")
}
func (*UnimplementedFrontendVirtioScsiServiceServer) VirtioScsiLunStats(context.Context, *VirtioScsiLunStatsRequest) (*VirtioScsiLunStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VirtioScsiLunStats not implemented")
}

func RegisterFrontendVirtioScsiServiceServer(s *grpc.Server, srv FrontendVirtioScsiServiceServer) {
	s.RegisterService(&_FrontendVirtioScsiService_serviceDesc, srv)
}

func _FrontendVirtioScsiService_CreateVirtioScsiTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtioScsiTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).CreateVirtioScsiTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).CreateVirtioScsiTarget(ctx, req.(*CreateVirtioScsiTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_DeleteVirtioScsiTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtioScsiTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).DeleteVirtioScsiTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).DeleteVirtioScsiTarget(ctx, req.(*DeleteVirtioScsiTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_UpdateVirtioScsiTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtioScsiTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).UpdateVirtioScsiTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).UpdateVirtioScsiTarget(ctx, req.(*UpdateVirtioScsiTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_ListVirtioScsiTargets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtioScsiTargetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).ListVirtioScsiTargets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiTargets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).ListVirtioScsiTargets(ctx, req.(*ListVirtioScsiTargetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_GetVirtioScsiTarget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtioScsiTargetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).GetVirtioScsiTarget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiTarget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).GetVirtioScsiTarget(ctx, req.(*GetVirtioScsiTargetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiTargetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiTargetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiTargetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiTargetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiTargetStats(ctx, req.(*VirtioScsiTargetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_CreateVirtioScsiController_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtioScsiControllerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).CreateVirtioScsiController(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiController",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).CreateVirtioScsiController(ctx, req.(*CreateVirtioScsiControllerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_DeleteVirtioScsiController_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtioScsiControllerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).DeleteVirtioScsiController(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiController",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).DeleteVirtioScsiController(ctx, req.(*DeleteVirtioScsiControllerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_UpdateVirtioScsiController_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtioScsiControllerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).UpdateVirtioScsiController(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiController",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).UpdateVirtioScsiController(ctx, req.(*UpdateVirtioScsiControllerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_ListVirtioScsiControllers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtioScsiControllersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).ListVirtioScsiControllers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiControllers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).ListVirtioScsiControllers(ctx, req.(*ListVirtioScsiControllersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_GetVirtioScsiController_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtioScsiControllerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).GetVirtioScsiController(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiController",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).GetVirtioScsiController(ctx, req.(*GetVirtioScsiControllerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiControllerStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiControllerStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiControllerStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiControllerStats(ctx, req.(*VirtioScsiControllerStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_CreateVirtioScsiLun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtioScsiLunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).CreateVirtioScsiLun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/CreateVirtioScsiLun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).CreateVirtioScsiLun(ctx, req.(*CreateVirtioScsiLunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_DeleteVirtioScsiLun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtioScsiLunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).DeleteVirtioScsiLun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/DeleteVirtioScsiLun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).DeleteVirtioScsiLun(ctx, req.(*DeleteVirtioScsiLunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_UpdateVirtioScsiLun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtioScsiLunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).UpdateVirtioScsiLun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/UpdateVirtioScsiLun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).UpdateVirtioScsiLun(ctx, req.(*UpdateVirtioScsiLunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_ListVirtioScsiLuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtioScsiLunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).ListVirtioScsiLuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/ListVirtioScsiLuns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).ListVirtioScsiLuns(ctx, req.(*ListVirtioScsiLunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_GetVirtioScsiLun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtioScsiLunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).GetVirtioScsiLun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/GetVirtioScsiLun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).GetVirtioScsiLun(ctx, req.(*GetVirtioScsiLunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FrontendVirtioScsiService_VirtioScsiLunStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtioScsiLunStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/opi_api.storage.v1.FrontendVirtioScsiService/VirtioScsiLunStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendVirtioScsiServiceServer).VirtioScsiLunStats(ctx, req.(*VirtioScsiLunStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FrontendVirtioScsiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opi_api.storage.v1.FrontendVirtioScsiService",
	HandlerType: (*FrontendVirtioScsiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtioScsiTarget",
			Handler:    _FrontendVirtioScsiService_CreateVirtioScsiTarget_Handler,
		},
		{
			MethodName: "DeleteVirtioScsiTarget",
			Handler:    _FrontendVirtioScsiService_DeleteVirtioScsiTarget_Handler,
		},
		{
			MethodName: "UpdateVirtioScsiTarget",
			Handler:    _FrontendVirtioScsiService_UpdateVirtioScsiTarget_Handler,
		},
		{
			MethodName: "ListVirtioScsiTargets",
			Handler:    _FrontendVirtioScsiService_ListVirtioScsiTargets_Handler,
		},
		{
			MethodName: "GetVirtioScsiTarget",
			Handler:    _FrontendVirtioScsiService_GetVirtioScsiTarget_Handler,
		},
		{
			MethodName: "VirtioScsiTargetStats",
			Handler:    _FrontendVirtioScsiService_VirtioScsiTargetStats_Handler,
		},
		{
			MethodName: "CreateVirtioScsiController",
			Handler:    _FrontendVirtioScsiService_CreateVirtioScsiController_Handler,
		},
		{
			MethodName: "DeleteVirtioScsiController",
			Handler:    _FrontendVirtioScsiService_DeleteVirtioScsiController_Handler,
		},
		{
			MethodName: "UpdateVirtioScsiController",
			Handler:    _FrontendVirtioScsiService_UpdateVirtioScsiController_Handler,
		},
		{
			MethodName: "ListVirtioScsiControllers",
			Handler:    _FrontendVirtioScsiService_ListVirtioScsiControllers_Handler,
		},
		{
			MethodName: "GetVirtioScsiController",
			Handler:    _FrontendVirtioScsiService_GetVirtioScsiController_Handler,
		},
		{
			MethodName: "VirtioScsiControllerStats",
			Handler:    _FrontendVirtioScsiService_VirtioScsiControllerStats_Handler,
		},
		{
			MethodName: "CreateVirtioScsiLun",
			Handler:    _FrontendVirtioScsiService_CreateVirtioScsiLun_Handler,
		},
		{
			MethodName: "DeleteVirtioScsiLun",
			Handler:    _FrontendVirtioScsiService_DeleteVirtioScsiLun_Handler,
		},
		{
			MethodName: "UpdateVirtioScsiLun",
			Handler:    _FrontendVirtioScsiService_UpdateVirtioScsiLun_Handler,
		},
		{
			MethodName: "ListVirtioScsiLuns",
			Handler:    _FrontendVirtioScsiService_ListVirtioScsiLuns_Handler,
		},
		{
			MethodName: "GetVirtioScsiLun",
			Handler:    _FrontendVirtioScsiService_GetVirtioScsiLun_Handler,
		},
		{
			MethodName: "VirtioScsiLunStats",
			Handler:    _FrontendVirtioScsiService_VirtioScsiLunStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frontend_virtio_scsi.proto",
}
