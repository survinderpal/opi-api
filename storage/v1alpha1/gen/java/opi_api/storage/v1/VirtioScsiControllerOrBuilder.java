// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_virtio_scsi.proto

package opi_api.storage.v1;

public interface VirtioScsiControllerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.storage.v1.VirtioScsiController)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  opi_api.common.v1.ObjectKey getId();
  /**
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * xPU's PCI ID for the controller
   * </pre>
   *
   * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 2;</code>
   * @return Whether the pcieId field is set.
   */
  boolean hasPcieId();
  /**
   * <pre>
   * xPU's PCI ID for the controller
   * </pre>
   *
   * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 2;</code>
   * @return The pcieId.
   */
  opi_api.storage.v1.PciEndpoint getPcieId();
  /**
   * <pre>
   * xPU's PCI ID for the controller
   * </pre>
   *
   * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 2;</code>
   */
  opi_api.storage.v1.PciEndpointOrBuilder getPcieIdOrBuilder();
}
