// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend_nvme_pcie.proto

package opi_api.storage.v1;

/**
 * Protobuf type {@code opi_api.storage.v1.NVMeControllerSpec}
 */
public final class NVMeControllerSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.storage.v1.NVMeControllerSpec)
    NVMeControllerSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NVMeControllerSpec.newBuilder() to construct.
  private NVMeControllerSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NVMeControllerSpec() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new NVMeControllerSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NVMeControllerSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (id_ != null) {
              subBuilder = id_.toBuilder();
            }
            id_ = input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(id_);
              id_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            nvmeControllerId_ = input.readInt32();
            break;
          }
          case 26: {
            opi_api.common.v1.ObjectKey.Builder subBuilder = null;
            if (subsystemId_ != null) {
              subBuilder = subsystemId_.toBuilder();
            }
            subsystemId_ = input.readMessage(opi_api.common.v1.ObjectKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(subsystemId_);
              subsystemId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            opi_api.storage.v1.PciEndpoint.Builder subBuilder = null;
            if (pcieId_ != null) {
              subBuilder = pcieId_.toBuilder();
            }
            pcieId_ = input.readMessage(opi_api.storage.v1.PciEndpoint.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pcieId_);
              pcieId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            maxNsq_ = input.readInt32();
            break;
          }
          case 48: {

            maxNcq_ = input.readInt32();
            break;
          }
          case 56: {

            sqes_ = input.readInt32();
            break;
          }
          case 64: {

            cqes_ = input.readInt32();
            break;
          }
          case 72: {

            maxNamespaces_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_NVMeControllerSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_NVMeControllerSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.storage.v1.NVMeControllerSpec.class, opi_api.storage.v1.NVMeControllerSpec.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private opi_api.common.v1.ObjectKey id_;
  /**
   * <pre>
   * object's unique identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return id_ != null;
  }
  /**
   * <pre>
   * object's unique identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getId() {
    return id_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
  }
  /**
   * <pre>
   * object's unique identifier
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder() {
    return getId();
  }

  public static final int NVME_CONTROLLER_ID_FIELD_NUMBER = 2;
  private int nvmeControllerId_;
  /**
   * <pre>
   * subsystem controller id range: 0 to 65535.
   * must not be reused under the same subsystem
   * </pre>
   *
   * <code>int32 nvme_controller_id = 2;</code>
   * @return The nvmeControllerId.
   */
  @java.lang.Override
  public int getNvmeControllerId() {
    return nvmeControllerId_;
  }

  public static final int SUBSYSTEM_ID_FIELD_NUMBER = 3;
  private opi_api.common.v1.ObjectKey subsystemId_;
  /**
   * <pre>
   * subsystem information
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
   * @return Whether the subsystemId field is set.
   */
  @java.lang.Override
  public boolean hasSubsystemId() {
    return subsystemId_ != null;
  }
  /**
   * <pre>
   * subsystem information
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
   * @return The subsystemId.
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKey getSubsystemId() {
    return subsystemId_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : subsystemId_;
  }
  /**
   * <pre>
   * subsystem information
   * </pre>
   *
   * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
   */
  @java.lang.Override
  public opi_api.common.v1.ObjectKeyOrBuilder getSubsystemIdOrBuilder() {
    return getSubsystemId();
  }

  public static final int PCIE_ID_FIELD_NUMBER = 4;
  private opi_api.storage.v1.PciEndpoint pcieId_;
  /**
   * <pre>
   * xPU's PCI ID for the controller
   * </pre>
   *
   * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
   * @return Whether the pcieId field is set.
   */
  @java.lang.Override
  public boolean hasPcieId() {
    return pcieId_ != null;
  }
  /**
   * <pre>
   * xPU's PCI ID for the controller
   * </pre>
   *
   * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
   * @return The pcieId.
   */
  @java.lang.Override
  public opi_api.storage.v1.PciEndpoint getPcieId() {
    return pcieId_ == null ? opi_api.storage.v1.PciEndpoint.getDefaultInstance() : pcieId_;
  }
  /**
   * <pre>
   * xPU's PCI ID for the controller
   * </pre>
   *
   * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
   */
  @java.lang.Override
  public opi_api.storage.v1.PciEndpointOrBuilder getPcieIdOrBuilder() {
    return getPcieId();
  }

  public static final int MAX_NSQ_FIELD_NUMBER = 5;
  private int maxNsq_;
  /**
   * <pre>
   * maximum number of host submission queues allowed.
   * If not set, the xPU will provide a default.
   * </pre>
   *
   * <code>int32 max_nsq = 5;</code>
   * @return The maxNsq.
   */
  @java.lang.Override
  public int getMaxNsq() {
    return maxNsq_;
  }

  public static final int MAX_NCQ_FIELD_NUMBER = 6;
  private int maxNcq_;
  /**
   * <pre>
   * maximum number of host completion queues allowed.
   * If not set, the xPU will provide a default.
   * </pre>
   *
   * <code>int32 max_ncq = 6;</code>
   * @return The maxNcq.
   */
  @java.lang.Override
  public int getMaxNcq() {
    return maxNcq_;
  }

  public static final int SQES_FIELD_NUMBER = 7;
  private int sqes_;
  /**
   * <pre>
   * maximum number of submission queue entries per submission queue, as a power of 2.
   * default value as per spec is 6
   * </pre>
   *
   * <code>int32 sqes = 7;</code>
   * @return The sqes.
   */
  @java.lang.Override
  public int getSqes() {
    return sqes_;
  }

  public static final int CQES_FIELD_NUMBER = 8;
  private int cqes_;
  /**
   * <pre>
   * maximum number of completion queue entries per completion queue, as a power of 2.
   * default value as per spec is 4
   * </pre>
   *
   * <code>int32 cqes = 8;</code>
   * @return The cqes.
   */
  @java.lang.Override
  public int getCqes() {
    return cqes_;
  }

  public static final int MAX_NAMESPACES_FIELD_NUMBER = 9;
  private int maxNamespaces_;
  /**
   * <pre>
   * maximum Number of namespaces that will be provisioned under
   * the controller.
   * </pre>
   *
   * <code>int32 max_namespaces = 9;</code>
   * @return The maxNamespaces.
   */
  @java.lang.Override
  public int getMaxNamespaces() {
    return maxNamespaces_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != null) {
      output.writeMessage(1, getId());
    }
    if (nvmeControllerId_ != 0) {
      output.writeInt32(2, nvmeControllerId_);
    }
    if (subsystemId_ != null) {
      output.writeMessage(3, getSubsystemId());
    }
    if (pcieId_ != null) {
      output.writeMessage(4, getPcieId());
    }
    if (maxNsq_ != 0) {
      output.writeInt32(5, maxNsq_);
    }
    if (maxNcq_ != 0) {
      output.writeInt32(6, maxNcq_);
    }
    if (sqes_ != 0) {
      output.writeInt32(7, sqes_);
    }
    if (cqes_ != 0) {
      output.writeInt32(8, cqes_);
    }
    if (maxNamespaces_ != 0) {
      output.writeInt32(9, maxNamespaces_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getId());
    }
    if (nvmeControllerId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, nvmeControllerId_);
    }
    if (subsystemId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSubsystemId());
    }
    if (pcieId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getPcieId());
    }
    if (maxNsq_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, maxNsq_);
    }
    if (maxNcq_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, maxNcq_);
    }
    if (sqes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, sqes_);
    }
    if (cqes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, cqes_);
    }
    if (maxNamespaces_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, maxNamespaces_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.storage.v1.NVMeControllerSpec)) {
      return super.equals(obj);
    }
    opi_api.storage.v1.NVMeControllerSpec other = (opi_api.storage.v1.NVMeControllerSpec) obj;

    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (getNvmeControllerId()
        != other.getNvmeControllerId()) return false;
    if (hasSubsystemId() != other.hasSubsystemId()) return false;
    if (hasSubsystemId()) {
      if (!getSubsystemId()
          .equals(other.getSubsystemId())) return false;
    }
    if (hasPcieId() != other.hasPcieId()) return false;
    if (hasPcieId()) {
      if (!getPcieId()
          .equals(other.getPcieId())) return false;
    }
    if (getMaxNsq()
        != other.getMaxNsq()) return false;
    if (getMaxNcq()
        != other.getMaxNcq()) return false;
    if (getSqes()
        != other.getSqes()) return false;
    if (getCqes()
        != other.getCqes()) return false;
    if (getMaxNamespaces()
        != other.getMaxNamespaces()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    hash = (37 * hash) + NVME_CONTROLLER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getNvmeControllerId();
    if (hasSubsystemId()) {
      hash = (37 * hash) + SUBSYSTEM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSubsystemId().hashCode();
    }
    if (hasPcieId()) {
      hash = (37 * hash) + PCIE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPcieId().hashCode();
    }
    hash = (37 * hash) + MAX_NSQ_FIELD_NUMBER;
    hash = (53 * hash) + getMaxNsq();
    hash = (37 * hash) + MAX_NCQ_FIELD_NUMBER;
    hash = (53 * hash) + getMaxNcq();
    hash = (37 * hash) + SQES_FIELD_NUMBER;
    hash = (53 * hash) + getSqes();
    hash = (37 * hash) + CQES_FIELD_NUMBER;
    hash = (53 * hash) + getCqes();
    hash = (37 * hash) + MAX_NAMESPACES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxNamespaces();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.storage.v1.NVMeControllerSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.storage.v1.NVMeControllerSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code opi_api.storage.v1.NVMeControllerSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.storage.v1.NVMeControllerSpec)
      opi_api.storage.v1.NVMeControllerSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_NVMeControllerSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_NVMeControllerSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.storage.v1.NVMeControllerSpec.class, opi_api.storage.v1.NVMeControllerSpec.Builder.class);
    }

    // Construct using opi_api.storage.v1.NVMeControllerSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (idBuilder_ == null) {
        id_ = null;
      } else {
        id_ = null;
        idBuilder_ = null;
      }
      nvmeControllerId_ = 0;

      if (subsystemIdBuilder_ == null) {
        subsystemId_ = null;
      } else {
        subsystemId_ = null;
        subsystemIdBuilder_ = null;
      }
      if (pcieIdBuilder_ == null) {
        pcieId_ = null;
      } else {
        pcieId_ = null;
        pcieIdBuilder_ = null;
      }
      maxNsq_ = 0;

      maxNcq_ = 0;

      sqes_ = 0;

      cqes_ = 0;

      maxNamespaces_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.storage.v1.FrontendNvmePcieProto.internal_static_opi_api_storage_v1_NVMeControllerSpec_descriptor;
    }

    @java.lang.Override
    public opi_api.storage.v1.NVMeControllerSpec getDefaultInstanceForType() {
      return opi_api.storage.v1.NVMeControllerSpec.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.storage.v1.NVMeControllerSpec build() {
      opi_api.storage.v1.NVMeControllerSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.storage.v1.NVMeControllerSpec buildPartial() {
      opi_api.storage.v1.NVMeControllerSpec result = new opi_api.storage.v1.NVMeControllerSpec(this);
      if (idBuilder_ == null) {
        result.id_ = id_;
      } else {
        result.id_ = idBuilder_.build();
      }
      result.nvmeControllerId_ = nvmeControllerId_;
      if (subsystemIdBuilder_ == null) {
        result.subsystemId_ = subsystemId_;
      } else {
        result.subsystemId_ = subsystemIdBuilder_.build();
      }
      if (pcieIdBuilder_ == null) {
        result.pcieId_ = pcieId_;
      } else {
        result.pcieId_ = pcieIdBuilder_.build();
      }
      result.maxNsq_ = maxNsq_;
      result.maxNcq_ = maxNcq_;
      result.sqes_ = sqes_;
      result.cqes_ = cqes_;
      result.maxNamespaces_ = maxNamespaces_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.storage.v1.NVMeControllerSpec) {
        return mergeFrom((opi_api.storage.v1.NVMeControllerSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.storage.v1.NVMeControllerSpec other) {
      if (other == opi_api.storage.v1.NVMeControllerSpec.getDefaultInstance()) return this;
      if (other.hasId()) {
        mergeId(other.getId());
      }
      if (other.getNvmeControllerId() != 0) {
        setNvmeControllerId(other.getNvmeControllerId());
      }
      if (other.hasSubsystemId()) {
        mergeSubsystemId(other.getSubsystemId());
      }
      if (other.hasPcieId()) {
        mergePcieId(other.getPcieId());
      }
      if (other.getMaxNsq() != 0) {
        setMaxNsq(other.getMaxNsq());
      }
      if (other.getMaxNcq() != 0) {
        setMaxNcq(other.getMaxNcq());
      }
      if (other.getSqes() != 0) {
        setSqes(other.getSqes());
      }
      if (other.getCqes() != 0) {
        setCqes(other.getCqes());
      }
      if (other.getMaxNamespaces() != 0) {
        setMaxNamespaces(other.getMaxNamespaces());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.storage.v1.NVMeControllerSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.storage.v1.NVMeControllerSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private opi_api.common.v1.ObjectKey id_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> idBuilder_;
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return idBuilder_ != null || id_ != null;
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     * @return The id.
     */
    public opi_api.common.v1.ObjectKey getId() {
      if (idBuilder_ == null) {
        return id_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
      } else {
        return idBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder setId(opi_api.common.v1.ObjectKey value) {
      if (idBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        id_ = value;
        onChanged();
      } else {
        idBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder setId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (idBuilder_ == null) {
        id_ = builderForValue.build();
        onChanged();
      } else {
        idBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder mergeId(opi_api.common.v1.ObjectKey value) {
      if (idBuilder_ == null) {
        if (id_ != null) {
          id_ =
            opi_api.common.v1.ObjectKey.newBuilder(id_).mergeFrom(value).buildPartial();
        } else {
          id_ = value;
        }
        onChanged();
      } else {
        idBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public Builder clearId() {
      if (idBuilder_ == null) {
        id_ = null;
        onChanged();
      } else {
        id_ = null;
        idBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getIdBuilder() {
      
      onChanged();
      return getIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    public opi_api.common.v1.ObjectKeyOrBuilder getIdOrBuilder() {
      if (idBuilder_ != null) {
        return idBuilder_.getMessageOrBuilder();
      } else {
        return id_ == null ?
            opi_api.common.v1.ObjectKey.getDefaultInstance() : id_;
      }
    }
    /**
     * <pre>
     * object's unique identifier
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getIdFieldBuilder() {
      if (idBuilder_ == null) {
        idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                getId(),
                getParentForChildren(),
                isClean());
        id_ = null;
      }
      return idBuilder_;
    }

    private int nvmeControllerId_ ;
    /**
     * <pre>
     * subsystem controller id range: 0 to 65535.
     * must not be reused under the same subsystem
     * </pre>
     *
     * <code>int32 nvme_controller_id = 2;</code>
     * @return The nvmeControllerId.
     */
    @java.lang.Override
    public int getNvmeControllerId() {
      return nvmeControllerId_;
    }
    /**
     * <pre>
     * subsystem controller id range: 0 to 65535.
     * must not be reused under the same subsystem
     * </pre>
     *
     * <code>int32 nvme_controller_id = 2;</code>
     * @param value The nvmeControllerId to set.
     * @return This builder for chaining.
     */
    public Builder setNvmeControllerId(int value) {
      
      nvmeControllerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * subsystem controller id range: 0 to 65535.
     * must not be reused under the same subsystem
     * </pre>
     *
     * <code>int32 nvme_controller_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNvmeControllerId() {
      
      nvmeControllerId_ = 0;
      onChanged();
      return this;
    }

    private opi_api.common.v1.ObjectKey subsystemId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> subsystemIdBuilder_;
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     * @return Whether the subsystemId field is set.
     */
    public boolean hasSubsystemId() {
      return subsystemIdBuilder_ != null || subsystemId_ != null;
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     * @return The subsystemId.
     */
    public opi_api.common.v1.ObjectKey getSubsystemId() {
      if (subsystemIdBuilder_ == null) {
        return subsystemId_ == null ? opi_api.common.v1.ObjectKey.getDefaultInstance() : subsystemId_;
      } else {
        return subsystemIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    public Builder setSubsystemId(opi_api.common.v1.ObjectKey value) {
      if (subsystemIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        subsystemId_ = value;
        onChanged();
      } else {
        subsystemIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    public Builder setSubsystemId(
        opi_api.common.v1.ObjectKey.Builder builderForValue) {
      if (subsystemIdBuilder_ == null) {
        subsystemId_ = builderForValue.build();
        onChanged();
      } else {
        subsystemIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    public Builder mergeSubsystemId(opi_api.common.v1.ObjectKey value) {
      if (subsystemIdBuilder_ == null) {
        if (subsystemId_ != null) {
          subsystemId_ =
            opi_api.common.v1.ObjectKey.newBuilder(subsystemId_).mergeFrom(value).buildPartial();
        } else {
          subsystemId_ = value;
        }
        onChanged();
      } else {
        subsystemIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    public Builder clearSubsystemId() {
      if (subsystemIdBuilder_ == null) {
        subsystemId_ = null;
        onChanged();
      } else {
        subsystemId_ = null;
        subsystemIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    public opi_api.common.v1.ObjectKey.Builder getSubsystemIdBuilder() {
      
      onChanged();
      return getSubsystemIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    public opi_api.common.v1.ObjectKeyOrBuilder getSubsystemIdOrBuilder() {
      if (subsystemIdBuilder_ != null) {
        return subsystemIdBuilder_.getMessageOrBuilder();
      } else {
        return subsystemId_ == null ?
            opi_api.common.v1.ObjectKey.getDefaultInstance() : subsystemId_;
      }
    }
    /**
     * <pre>
     * subsystem information
     * </pre>
     *
     * <code>.opi_api.common.v1.ObjectKey subsystem_id = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder> 
        getSubsystemIdFieldBuilder() {
      if (subsystemIdBuilder_ == null) {
        subsystemIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.common.v1.ObjectKey, opi_api.common.v1.ObjectKey.Builder, opi_api.common.v1.ObjectKeyOrBuilder>(
                getSubsystemId(),
                getParentForChildren(),
                isClean());
        subsystemId_ = null;
      }
      return subsystemIdBuilder_;
    }

    private opi_api.storage.v1.PciEndpoint pcieId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.storage.v1.PciEndpoint, opi_api.storage.v1.PciEndpoint.Builder, opi_api.storage.v1.PciEndpointOrBuilder> pcieIdBuilder_;
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     * @return Whether the pcieId field is set.
     */
    public boolean hasPcieId() {
      return pcieIdBuilder_ != null || pcieId_ != null;
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     * @return The pcieId.
     */
    public opi_api.storage.v1.PciEndpoint getPcieId() {
      if (pcieIdBuilder_ == null) {
        return pcieId_ == null ? opi_api.storage.v1.PciEndpoint.getDefaultInstance() : pcieId_;
      } else {
        return pcieIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    public Builder setPcieId(opi_api.storage.v1.PciEndpoint value) {
      if (pcieIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pcieId_ = value;
        onChanged();
      } else {
        pcieIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    public Builder setPcieId(
        opi_api.storage.v1.PciEndpoint.Builder builderForValue) {
      if (pcieIdBuilder_ == null) {
        pcieId_ = builderForValue.build();
        onChanged();
      } else {
        pcieIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    public Builder mergePcieId(opi_api.storage.v1.PciEndpoint value) {
      if (pcieIdBuilder_ == null) {
        if (pcieId_ != null) {
          pcieId_ =
            opi_api.storage.v1.PciEndpoint.newBuilder(pcieId_).mergeFrom(value).buildPartial();
        } else {
          pcieId_ = value;
        }
        onChanged();
      } else {
        pcieIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    public Builder clearPcieId() {
      if (pcieIdBuilder_ == null) {
        pcieId_ = null;
        onChanged();
      } else {
        pcieId_ = null;
        pcieIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    public opi_api.storage.v1.PciEndpoint.Builder getPcieIdBuilder() {
      
      onChanged();
      return getPcieIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    public opi_api.storage.v1.PciEndpointOrBuilder getPcieIdOrBuilder() {
      if (pcieIdBuilder_ != null) {
        return pcieIdBuilder_.getMessageOrBuilder();
      } else {
        return pcieId_ == null ?
            opi_api.storage.v1.PciEndpoint.getDefaultInstance() : pcieId_;
      }
    }
    /**
     * <pre>
     * xPU's PCI ID for the controller
     * </pre>
     *
     * <code>.opi_api.storage.v1.PciEndpoint pcie_id = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.storage.v1.PciEndpoint, opi_api.storage.v1.PciEndpoint.Builder, opi_api.storage.v1.PciEndpointOrBuilder> 
        getPcieIdFieldBuilder() {
      if (pcieIdBuilder_ == null) {
        pcieIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.storage.v1.PciEndpoint, opi_api.storage.v1.PciEndpoint.Builder, opi_api.storage.v1.PciEndpointOrBuilder>(
                getPcieId(),
                getParentForChildren(),
                isClean());
        pcieId_ = null;
      }
      return pcieIdBuilder_;
    }

    private int maxNsq_ ;
    /**
     * <pre>
     * maximum number of host submission queues allowed.
     * If not set, the xPU will provide a default.
     * </pre>
     *
     * <code>int32 max_nsq = 5;</code>
     * @return The maxNsq.
     */
    @java.lang.Override
    public int getMaxNsq() {
      return maxNsq_;
    }
    /**
     * <pre>
     * maximum number of host submission queues allowed.
     * If not set, the xPU will provide a default.
     * </pre>
     *
     * <code>int32 max_nsq = 5;</code>
     * @param value The maxNsq to set.
     * @return This builder for chaining.
     */
    public Builder setMaxNsq(int value) {
      
      maxNsq_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * maximum number of host submission queues allowed.
     * If not set, the xPU will provide a default.
     * </pre>
     *
     * <code>int32 max_nsq = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxNsq() {
      
      maxNsq_ = 0;
      onChanged();
      return this;
    }

    private int maxNcq_ ;
    /**
     * <pre>
     * maximum number of host completion queues allowed.
     * If not set, the xPU will provide a default.
     * </pre>
     *
     * <code>int32 max_ncq = 6;</code>
     * @return The maxNcq.
     */
    @java.lang.Override
    public int getMaxNcq() {
      return maxNcq_;
    }
    /**
     * <pre>
     * maximum number of host completion queues allowed.
     * If not set, the xPU will provide a default.
     * </pre>
     *
     * <code>int32 max_ncq = 6;</code>
     * @param value The maxNcq to set.
     * @return This builder for chaining.
     */
    public Builder setMaxNcq(int value) {
      
      maxNcq_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * maximum number of host completion queues allowed.
     * If not set, the xPU will provide a default.
     * </pre>
     *
     * <code>int32 max_ncq = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxNcq() {
      
      maxNcq_ = 0;
      onChanged();
      return this;
    }

    private int sqes_ ;
    /**
     * <pre>
     * maximum number of submission queue entries per submission queue, as a power of 2.
     * default value as per spec is 6
     * </pre>
     *
     * <code>int32 sqes = 7;</code>
     * @return The sqes.
     */
    @java.lang.Override
    public int getSqes() {
      return sqes_;
    }
    /**
     * <pre>
     * maximum number of submission queue entries per submission queue, as a power of 2.
     * default value as per spec is 6
     * </pre>
     *
     * <code>int32 sqes = 7;</code>
     * @param value The sqes to set.
     * @return This builder for chaining.
     */
    public Builder setSqes(int value) {
      
      sqes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * maximum number of submission queue entries per submission queue, as a power of 2.
     * default value as per spec is 6
     * </pre>
     *
     * <code>int32 sqes = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearSqes() {
      
      sqes_ = 0;
      onChanged();
      return this;
    }

    private int cqes_ ;
    /**
     * <pre>
     * maximum number of completion queue entries per completion queue, as a power of 2.
     * default value as per spec is 4
     * </pre>
     *
     * <code>int32 cqes = 8;</code>
     * @return The cqes.
     */
    @java.lang.Override
    public int getCqes() {
      return cqes_;
    }
    /**
     * <pre>
     * maximum number of completion queue entries per completion queue, as a power of 2.
     * default value as per spec is 4
     * </pre>
     *
     * <code>int32 cqes = 8;</code>
     * @param value The cqes to set.
     * @return This builder for chaining.
     */
    public Builder setCqes(int value) {
      
      cqes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * maximum number of completion queue entries per completion queue, as a power of 2.
     * default value as per spec is 4
     * </pre>
     *
     * <code>int32 cqes = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCqes() {
      
      cqes_ = 0;
      onChanged();
      return this;
    }

    private int maxNamespaces_ ;
    /**
     * <pre>
     * maximum Number of namespaces that will be provisioned under
     * the controller.
     * </pre>
     *
     * <code>int32 max_namespaces = 9;</code>
     * @return The maxNamespaces.
     */
    @java.lang.Override
    public int getMaxNamespaces() {
      return maxNamespaces_;
    }
    /**
     * <pre>
     * maximum Number of namespaces that will be provisioned under
     * the controller.
     * </pre>
     *
     * <code>int32 max_namespaces = 9;</code>
     * @param value The maxNamespaces to set.
     * @return This builder for chaining.
     */
    public Builder setMaxNamespaces(int value) {
      
      maxNamespaces_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * maximum Number of namespaces that will be provisioned under
     * the controller.
     * </pre>
     *
     * <code>int32 max_namespaces = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxNamespaces() {
      
      maxNamespaces_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.storage.v1.NVMeControllerSpec)
  }

  // @@protoc_insertion_point(class_scope:opi_api.storage.v1.NVMeControllerSpec)
  private static final opi_api.storage.v1.NVMeControllerSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.storage.v1.NVMeControllerSpec();
  }

  public static opi_api.storage.v1.NVMeControllerSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NVMeControllerSpec>
      PARSER = new com.google.protobuf.AbstractParser<NVMeControllerSpec>() {
    @java.lang.Override
    public NVMeControllerSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new NVMeControllerSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NVMeControllerSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NVMeControllerSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.storage.v1.NVMeControllerSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

